{"cells":[{"cell_type":"code","source":["pip install pycaret"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s5Iu6kvcIYB3","executionInfo":{"status":"ok","timestamp":1728262500102,"user_tz":-540,"elapsed":40704,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"a5cdc78a-b45d-41ad-f25d-bb557e529c3f"},"id":"s5Iu6kvcIYB3","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pycaret\n","  Downloading pycaret-3.3.2-py3-none-any.whl.metadata (17 kB)\n","Requirement already satisfied: ipython>=5.5.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.34.0)\n","Requirement already satisfied: ipywidgets>=7.6.5 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.7.1)\n","Requirement already satisfied: tqdm>=4.62.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.66.5)\n","Requirement already satisfied: numpy<1.27,>=1.21 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.26.4)\n","Collecting pandas<2.2.0 (from pycaret)\n","  Downloading pandas-2.1.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (18 kB)\n","Requirement already satisfied: jinja2>=3 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.1.4)\n","Collecting scipy<=1.11.4,>=1.6.1 (from pycaret)\n","  Downloading scipy-1.11.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.4/60.4 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting joblib<1.4,>=1.2.0 (from pycaret)\n","  Downloading joblib-1.3.2-py3-none-any.whl.metadata (5.4 kB)\n","Requirement already satisfied: scikit-learn>1.4.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5.2)\n","Collecting pyod>=1.1.3 (from pycaret)\n","  Downloading pyod-2.0.2.tar.gz (165 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m165.8/165.8 kB\u001b[0m \u001b[31m12.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: imbalanced-learn>=0.12.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.12.3)\n","Collecting category-encoders>=2.4.0 (from pycaret)\n","  Downloading category_encoders-2.6.4-py2.py3-none-any.whl.metadata (8.0 kB)\n","Requirement already satisfied: lightgbm>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.5.0)\n","Requirement already satisfied: numba>=0.55.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.60.0)\n","Requirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.32.3)\n","Requirement already satisfied: psutil>=5.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.5)\n","Requirement already satisfied: markupsafe>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.1.5)\n","Requirement already satisfied: importlib-metadata>=4.12.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (8.4.0)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.10.4)\n","Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.2.1)\n","Collecting deprecation>=2.1.0 (from pycaret)\n","  Downloading deprecation-2.1.0-py2.py3-none-any.whl.metadata (4.6 kB)\n","Collecting xxhash (from pycaret)\n","  Downloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n","Requirement already satisfied: matplotlib<3.8.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.7.1)\n","Collecting scikit-plot>=0.3.7 (from pycaret)\n","  Downloading scikit_plot-0.3.7-py3-none-any.whl.metadata (7.1 kB)\n","Requirement already satisfied: yellowbrick>=1.4 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5)\n","Requirement already satisfied: plotly>=5.14.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.24.1)\n","Collecting kaleido>=0.2.1 (from pycaret)\n","  Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl.metadata (15 kB)\n","Collecting schemdraw==0.15 (from pycaret)\n","  Downloading schemdraw-0.15-py3-none-any.whl.metadata (2.2 kB)\n","Collecting plotly-resampler>=0.8.3.1 (from pycaret)\n","  Downloading plotly_resampler-0.10.0-py3-none-any.whl.metadata (13 kB)\n","Requirement already satisfied: statsmodels>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.14.3)\n","Collecting sktime==0.26.0 (from pycaret)\n","  Downloading sktime-0.26.0-py3-none-any.whl.metadata (29 kB)\n","Collecting tbats>=1.1.3 (from pycaret)\n","  Downloading tbats-1.1.3-py3-none-any.whl.metadata (3.8 kB)\n","Collecting pmdarima>=2.0.4 (from pycaret)\n","  Downloading pmdarima-2.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (7.8 kB)\n","Collecting wurlitzer (from pycaret)\n","  Downloading wurlitzer-3.1.1-py3-none-any.whl.metadata (2.5 kB)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from sktime==0.26.0->pycaret) (24.1)\n","Collecting scikit-base<0.8.0 (from sktime==0.26.0->pycaret)\n","  Downloading scikit_base-0.7.8-py3-none-any.whl.metadata (8.8 kB)\n","Collecting scikit-learn>1.4.0 (from pycaret)\n","  Downloading scikit_learn-1.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\n","Requirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category-encoders>=2.4.0->pycaret) (0.5.6)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn>=0.12.0->pycaret) (3.5.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.12.0->pycaret) (3.20.2)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (71.0.4)\n","Collecting jedi>=0.16 (from ipython>=5.5.0->pycaret)\n","  Using cached jedi-0.19.1-py2.py3-none-any.whl.metadata (22 kB)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.7.5)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (5.7.1)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (3.0.48)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (2.18.0)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.2.0)\n","Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.1.7)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.9.0)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (5.5.6)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (0.2.0)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.6.9)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.0.13)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (1.3.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (4.54.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (1.4.7)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (10.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (3.1.4)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.8.0->pycaret) (2.8.2)\n","Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (2.20.0)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (4.23.0)\n","Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (5.7.2)\n","Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.55.0->pycaret) (0.43.0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.2.0->pycaret) (2024.2)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.2.0->pycaret) (2024.2)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.14.0->pycaret) (9.0.0)\n","Collecting dash>=2.9.0 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash-2.18.1-py3-none-any.whl.metadata (10 kB)\n","Collecting orjson<4.0.0,>=3.8.0 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading orjson-3.10.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (50 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.4/50.4 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting tsdownsample>=0.1.3 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading tsdownsample-0.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (7.9 kB)\n","Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima>=2.0.4->pycaret) (3.0.11)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima>=2.0.4->pycaret) (2.2.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2024.8.30)\n","Requirement already satisfied: Flask<3.1,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.5)\n","Requirement already satisfied: Werkzeug<3.1 in /usr/local/lib/python3.10/dist-packages (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (3.0.4)\n","Collecting dash-html-components==2.0.0 (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_html_components-2.0.0-py3-none-any.whl.metadata (3.8 kB)\n","Collecting dash-core-components==2.0.0 (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_core_components-2.0.0-py3-none-any.whl.metadata (2.9 kB)\n","Collecting dash-table==5.0.0 (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_table-5.0.0-py3-none-any.whl.metadata (2.4 kB)\n","Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (4.12.2)\n","Collecting retrying (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading retrying-1.3.4-py3-none-any.whl.metadata (6.9 kB)\n","Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (1.6.0)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.1.12)\n","Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.3.3)\n","Requirement already satisfied: parso<0.9.0,>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=5.5.0->pycaret) (0.8.4)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (24.2.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (2023.12.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.35.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.20.0)\n","Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core!=5.0.*,>=4.12->nbformat>=4.2.0->pycaret) (4.3.6)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.1->category-encoders>=2.4.0->pycaret) (1.16.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=5.5.0->pycaret) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.5.0->pycaret) (0.2.13)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.5)\n","Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.0)\n","Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash>=2.9.0->plotly-resampler>=0.8.3.1->pycaret) (8.1.7)\n","Requirement already satisfied: pyzmq<25,>=17 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (24.0.1)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (23.1.0)\n","Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.4)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.8.3)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.18.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.21.0)\n","Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.1.0)\n","Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.10/dist-packages (from nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.2.4)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.9.4)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.12.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.1.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.7.1)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.4)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.3.0)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.4)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.10.0)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.5.1)\n","Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.3.0)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.2.0)\n","Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.10/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.24.0)\n","Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.17.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.6)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->nbconvert>=5->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.5.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.22)\n","Requirement already satisfied: anyio<4,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (3.7.1)\n","Requirement already satisfied: websocket-client in /usr/local/lib/python3.10/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.8.0)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.3.1)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<4,>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.2.2)\n","Downloading pycaret-3.3.2-py3-none-any.whl (486 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m486.1/486.1 kB\u001b[0m \u001b[31m27.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading schemdraw-0.15-py3-none-any.whl (106 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m106.8/106.8 kB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sktime-0.26.0-py3-none-any.whl (21.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.8/21.8 MB\u001b[0m \u001b[31m50.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading category_encoders-2.6.4-py2.py3-none-any.whl (82 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m82.0/82.0 kB\u001b[0m \u001b[31m6.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\n","Downloading joblib-1.3.2-py3-none-any.whl (302 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m302.2/302.2 kB\u001b[0m \u001b[31m22.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.9/79.9 MB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pandas-2.1.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.3/12.3 MB\u001b[0m \u001b[31m92.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading plotly_resampler-0.10.0-py3-none-any.whl (80 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m80.7/80.7 kB\u001b[0m \u001b[31m6.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pmdarima-2.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m72.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading scikit_learn-1.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.1/12.1 MB\u001b[0m \u001b[31m98.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n","Downloading scipy-1.11.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (36.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m36.4/36.4 MB\u001b[0m \u001b[31m14.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tbats-1.1.3-py3-none-any.whl (44 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.0/44.0 kB\u001b[0m \u001b[31m3.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading wurlitzer-3.1.1-py3-none-any.whl (8.6 kB)\n","Downloading xxhash-3.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dash-2.18.1-py3-none-any.whl (7.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.5/7.5 MB\u001b[0m \u001b[31m95.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n","Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n","Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n","Using cached jedi-0.19.1-py2.py3-none-any.whl (1.6 MB)\n","Downloading orjson-3.10.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (141 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m141.9/141.9 kB\u001b[0m \u001b[31m13.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading scikit_base-0.7.8-py3-none-any.whl (130 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m130.1/130.1 kB\u001b[0m \u001b[31m12.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading tsdownsample-0.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m79.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading retrying-1.3.4-py3-none-any.whl (11 kB)\n","Building wheels for collected packages: pyod\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyod: filename=pyod-2.0.2-py3-none-any.whl size=198469 sha256=4d588615ba5a58a69a408e842277c9013adcb8b6ebcc58a7a76f6a190d4bbfea\n","  Stored in directory: /root/.cache/pip/wheels/77/c2/20/34d1f15b41b701ba69f42a32304825810d680754d509f91391\n","Successfully built pyod\n","Installing collected packages: kaleido, dash-table, dash-html-components, dash-core-components, xxhash, wurlitzer, tsdownsample, scipy, scikit-base, schemdraw, retrying, orjson, joblib, jedi, deprecation, scikit-learn, pandas, sktime, scikit-plot, pyod, dash, pmdarima, plotly-resampler, category-encoders, tbats, pycaret\n","  Attempting uninstall: scipy\n","    Found existing installation: scipy 1.13.1\n","    Uninstalling scipy-1.13.1:\n","      Successfully uninstalled scipy-1.13.1\n","  Attempting uninstall: joblib\n","    Found existing installation: joblib 1.4.2\n","    Uninstalling joblib-1.4.2:\n","      Successfully uninstalled joblib-1.4.2\n","  Attempting uninstall: scikit-learn\n","    Found existing installation: scikit-learn 1.5.2\n","    Uninstalling scikit-learn-1.5.2:\n","      Successfully uninstalled scikit-learn-1.5.2\n","  Attempting uninstall: pandas\n","    Found existing installation: pandas 2.2.2\n","    Uninstalling pandas-2.2.2:\n","      Successfully uninstalled pandas-2.2.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","google-colab 1.0.0 requires pandas==2.2.2, but you have pandas 2.1.4 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed category-encoders-2.6.4 dash-2.18.1 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 deprecation-2.1.0 jedi-0.19.1 joblib-1.3.2 kaleido-0.2.1 orjson-3.10.7 pandas-2.1.4 plotly-resampler-0.10.0 pmdarima-2.0.4 pycaret-3.3.2 pyod-2.0.2 retrying-1.3.4 schemdraw-0.15 scikit-base-0.7.8 scikit-learn-1.4.2 scikit-plot-0.3.7 scipy-1.11.4 sktime-0.26.0 tbats-1.1.3 tsdownsample-0.1.3 wurlitzer-3.1.1 xxhash-3.5.0\n"]}]},{"cell_type":"code","source":["pip install catboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2mxDFfswJTaS","executionInfo":{"status":"ok","timestamp":1728262515575,"user_tz":-540,"elapsed":15482,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"a6fcc5fd-8cd0-480a-f27b-4bbc824835dd"},"id":"2mxDFfswJTaS","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting catboost\n","  Downloading catboost-1.2.7-cp310-cp310-manylinux2014_x86_64.whl.metadata (1.2 kB)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.3)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.7.1)\n","Requirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.26.4)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (2.1.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.11.4)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.24.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2024.2)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2024.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.3.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.54.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.7)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (24.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (10.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.1.4)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (9.0.0)\n","Downloading catboost-1.2.7-cp310-cp310-manylinux2014_x86_64.whl (98.7 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.7/98.7 MB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: catboost\n","Successfully installed catboost-1.2.7\n"]}]},{"cell_type":"code","execution_count":null,"id":"f9f0bf51","metadata":{"id":"f9f0bf51"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","execution_count":null,"id":"775b4c02","metadata":{"id":"775b4c02"},"outputs":[],"source":["train_df1 = pd.read_csv('train_data_수정.csv')\n","test_df1 = pd.read_csv('test_data_수정.csv')\n","\n","train_df = train_df1.copy()\n","test_df = test_df1.copy()"]},{"cell_type":"markdown","id":"4b9d3cfa","metadata":{"id":"4b9d3cfa"},"source":["# 0. EDA"]},{"cell_type":"markdown","id":"9e32816e","metadata":{"id":"9e32816e"},"source":["### 1) 분포 확인"]},{"cell_type":"code","execution_count":null,"id":"abb8b664","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":1594,"status":"ok","timestamp":1728262518808,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"abb8b664","outputId":"08320134-17b1-487c-c558-3b1a5b5a184b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x1500 with 6 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["fig, axs = plt.subplots(3, 2, figsize=(9, 15))\n","fig.suptitle('Numeric Data Distribution', fontsize = 20)\n","\n","axs[0, 0].boxplot(train_df['age'])\n","axs[0, 0].set_title('age')\n","\n","axs[0, 1].boxplot(train_df['fnlwgt'])\n","axs[0, 1].set_title('fnlwgt')\n","\n","axs[1, 0].boxplot(train_df['education.num'])\n","axs[1, 0].set_title('education.num')\n","\n","axs[1, 1].boxplot(train_df['capital.gain'])\n","axs[1, 1].set_title('capital.gain')\n","\n","axs[2, 0].boxplot(train_df['capital.loss'])\n","axs[2, 0].set_title('capital.loss')\n","\n","axs[2, 1].boxplot(train_df['hours.per.week'])\n","axs[2, 1].set_title('hours.per.week')\n","\n","plt.show()"]},{"cell_type":"markdown","id":"6d50a7a7","metadata":{"id":"6d50a7a7"},"source":["### 2) capital gain"]},{"cell_type":"code","execution_count":null,"id":"a386e880","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1728262518809,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"a386e880","outputId":"63dc33b2-cd3f-4641-b357-d77d58e4962b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#capital.gain의 분포 다시 확인\n","plt.scatter(train_df['capital.gain'], train_df['income'])\n","plt.title(\"Train_capital.gain\", fontsize=15)\n","plt.xlabel('capital.gain')\n","plt.ylabel('income')\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"c64e8541","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":372},"executionInfo":{"elapsed":538,"status":"ok","timestamp":1728262519339,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"c64e8541","outputId":"41ef3764-2302-42c9-a545-028e23d9a37c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#capital 로그화해봄\n","\n","#분포를 보기 위해 0인값은 제외하고 보기\n","#0인 값이 너무 많아서 나머지 분포가 안 보임..\n","filtered_df = train_df[train_df['capital.gain'] != 0]\n","log = np.log1p(filtered_df['capital.gain'])\n","\n","fig, axs = plt.subplots(1,2, figsize=(15, 4))\n","fig.suptitle('Capital.gain', fontsize = 20)\n","\n","axs[0].hist(filtered_df['capital.gain'])\n","axs[0].set_title('Origianl Data')\n","\n","axs[1].hist(log)\n","axs[1].set_title('Log Data')\n","\n","plt.show()"]},{"cell_type":"markdown","id":"ba14d09b","metadata":{"id":"ba14d09b"},"source":["### 3) native country"]},{"cell_type":"code","execution_count":null,"id":"9a6f0507","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"executionInfo":{"elapsed":1705,"status":"ok","timestamp":1728262521037,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"9a6f0507","outputId":"887fad81-ab2c-4823-a6fb-430936aa98d7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize = (15,5))\n","\n","plt.title(\"native country\", fontsize = 20)\n","n_count = train_df1['native.country'].value_counts()\n","\n","plt.bar(n_count.index, n_count.values)\n","plt.show()"]},{"cell_type":"markdown","id":"bmD928tRxO3E","metadata":{"id":"bmD928tRxO3E"},"source":["4)education"]},{"cell_type":"code","execution_count":null,"id":"mHrJ75Q_wtrR","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":570},"executionInfo":{"elapsed":1825,"status":"ok","timestamp":1728262522856,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"mHrJ75Q_wtrR","outputId":"457f87c3-9762-4b69-a30f-fff1abaacf00"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABKMAAAJOCAYAAABr8MR3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAADGUElEQVR4nOzde3zO9f/H8ec1s81pG2qbZWapMJHMaSk5LMNKsr591WJlEm0KfamVJB18U44hKYcO/CodVBTmFGWG1YqRKEzYVrFdERvb+/eH2z5fl42Y7dpsj/vt9rnZ9Xm/r8/7/b6OL6/P+3p/bMYYIwAAAAAAAMAJXMq6AwAAAAAAAKg8SEYBAAAAAADAaUhGAQAAAAAAwGlIRgEAAAAAAMBpSEYBAAAAAADAaUhGAQAAAAAAwGlIRgEAAAAAAMBpSEYBAAAAAADAaUhGAQAAAAAAwGlIRqFCWrt2rWw2m9auXVvWXTmn+fPny2azae/evWXdlQtis9k0duzYUm+nqOeuU6dOuv7660u9bUnau3evbDab5s+f75T2zvbuu++qSZMmqlq1qry9vcukDwCAyon4qeQRPzkH8RNw+SEZBZSyl156SYsXLy7rbjho2LChbDabbDabXFxc5O3trebNm2vQoEFKSkoqsXYWLlyoKVOmlNjxSlJ57NtPP/2kBx54QI0aNdKbb76p2bNnl2p7Y8eOlc1m0x9//FGq7VRGn3/+uVq1aiUPDw81aNBAzz77rE6dOlXW3QKAywbx05QSO15JKo99I36qGD744APdf//9uvbaa2Wz2dSpU6ey7hJKmWtZdwCo6F566SXdfffd6t27t8P+fv36qW/fvnJ3dy+TfrVs2VKPP/64JOmvv/7Sjh07tGjRIr355psaPny4Jk2a5FD/+PHjcnW9uI+MhQsXatu2bRo2bNgF36djx446fvy43NzcLqqti3WuvgUGBur48eOqWrVqqbZflLVr1yo/P19Tp07VNddc4/T2UTK++uor9e7dW506ddJrr72mrVu36oUXXlBmZqZef/31su4eAFwWiJ+Iny4U8VPF8Prrrys5OVlt2rTRn3/+WdbdgROQjALKSJUqVVSlSpUya/+qq67S/fff77Dv5Zdf1n333afJkyfr2muv1ZAhQ6wyDw+PUu3PiRMn5ObmJhcXl1Jv63xsNluZtZ+ZmSlJJTq9/O+//1b16tVL7Hj4Z//5z3/UokULrVixwvoPiKenp1566SU99thjatKkSRn3EAAuX8RPjoifiJ8qinfffVdXXXWVXFxcnPbzUpQtfqaHcuvAgQMaMGCAfH195e7urmbNmmnu3LmF6v3222/q3bu3atSoIR8fHw0fPlw5OTmF6jVs2FAPPPBAof2dOnUqNA30xIkTGjt2rK677jp5eHioXr166tOnj3755RerzquvvqqbbrpJdevWVbVq1RQSEqKPPvrI4Tg2m03Hjh3T22+/bU3rLujDudY8mDlzppo1ayZ3d3f5+/srNjZWWVlZhfp8/fXXa/v27ercubOqV6+uq666ShMmTDj3A3oBqlWrpnfffVd16tTRiy++KGOMw1jOXPPgr7/+0rBhw9SwYUO5u7vLx8dHt912m7777jurj0uXLtW+ffussTds2FDS/9Y1eP/99zV69GhdddVVql69uux2+3nXq0hOTtZNN92katWqKSgoSLNmzXIoP9djevYxz9e3c615sHr1at1yyy2qUaOGvL29deedd2rHjh0OdQqmbe/evVsPPPCAvL295eXlpQcffFB///33eR/7hg0b6tlnn5UkXXnllYUe74t5XSQnJ6tjx46qXr26nnrqqfO2e7aLeW1dyPvk2LFjevzxxxUQECB3d3c1btxYr776qsNrSzr9+oqLi9OiRYsUHBysatWqKTQ0VFu3bpUkvfHGG7rmmmvk4eGhTp06FblWSFJSkrp37y4vLy9Vr15dt956q7799tuLGv+l2r59u7Zv365BgwY5nAl/5JFHZIwp9BkBACWN+In46WzET8RP5T1+kqSAgAC5uJCeqEyYGYVyKSMjQ+3bt7c+YK+88kp99dVXiomJkd1ut6YGHz9+XF27dlVaWpoeffRR+fv7691339Xq1auL3XZeXp5uv/12rVq1Sn379tVjjz2mv/76SwkJCdq2bZsaNWokSZo6dap69eqlqKgo5ebm6v3339e//vUvLVmyRBEREZJOZ/gHDhyotm3batCgQZJk3b8oY8eO1XPPPaewsDANGTJEO3fu1Ouvv67Nmzfr22+/dZj6fOTIEXXv3l19+vTRPffco48++khPPPGEmjdvrh49ehR7/DVr1tRdd92lOXPmaPv27WrWrFmR9QYPHqyPPvpIcXFxCg4O1p9//qlvvvlGO3bsUKtWrfT0008rOztbv/32myZPnmwd+0zPP/+83Nzc9J///Ec5OTnnnVp+5MgR9ezZU/fcc4/uvfdeffjhhxoyZIjc3Nw0YMCAixrjhfTtTCtXrlSPHj109dVXa+zYsTp+/Lhee+01dejQQd99950ViBW45557FBQUpPHjx+u7777TW2+9JR8fH7388svnbGPKlCl655139Omnn+r1119XzZo11aJFC0kX97r4888/1aNHD/Xt21f333+/fH19L+qxkS7stXUh7xNjjHr16qU1a9YoJiZGLVu21PLlyzVy5EgdOHDAeuwLrF+/Xp9//rliY2MlSePHj9ftt9+uUaNGaebMmXrkkUd05MgRTZgwQQMGDHB4n69evVo9evRQSEiInn32Wbm4uGjevHnq0qWL1q9fr7Zt2553zBe67kOtWrXO+9OQ77//XpLUunVrh/3+/v6qX7++VQ4ApYH4ifjpbMRPxE+XQ/yESsoA5VBMTIypV6+e+eOPPxz29+3b13h5eZm///7bGGPMlClTjCTz4YcfWnWOHTtmrrnmGiPJrFmzxtofGBhooqOjC7V16623mltvvdW6PXfuXCPJTJo0qVDd/Px86++CPhTIzc01119/venSpYvD/ho1ahTZ7rx584wks2fPHmOMMZmZmcbNzc1069bN5OXlWfWmT59uJJm5c+c69FmSeeedd6x9OTk5xs/Pz0RGRhZq62yBgYEmIiLinOWTJ082ksxnn31m7ZNknn32Weu2l5eXiY2NPW87ERERJjAwsND+NWvWGEnm6quvLvQ4FpSd+dwVjHfixInWvpycHNOyZUvj4+NjcnNzjTGFH9PzHfNcfduzZ4+RZObNm2ftK2jnzz//tPb98MMPxsXFxfTv39/a9+yzzxpJZsCAAQ7HvOuuu0zdunULtXW2gvv//vvv1r7ivC5mzZr1j22dq70LfW1dyPtk8eLFRpJ54YUXHMrvvvtuY7PZzO7du619koy7u7vDc/fGG28YScbPz8/Y7XZrf3x8vMPznJ+fb6699loTHh5e6D0aFBRkbrvttn98LCRd0Hbm66Ior7zyipFk0tLSCpW1adPGtG/f/h/7AgDFRfxE/ET8dBrx0+UVP52tWbNmDp8vqJiYB4dyxxijjz/+WHfccYeMMfrjjz+sLTw8XNnZ2dZU5i+//FL16tXT3Xffbd2/evXq1lm04vj44491xRVXaOjQoYXKbDab9Xe1atWsv48cOaLs7GzdcsstVt8u1sqVK5Wbm6thw4Y5TFF96KGH5OnpqaVLlzrUr1mzpsOaBW5ubmrbtq1+/fXXYrV/9rGl01PJz8Xb21tJSUk6ePBgsduJjo52eBzPx9XVVQ8//LB1283NTQ8//LAyMzOVnJxc7D78k0OHDiklJUUPPPCA6tSpY+1v0aKFbrvtNn355ZeF7jN48GCH27fccov+/PNP2e32i27/Yl8X7u7uevDBBy+6nTNdyGvrQt4nX375papUqaJHH33Uofzxxx+XMUZfffWVw/6uXbs6nCVt166dJCkyMlK1atUqtL+gPykpKdq1a5fuu+8+/fnnn9bnxbFjx9S1a1etW7dO+fn55x1zQkLCBW3h4eHnPc7x48clqcizfx4eHlY5AJQ04ifip6IQPxE/nb2/PMZPqJz4mR7Knd9//11ZWVmaPXv2OS/NWrBQ4b59+3TNNdc4BDmS1Lhx42K3/8svv6hx48b/eOWTJUuW6IUXXlBKSorDGgtn9+VC7du3T1Lhvru5uenqq6+2ygvUr1+/UFu1a9fWjz/+WKz2z3T06FFJcvgCO9uECRMUHR2tgIAAhYSEqGfPnurfv7+uvvrqC24nKCjoguv6+/urRo0aDvuuu+46SafXKWjfvv0FH+tinOt5kaSmTZtq+fLlOnbsmEPfGjRo4FCvdu3akk4H3Z6eniXS/rleF1ddddUlX0nnQl5bF/I+2bdvn/z9/Qu9jpo2bWqVn+nsx83Ly0vS6TUEitp/5MgRSdKuXbsknQ7OzyU7O9t6HooSFhZ2zrKLUfCfg6LWXTlx4sQF/+cBAC4W8RPxU1GIn4ifzt5fHuMnVE4ko1DuFGTg77///nN+OBb8FvxinCvIycvLu+irsqxfv169evVSx44dNXPmTNWrV09Vq1bVvHnztHDhwovuW3Gcq8/mrIUNi2Pbtm2SdN7L495zzz265ZZb9Omnn2rFihV65ZVX9PLLL+uTTz654DUXSvo/5ud7jp2pNJ+bf1ISj2lZ9f9c7f5Tfwo+M1555RW1bNmyyLrnW9NCktLT0y+oj15eXud9jOvVqyfp9Bnhs4PAQ4cO/ePaCwBQXMRPF4b4qTDiJ+Knso6fUDmRjEK5c+WVV6pWrVrKy8v7x2x7YGCgtm3bJmOMwxfpzp07C9WtXbt2oatnSKfPLpx5NqpRo0ZKSkrSyZMnHRY2PNPHH38sDw8PLV++3OHnOPPmzStU90LP9AUGBlp9P7M/ubm52rNnj9POPBw9elSffvqpAgICrDMw51KvXj098sgjeuSRR5SZmalWrVrpxRdftIKp4p7lLMrBgwcLnUH7+eefJcmamlxw5ubs5/nsM0gX07czn5ez/fTTT7riiisKnXEsSeXldXG2C3mfBAYGauXKlfrrr78czu799NNPVnlJ9UWSPD09i/14FCSR/sm8efOKvKpUgYJgbsuWLQ6Jp4MHD+q33367pJ/AAMD5ED8RPxWF+In46Xx9kcpH/ITKiTWjUO5UqVJFkZGR+vjjj60zTGf6/fffrb979uypgwcPOlwS+O+//y5yenqjRo20ceNG5ebmWvuWLFmi/fv3O9SLjIzUH3/8oenTpxc6RsGZhCpVqshmszmcMdq7d68WL15c6D41atQoMog7W1hYmNzc3DRt2jSHMyhz5sxRdna2dYWZ0nT8+HH169dPhw8f1tNPP33eM2XZ2dkO+3x8fOTv7+8w5b5GjRqF6hXXqVOn9MYbb1i3c3Nz9cYbb+jKK69USEiIpP99qa5bt86hr0W9Hi60b/Xq1VPLli319ttvOzyP27Zt04oVK9SzZ8/iDumClIfXRVEu5H3Ss2dP5eXlFaozefJk2Wy2S7pq0ZlCQkLUqFEjvfrqq9ZPJM505mfGuZTUmgfNmjVTkyZNNHv2bIfPh9dff102m81hfRYAKEnET8RPRSF+In46l/IUP6FyYmYUyqX//ve/WrNmjdq1a6eHHnpIwcHBOnz4sL777jutXLlShw8flnR6EcLp06erf//+Sk5OVr169fTuu++qevXqhY45cOBAffTRR+revbvuuece/fLLL3rvvfcKXSq4f//+eueddzRixAht2rRJt9xyi44dO6aVK1fqkUce0Z133qmIiAhNmjRJ3bt313333afMzEzNmDFD11xzTaE1B0JCQrRy5UpNmjRJ/v7+CgoKshYQPNOVV16p+Ph4Pffcc+revbt69eqlnTt3aubMmWrTpo3Dgogl4cCBA3rvvfcknT6bt337di1atEjp6el6/PHHHRa7PNtff/2l+vXr6+6779YNN9ygmjVrauXKldq8ebMmTpzoMPYPPvhAI0aMUJs2bVSzZk3dcccdxeqvv7+/Xn75Ze3du1fXXXedPvjgA6WkpGj27NnWmaVmzZqpffv2io+P1+HDh1WnTh29//77OnXqVKHjXUzfXnnlFfXo0UOhoaGKiYmxLk3s5eWlsWPHFms8F8rZr4sLdSHvkzvuuEOdO3fW008/rb179+qGG27QihUr9Nlnn2nYsGHnvUz3xXBxcdFbb72lHj16qFmzZnrwwQd11VVX6cCBA1qzZo08PT31xRdfnPcYJXmG9JVXXlGvXr3UrVs39e3bV9u2bdP06dM1cODAfzxbDgCXgviJ+OlsxE/ET+dS3uKndevWWQnR33//XceOHdMLL7wgSerYsaM6duxYYm2hnHDehfuAi5ORkWFiY2NNQECAqVq1qvHz8zNdu3Y1s2fPdqi3b98+06tXL1O9enVzxRVXmMcee8wsW7as0KVojTFm4sSJ5qqrrjLu7u6mQ4cOZsuWLYUuTWzM6UuaPv300yYoKMhq++677za//PKLVWfOnDnm2muvNe7u7qZJkyZm3rx51qVez/TTTz+Zjh07mmrVqhlJ1mWKz3UZ3enTp5smTZqYqlWrGl9fXzNkyBBz5MgRhzq33nqradasWaHHLDo6usjL7Z4tMDDQutSqzWYznp6eplmzZuahhx4ySUlJRd5HZ1yaOCcnx4wcOdLccMMNplatWqZGjRrmhhtuMDNnznS4z9GjR819991nvL29jSSrbwWXCl60aFGhds51aeJmzZqZLVu2mNDQUOPh4WECAwPN9OnTC93/l19+MWFhYcbd3d34+vqap556yiQkJBQ65rn6VtSliY0xZuXKlaZDhw6mWrVqxtPT09xxxx1m+/btDnWKutSvMed+rs92rvsbc2mvi4tp72JeWxfyPvnrr7/M8OHDjb+/v6lataq59tprzSuvvOJwCWFjTr++zr7UdcFz8corrzjsP9fr5/vvvzd9+vQxdevWNe7u7iYwMNDcc889ZtWqVRf8mJSUTz/91LRs2dK4u7ub+vXrm9GjR1uX0AaA0kT8RPx09niJn4ifjCn/8VPB41rUVvAeQsViM8YJK8IBAAAAAAAAYs0oAAAAAAAAOBHJKAAAAAAAADgNySgAAAAAAAA4DckoAAAAAAAAOA3JKAAAAAAAADgNySgAAAAAAAA4jWtZd+BykJ+fr4MHD6pWrVqy2Wxl3R0AAPAPjDH666+/5O/vLxcXzr2VFWIoAAAuL86KoUhGXYCDBw8qICCgrLsBAAAu0v79+1W/fv2y7kalRQwFAMDlqbRjqDJNRjVs2FD79u0rtP+RRx7RjBkzdOLECT3++ON6//33lZOTo/DwcM2cOVO+vr5W3bS0NA0ZMkRr1qxRzZo1FR0drfHjx8vV9X9DW7t2rUaMGKHU1FQFBARo9OjReuCBBy64n7Vq1ZJ0+snw9PQs/oABAIBT2O12BQQEWN/hKBvEUAAAXF6cFUOVaTJq8+bNysvLs25v27ZNt912m/71r39JkoYPH66lS5dq0aJF8vLyUlxcnPr06aNvv/1WkpSXl6eIiAj5+flpw4YNOnTokPr376+qVavqpZdekiTt2bNHERERGjx4sBYsWKBVq1Zp4MCBqlevnsLDwy+onwXTyj09PQmkAAC4jPDTsLJFDAUAwOWptGMomzHGlGoLF2HYsGFasmSJdu3aJbvdriuvvFILFy7U3XffLUn66aef1LRpUyUmJqp9+/b66quvdPvtt+vgwYPWbKlZs2bpiSee0O+//y43Nzc98cQTWrp0qbZt22a107dvX2VlZWnZsmUX1C+73S4vLy9lZ2cTSAEAcBngu7t84HkAAODy4qzv7nKzomdubq7ee+89DRgwQDabTcnJyTp58qTCwsKsOk2aNFGDBg2UmJgoSUpMTFTz5s0dfrYXHh4uu92u1NRUq86ZxyioU3AMAAAAAAAAOE+5WcB88eLFysrKstZySk9Pl5ubm7y9vR3q+fr6Kj093apzZiKqoLyg7Hx17Ha7jh8/rmrVqhXqS05OjnJycqzbdrv9ksYGAAAAAACA08rNzKg5c+aoR48e8vf3L+uuaPz48fLy8rI2rgIDAAAAAABQMspFMmrfvn1auXKlBg4caO3z8/NTbm6usrKyHOpmZGTIz8/PqpORkVGovKDsfHU8PT2LnBUlSfHx8crOzra2/fv3X9L4AAAAAAAAcFq5SEbNmzdPPj4+ioiIsPaFhISoatWqWrVqlbVv586dSktLU2hoqCQpNDRUW7duVWZmplUnISFBnp6eCg4OtuqceYyCOgXHKIq7u7t11Reu/gIAAAAAAFByyjwZlZ+fr3nz5ik6Olqurv9bwsrLy0sxMTEaMWKE1qxZo+TkZD344IMKDQ1V+/btJUndunVTcHCw+vXrpx9++EHLly/X6NGjFRsbK3d3d0nS4MGD9euvv2rUqFH66aefNHPmTH344YcaPnx4mYwXAAAAAACgMivzBcxXrlyptLQ0DRgwoFDZ5MmT5eLiosjISOXk5Cg8PFwzZ860yqtUqaIlS5ZoyJAhCg0NVY0aNRQdHa1x48ZZdYKCgrR06VINHz5cU6dOVf369fXWW28pPDzcKeMDAAAAAADA/9iMMaasO1He2e12eXl5KTs7m5/sAQBwGeC7u3zgeQAA4PLirO/uMv+ZHgAAAAAAACoPklEAAAAAAABwGpJRAAAAAAAAcBqSUQAAAAAAAHAaklEAAAAAAABwGpJRAAAAAAAAcBqSUQAAAAAAAHAaklEAAAAAAABwGpJRAAAAAAAAcBrXsu4AAJQn0zftLfU24to2LPU2AAAAgNKwd05QqbfRMGZPqbeBssXMKAAAAAAAADgNySgAAAAAAAA4DckoAAAAAAAAOA3JKAAAAAAAADgNySgAAAAAAAA4DckoAAAAAAAAOA3JKAAAAAAAADgNySgAAAAAAAA4DckoAAAAAAAAOA3JKAAAAAAAADgNySgAAAAAAAA4DckoAAAAAAAAOA3JKAAAAAAAADgNySgAAIDLzLp163THHXfI399fNptNixcvLlRnx44d6tWrl7y8vFSjRg21adNGaWlpVvmJEycUGxurunXrqmbNmoqMjFRGRobDMdLS0hQREaHq1avLx8dHI0eO1KlTp0p7eAAAoIIjGQUAAHCZOXbsmG644QbNmDGjyPJffvlFN998s5o0aaK1a9fqxx9/1DPPPCMPDw+rzvDhw/XFF19o0aJF+vrrr3Xw4EH16dPHKs/Ly1NERIRyc3O1YcMGvf3225o/f77GjBlT6uMDAAAVm2tZdwAAAAAXp0ePHurRo8c5y59++mn17NlTEyZMsPY1atTI+js7O1tz5szRwoUL1aVLF0nSvHnz1LRpU23cuFHt27fXihUrtH37dq1cuVK+vr5q2bKlnn/+eT3xxBMaO3as3NzcSm+AAACgQmNmFAAAQAWSn5+vpUuX6rrrrlN4eLh8fHzUrl07h5/yJScn6+TJkwoLC7P2NWnSRA0aNFBiYqIkKTExUc2bN5evr69VJzw8XHa7XampqUW2nZOTI7vd7rABAACcjWQUAABABZKZmamjR4/qv//9r7p3764VK1borrvuUp8+ffT1119LktLT0+Xm5iZvb2+H+/r6+io9Pd2qc2YiqqC8oKwo48ePl5eXl7UFBASU8OgAAEBFQDIKAACgAsnPz5ck3XnnnRo+fLhatmypJ598UrfffrtmzZpVqm3Hx8crOzvb2vbv31+q7QEAgMsTySgAAIAK5IorrpCrq6uCg4Md9jdt2tS6mp6fn59yc3OVlZXlUCcjI0N+fn5WnbOvrldwu6DO2dzd3eXp6emwAQAAnI1kFAAAQAXi5uamNm3aaOfOnQ77f/75ZwUGBkqSQkJCVLVqVa1atcoq37lzp9LS0hQaGipJCg0N1datW5WZmWnVSUhIkKenZ6FEFwAAwMXganoAAACXmaNHj2r37t3W7T179iglJUV16tRRgwYNNHLkSP373/9Wx44d1blzZy1btkxffPGF1q5dK0ny8vJSTEyMRowYoTp16sjT01NDhw5VaGio2rdvL0nq1q2bgoOD1a9fP02YMEHp6ekaPXq0YmNj5e7uXhbDBgAAFQTJKAAAgMvMli1b1LlzZ+v2iBEjJEnR0dGaP3++7rrrLs2aNUvjx4/Xo48+qsaNG+vjjz/WzTffbN1n8uTJcnFxUWRkpHJychQeHq6ZM2da5VWqVNGSJUs0ZMgQhYaGqkaNGoqOjta4ceOcN1AAAFAh2Ywxpqw7Ud7Z7XZ5eXkpOzubtQ+ACm76pr2l3kZc24al3gZQ2fHdXT7wPABAxbN3TlCpt9EwZk+pt4GiOeu7mzWjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNGWejDpw4IDuv/9+1a1bV9WqVVPz5s21ZcsWq9wYozFjxqhevXqqVq2awsLCtGvXLodjHD58WFFRUfL09JS3t7diYmJ09OhRhzo//vijbrnlFnl4eCggIEATJkxwyvgAAAAAAADwP2WajDpy5Ig6dOigqlWr6quvvtL27ds1ceJE1a5d26ozYcIETZs2TbNmzVJSUpJq1Kih8PBwnThxwqoTFRWl1NRUJSQkaMmSJVq3bp0GDRpkldvtdnXr1k2BgYFKTk7WK6+8orFjx2r27NlOHS8AAAAAAEBl51qWjb/88ssKCAjQvHnzrH1BQUHW38YYTZkyRaNHj9add94pSXrnnXfk6+urxYsXq2/fvtqxY4eWLVumzZs3q3Xr1pKk1157TT179tSrr74qf39/LViwQLm5uZo7d67c3NzUrFkzpaSkaNKkSQ5JKwAAAAAAAJSuMp0Z9fnnn6t169b617/+JR8fH91444168803rfI9e/YoPT1dYWFh1j4vLy+1a9dOiYmJkqTExER5e3tbiShJCgsLk4uLi5KSkqw6HTt2lJubm1UnPDxcO3fu1JEjRwr1KycnR3a73WEDAAAAAADApSvTZNSvv/6q119/Xddee62WL1+uIUOG6NFHH9Xbb78tSUpPT5ck+fr6OtzP19fXKktPT5ePj49Duaurq+rUqeNQp6hjnNnGmcaPHy8vLy9rCwgIKIHRAgAAAAAAoEyTUfn5+WrVqpVeeukl3XjjjRo0aJAeeughzZo1qyy7pfj4eGVnZ1vb/v37y7Q/AAAAAAAAFUWZJqPq1aun4OBgh31NmzZVWlqaJMnPz0+SlJGR4VAnIyPDKvPz81NmZqZD+alTp3T48GGHOkUd48w2zuTu7i5PT0+HDQAAAAAAAJeuTJNRHTp00M6dOx32/fzzzwoMDJR0ejFzPz8/rVq1yiq32+1KSkpSaGioJCk0NFRZWVlKTk626qxevVr5+flq166dVWfdunU6efKkVSchIUGNGzd2uHIfAAAAAAAASleZJqOGDx+ujRs36qWXXtLu3bu1cOFCzZ49W7GxsZIkm82mYcOG6YUXXtDnn3+urVu3qn///vL391fv3r0lnZ5J1b17dz300EPatGmTvv32W8XFxalv377y9/eXJN13331yc3NTTEyMUlNT9cEHH2jq1KkaMWJEWQ0dAAAAAACgUnIty8bbtGmjTz/9VPHx8Ro3bpyCgoI0ZcoURUVFWXVGjRqlY8eOadCgQcrKytLNN9+sZcuWycPDw6qzYMECxcXFqWvXrnJxcVFkZKSmTZtmlXt5eWnFihWKjY1VSEiIrrjiCo0ZM0aDBg1y6ngBAAAAAAAqO5sxxpR1J8o7u90uLy8vZWdns34UUMFN37S31NuIa9uw1NsAKju+u8sHngcAqHj2zgkq9TYaxuwp9TZQNGd9d5fpz/QAAAAAAABQuZCMAgAAAAAAgNOQjAIAAAAAAIDTkIwCAAAAAACA05CMAgAAAAAAgNOQjAIAAAAAAIDTkIwCAAAAAACA05CMAgAAAAAAgNOQjAIAAAAAAIDTkIwCAAAAAACA05CMAgAAuMysW7dOd9xxh/z9/WWz2bR48eJz1h08eLBsNpumTJnisP/w4cOKioqSp6envL29FRMTo6NHjzrU+fHHH3XLLbfIw8NDAQEBmjBhQimMBgAAVDYkowAAAC4zx44d0w033KAZM2act96nn36qjRs3yt/fv1BZVFSUUlNTlZCQoCVLlmjdunUaNGiQVW6329WtWzcFBgYqOTlZr7zyisaOHavZs2eX+HgAAEDl4lrWHQAAAMDF6dGjh3r06HHeOgcOHNDQoUO1fPlyRUREOJTt2LFDy5Yt0+bNm9W6dWtJ0muvvaaePXvq1Vdflb+/vxYsWKDc3FzNnTtXbm5uatasmVJSUjRp0iSHpBUAAMDFYmYUAABABZOfn69+/fpp5MiRatasWaHyxMREeXt7W4koSQoLC5OLi4uSkpKsOh07dpSbm5tVJzw8XDt37tSRI0dKfxAAAKDCYmYUAABABfPyyy/L1dVVjz76aJHl6enp8vHxcdjn6uqqOnXqKD093aoTFBTkUMfX19cqq127dqHj5uTkKCcnx7ptt9svaRwAAKBiYmYUAABABZKcnKypU6dq/vz5stlsTm17/Pjx8vLysraAgACntg8AAC4PJKMAAAAqkPXr1yszM1MNGjSQq6urXF1dtW/fPj3++ONq2LChJMnPz0+ZmZkO9zt16pQOHz4sPz8/q05GRoZDnYLbBXXOFh8fr+zsbGvbv39/CY8OAABUBPxMDwAAoALp16+fwsLCHPaFh4erX79+evDBByVJoaGhysrKUnJyskJCQiRJq1evVn5+vtq1a2fVefrpp3Xy5ElVrVpVkpSQkKDGjRsX+RM9SXJ3d5e7u3tpDQ0AAFQQJKMAAAAuM0ePHtXu3but23v27FFKSorq1KmjBg0aqG7dug71q1atKj8/PzVu3FiS1LRpU3Xv3l0PPfSQZs2apZMnTyouLk59+/aVv7+/JOm+++7Tc889p5iYGD3xxBPatm2bpk6dqsmTJztvoAAAoEIiGQUAAHCZ2bJlizp37mzdHjFihCQpOjpa8+fPv6BjLFiwQHFxceratatcXFwUGRmpadOmWeVeXl5asWKFYmNjFRISoiuuuEJjxozRoEGDSnQsAACg8iEZBQAAcJnp1KmTjDEXXH/v3r2F9tWpU0cLFy487/1atGih9evXX2z3AAAAzosFzAEAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNCSjAAAAAAAA4DQkowAAAAAAAOA0JKMAAAAAAADgNK5l3QEAAAAAwOVr75ygUm+jYcyeUm8DgPMwMwoAAAAAAABOQzIKAAAAAAAATkMyCgAAAAAAAE5DMgoAAAAAAABOQzIKAAAAAAAATkMyCgAAAAAAAE5TpsmosWPHymazOWxNmjSxyk+cOKHY2FjVrVtXNWvWVGRkpDIyMhyOkZaWpoiICFWvXl0+Pj4aOXKkTp065VBn7dq1atWqldzd3XXNNddo/vz5zhgeAAAAAAAAzlLmM6OaNWumQ4cOWds333xjlQ0fPlxffPGFFi1apK+//loHDx5Unz59rPK8vDxFREQoNzdXGzZs0Ntvv6358+drzJgxVp09e/YoIiJCnTt3VkpKioYNG6aBAwdq+fLlTh0nAAAAAAAAJNcy74Crq/z8/Artz87O1pw5c7Rw4UJ16dJFkjRv3jw1bdpUGzduVPv27bVixQpt375dK1eulK+vr1q2bKnnn39eTzzxhMaOHSs3NzfNmjVLQUFBmjhxoiSpadOm+uabbzR58mSFh4c7dawAAAAAAACVXZnPjNq1a5f8/f119dVXKyoqSmlpaZKk5ORknTx5UmFhYVbdJk2aqEGDBkpMTJQkJSYmqnnz5vL19bXqhIeHy263KzU11apz5jEK6hQcAwAAAAAAAM5TpjOj2rVrp/nz56tx48Y6dOiQnnvuOd1yyy3atm2b0tPT5ebmJm9vb4f7+Pr6Kj09XZKUnp7ukIgqKC8oO18du92u48ePq1q1aoX6lZOTo5ycHOu23W6/5LECAAAAAACgjJNRPXr0sP5u0aKF2rVrp8DAQH344YdFJomcZfz48XruuefKrH0AAAAAAICKqsx/pncmb29vXXfdddq9e7f8/PyUm5urrKwshzoZGRnWGlN+fn6Frq5XcPuf6nh6ep4z4RUfH6/s7Gxr279/f0kMDwAAAAAAoNIrV8moo0eP6pdfflG9evUUEhKiqlWratWqVVb5zp07lZaWptDQUElSaGiotm7dqszMTKtOQkKCPD09FRwcbNU58xgFdQqOURR3d3d5eno6bAAAAAAAALh0ZZqM+s9//qOvv/5ae/fu1YYNG3TXXXepSpUquvfee+Xl5aWYmBiNGDFCa9asUXJysh588EGFhoaqffv2kqRu3bopODhY/fr10w8//KDly5dr9OjRio2Nlbu7uyRp8ODB+vXXXzVq1Cj99NNPmjlzpj788EMNHz68LIcOAAAAAABQKZXpmlG//fab7r33Xv3555+68sordfPNN2vjxo268sorJUmTJ0+Wi4uLIiMjlZOTo/DwcM2cOdO6f5UqVbRkyRINGTJEoaGhqlGjhqKjozVu3DirTlBQkJYuXarhw4dr6tSpql+/vt566y2Fh4c7fbwAAAAAAACVXZnOjHr//fd18OBB5eTk6LffftP777+vRo0aWeUeHh6aMWOGDh8+rGPHjumTTz6x1oIqEBgYqC+//FJ///23fv/9d7366qtydXXMsXXq1Enff/+9cnJy9Msvv+iBBx5wxvAAAABKxbp163THHXfI399fNptNixcvtspOnjypJ554Qs2bN1eNGjXk7++v/v376+DBgw7HOHz4sKKiouTp6Slvb2/FxMTo6NGjDnV+/PFH3XLLLfLw8FBAQIAmTJjgjOEBAIAKrlytGQUAAIB/duzYMd1www2aMWNGobK///5b3333nZ555hl99913+uSTT7Rz50716tXLoV5UVJRSU1OVkJCgJUuWaN26dRo0aJBVbrfb1a1bNwUGBio5OVmvvPKKxo4dq9mzZ5f6+AAAQMVWpj/TAwAAwMXr0aOHevToUWSZl5eXEhISHPZNnz5dbdu2VVpamho0aKAdO3Zo2bJl2rx5s1q3bi1Jeu2119SzZ0+9+uqr8vf314IFC5Sbm6u5c+fKzc1NzZo1U0pKiiZNmuSQtAIAALhYzIwCAACo4LKzs2Wz2eTt7S1JSkxMlLe3t5WIkqSwsDC5uLgoKSnJqtOxY0e5ublZdcLD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8HDrGEVhijkAALhc+fn5SVKhpQ0yMjKsMj8/P2VmZjqUnzp1SocPH3aoU9QxzmzjbO7u7vL09HTYAAAAzlamyaj3339f3333ncaPH1+oLD09XW5ubvL29nbYf/YU83+aPn6uOna7XcePHy+yX0wxBwAAl6ugoCD5+flp1apV1j673a6kpCSFhoZKkkJDQ5WVlaXk5GSrzurVq5Wfn6927dpZddatW6eTJ09adRISEtS4cWOH2ewAAAAXq8ySUfv379djjz2mBQsWyMPDo6y6USSmmAMAgPLs6NGjSklJUUpKiqTTa2SmpKQoLS3NuiDMCy+8oM8//1xbt25V//795e/vr969e0uSmjZtqu7du+uhhx7Spk2b9O233youLk59+/aVv7+/JOm+++6Tm5ubYmJilJqaqg8++EBTp07ViBEjymjUAACgonAtq4aTk5OVmZmpVq1aWfvy8vK0bt06TZ8+XcuXL1dubq6ysrIcZkedPcV806ZNDsc9e/r4uaaYe3p6qlq1akX2zd3dXe7u7pc8RgAAgNKwZcsWde7c2bpdkCCKjo7W/PnzNWrUKB07dkyDBg1SVlaWbr75Zi1btszhBOCCBQsUFxenrl27ysXFRZGRkZo2bZpV7uXlpRUrVig2NlYhISG64oorNGbMGA0aNMh5AwUAABVSmSWjunbtqq1btzrse/DBB9WkSRM98cQTCggIUNWqVbVq1SpFRkZKknbu3Km0tDSHKeYvvviiMjMzrSvCJCQkyNPTU8HBwVadL7/80qGdhIQE6xgAAACXm06dOskYc85ym82mcePGady4ceesU6dOHS1cuPC87bRo0ULr168vdj8BAACKUmbJqFq1aun666932FejRg3VrVvX2h8TE6MRI0aoTp068vT01NChQxUaGqr27dtLkrp166bg4GD169dPEyZMUHp6ukaPHq3Y2FhrZtPgwYM1ffp0jRo1SgMGDNDq1av14YcfaunSpc4dMAAAAAAAAMouGXUhJk+ebE0bz8nJUXh4uGbOnGmVV6lSRUuWLNGQIUMUGhqqGjVqKDo62uEsYFBQkJYuXarhw4dr6tSpql+/vt566y2Fh4eXxZAAAAAAAAAqtXKVjFq7dq3DbQ8PD82YMUMzZsw4530CAwML/QzvbJ06ddL3339fEl0EAAAAAADAJSizq+kBAAAAAACg8iEZBQAA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AwcONK1atXI403Wptm7dagYPHmyCg4PNm2++aV577TXz+uuvG2NOv4afe+45U79+fTN+/HjrPiUZNJTFmIvj3XffNbVq1TLr1683R48eNUlJSSY6Otpcd911ZX7m0ZjCX7CnTp0yISEhZtq0aWb16tWmZs2a1vN66tQpM3bsWLNgwYJitVUwxu3bt5sNGzaYgQMHFjpWQTD1wQcfFKuNotq86aabzMMPP1yoH8aYUjnLV3D8tLQ0k56ebm6++WYza9Ys8+uvv5onn3zSdO7c2dSsWdO0atXK4f1xqeLi4sx9991njDHGbrebxMRE8+ijj5qBAwda/0ku7ddZXl6eOXXqlImOjjbDhw83xpz+LGzUqJEZPHiwVS8nJ6dU2i8Y36pVq8zIkSNNVFSUmT17tvWddmYwlZaWVip9gPMRP10e8ZMx5S+GKqtYghjqnxE/OaoMMVRljp+MqRwxFMmocurMKYL169c3QUFBplatWuauu+4yy5YtM8ac/tJv2LCh6dKlizlw4MBFt1GQxd60aZO54oorjKurq5XpLlAQUN16661m586dlziq0878sP7hhx9MVFSU8fPzM3fccYdDvYKgJjAw0DpDU17aLjhOdna2OXr0qDHmdBb9xIkTZufOneb+++837u7u1pd5wfOZnp5u7r//flO3bl1z9OjREvkgO3NMZ56Z2LZtm7njjjuMh4eHeffddx3us23bNjN48GATFBRk3nvvvUvuw5nHfeSRR0xwcLBp0qSJdQbTGGMOHDhgBVNnnt0rjvI05osVHx9vunTp4rDvxx9/NBEREeaqq64qsYDhUv3111/W3xMmTDC33nqrqVatmpk9e7a1/48//jA9e/Y0r776arHb+fjjj021atXM9ddfb2w2m3n00UdNVlaWQ50nn3zS2Gw28/HHHxerjYL3WV5envn777/Nv//9b3PPPfcYu91uvZby8/PNvn37TFxcnPn111+LPZ5z+eCDD0xQUJDZu3ev+de//mXq169vatSoYSIjI83s2bPN77//bnr16mUGDRpU7DYKxvnNN9+Y5ORk8/TTT5vOnTubxYsXm6ioKNOjRw8TEhJiunTpYho3bmz957w0FJw9LOjT7bffbpYuXWqys7ONv7+/wzg/+ugjk5SUVGp9+eSTT4y7u7t58MEHTYcOHUzbtm3NDTfcYLZu3WqMOR1MeXp6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NgEBAcbd3d3hpxzHjx83s2bNMtdcc4258cYbzYABA8xdd91l6tSpUyqfjQXvo99//920bt3aTJw4sdB/cJo3b26GDh1a6D64/BE/laxLjZ+MKd8xVFnFEsRQhRE/FVZZY6jKFD8ZU3ljKJJR5dj7779vateubb744guHJ/j77783jRs3vqCzIkWdXZg+fbqx2WymadOmZv369db+MwMqPz8/ExYWdkm/iS1o+9ixY9bfmzZtMjabzVSvXt189dVX1tnJAps2bTIPPPCAqVevnlmxYsUlt32mLVu2FLvtguOlpqaafv36mS5dupghQ4aYp59+2ixbtsw8/PDD5rrrrjPvvPNOoatj7Nq1y0RFRZXKmhFn7mvXrp258cYbTa1atax1Bs4OLDp37mwiIiJKdHrpXXfdZapUqWKio6MLle3YscPExsaa66+/3sycObPYbZxrzK1btzYhISFOH/P5nNl+fHy8adKkifHz8zOhoaFmwIABVtnLL79s2rZta2rVqmWuueYa06JFC+ssWVn8pzg1NdVcddVVDmdBU1JSTPv27U1QUNA5p95eSND33XffmU6dOpkePXo4BFNTp041devWNU899VSh/xyOHDnS1K1bt9iXRz9+/Ljp1q2bGTlypMP+4cOHGw8PD5OSkuLQ/9IKXnNzc82mTZvMtddea0JDQ63n+MzX9Lvvvlvsnz2c+Vp57LHHjM1mM8OGDSv0et+6dau5//77TYcOHUotkDLm9HvOzc3N+Pr6OlwNy5jT3wWbNm0yAwYMMPfee6956qmnSuxz0Zhzv2+io6NNs2bNzNq1ax3q9OrVq0QXPEX5QfxUfuKnM49Z1jFUeYufjCGGOhPxU9EqawxV2eInYypnDEUyqhwoeGJ37dplfvjhB4czAA888IDx9vY2ixcvNocOHTJ5eXnm8ccfN02aNDF//PHHBR33p59+sqb5GXN6GumkSZNMZGSk6dy5s8OZrII3eGJiomnUqFGxF3MtOM7WrVtN165dzTfffGOMOT3l8euvvzYDBgwwnp6e5qOPPio0rS8lJcXExMQUe8phQdu//fab+eijj8yiRYvM7t27zZEjR8z69euL3faOHTtM7dq1TUxMjJk4caIJCwszTZs2tS4xGhMTY6677jqzYMECK5h66623zIkTJ0rsd7wFx9m5c6cZNWqUeeCBB8ykSZMcpiv379/fIbAokJuba37++ediX+3g7A+pgjObvXv3Nj179jSurq5m5syZhc7CbN++3fTv39+0bt260KKKF6JgzL/++quZNGmSGTFihHVGuqDswQcfLJUxX4oXX3zR+Pj4mPXr15u//vrLjBw50thsNhMZGWnV2b17t9m8ebNZs2bNRZ0lKw1JSUmmevXqJjU11dqXl5dnvv32W+Pp6WluvPFG67fsF7tGlDGn16cIDw83d9xxh1m0aJFV/sILL5j69eubcePGmYMHDzrct2D9leLIzs42119/vZk2bZoxxjis13LbbbeZf/3rX9ZVSkpKwXtk3759JjU11ezbt8/at3nzZusKXiXxXJ8raHj00UeNq6urmT9/fqH/MG7bts1hPYKSVPBe3LVrl1m9erWZMmWKCQ4Otq7+UtoKHo/Vq1ebYcOGmejoaDNt2jSTl5dn8vLyzK233mqaNWtmnnvuOfPhhx+aYcOGGS8vL/PTTz85pX8oHcRPl0f8ZEzZx1BlGT8ZQwx1MYif/qeyxFCVOX4ypnLHUCSjyljBk//RRx+ZoKAgU79+fePn52c6depk9u3bZ4w5/SVxxRVXmKCgIHPTTTeZunXrXvCUvMOHDxtXV1djs9nMO++841C2Zs0a06tXL9O5c2drQU9jTv9G9/jx45e8fsa2bdtM7dq1zeDBg83u3bsLBRP33Xef8fT0NJ9++qnV1ptvvmnS09OL/eFW0MYPP/xgGjRoYNq3b288PDzMnXfe6bB2QVRU1AW3nZ+fb06cOGGioqIcrpZz/Phxc+ONNxqbzWZdXvOBBx4w119/vRk9erR5/PHHjc1mMzt27CjWWM4lNTXVeHl5me7du5vIyEjj5eVlunTpYt544w2rTnR0tPH09DRLly41ubm55sUXXzTdunUr9gKqBY9rRkZGoZ89FIiPj7eCqTPPbGZlZZmsrKxiLWhY0O6PP/5o6tevb7p27Wpuuukm4+LiUigbXxAkl9SYi9tXY04v3tqpUyfrPypfffWVqVmzphk0aJDx8/Mz//73v4s8hrOmlhf1RZyTk2OCg4PNE0884bDfbreb0NBQU7duXXPttdeav//++6LaKnhc9u/fb55//nlz1VVXmZtuusl89tlnVp3nn3/e1K9f37z44osOZxCLc4bzzM/G22+/3XTq1MnqQ8FrYciQIYWuAHWpzryCV8OGDU2jRo2sq4+sW7fOGPO/gKpr166X9FwXtLV+/Xrrs2bKlClWeWxsrPHw8DBvv/12oYCqpBX0peA9XxAgHjp0yPz3v/81wcHB1k9AjDFm3rx5ZvXq1Q73LSmffPKJ8fDwMH369DF9+vQxHh4eJiIiwvzyyy8mPz/fDB482Nx0000mKCjI3HzzzSW+Phici/ip/MdPxpSvGKos4idjiKEutJ/GED+drTLEUJU1fjqzP5U5hiIZVQ588803pkaNGmbOnDlm8+bNZuPGjSY4ONhcf/311rTLL774wsyePdu8/vrr5pdffrngY+fn55ubb77ZREdHG29v70K/hf3mm2+sgOrtt982zz33nKlateolXwnh2LFj5rbbbjMPP/ywtW/37t1my5YtDpn7e++919SuXdu89NJLJi4urkQCj71795r69eubp556yhw9etR8/fXXxsPDw2zYsMGh3sW23bVrVzN27FhjjLE+oEaNGmUiIyNN8+bNrUu2Pvzww6Zr166mVatW1jTWkpCfn29ycnLM/fffbx566CFr/65du8y///1v065dO4cP1IEDBxqbzWY6duxoqlevbpKTk4vdrjGnz865ubmZu+++2+HnB2cGKk899ZSpWrWqmTlzpjl06JB5/vnnTePGjS/pA33v3r3mmmuuMaNGjbK+EOfMmWN8fX0L/dRi0KBBJTLmi3XmF0LBTzfmzp1rMjMzzfr1642/v78V7D744IPGZrOZrl27OqVvZzsz6Pvzzz/NwYMHrf9QPPPMMyY0NNTMmDHDqmO3280999xjlixZYpo3b26effbZi27zo48+MrVq1TKPPfaYuf/++02dOnXMrbfeaj766COrzosvvmiqVatmJkyYUOxA48iRI6ZevXrWmfZPPvnEtGnTxjz22GMO9R588EFz7733mtzc3BK9NPj69etNjRo1zLRp00xqaqr5v//7P3PrrbeaiIgIa3bD5s2bjZeXl4mIiLikdj/++GPj6elp+vfvbwYNGmR8fHwcgsO4uDhTq1YtM3v27FILqAoeu+XLl5u+ffua2267zTz66KPW1VUKgqlmzZqZyMhI6/LSl7rwblEOHDhgmjZtap3FNeb0fzwbNWpkbr/9dmvfX3/9ZQ4ePFgqi4/C+YifLo/4yZiyjaHKKn4qaNsYYqhzIX76ZxU1hqrM8ZMxxFAFSEaVA5MnTy6U6T1+/Lhp3Lix6dat2yUf/5ZbbjHTp083Tz/9tKlZs6ZZsGCBMeb01TKMOR1QRUVFmaCgINO4cWOzefPmS27z2LFjJjQ01Ppt7W233Wbatm1rbDabCQsLc7hc7SOPPGI6dOhgQkJCSiTLOnv2bNOhQweHKZy9evUy8+bNM3PmzHE4izlkyJB/bDs/P98cO3bM3HLLLaZfv37WcX/77TcTGBj4/+3deVzN2f8H8PfNkkh7liyFShtJQoqyTGJIyL4lhDC2mmQfxpqlMXbGZPvaZY1BWTN2UkiWQllaCEXrff3+6Hc/c6+yVPcW9X4+HvOYfO5yPp97P8vrnnM+52DTpk0YOHAgWrduLbwmOTm5SONFfMlPP/0ET09PYd2A3G6t7u7uaN26tcxUvFu2bMGKFSuKfOJ6+fIlWrVqhXbt2kFHRwe9evWS2T7pfXfGjBmoXLkymjVrBk1NzSLtTzk5OVi4cCGcnZ1luqdLWvny6x4qr23+VtIX4unTp6Nx48Yyt2f8+uuv8PDwEC5o8+bNg4uLCwYNGqSQaVi/dV1nz56Ndu3aQUNDA4MHD8bWrVuRnp4ODw8PWFtbo1u3bli+fDns7OxgZ2eHjx8/ok2bNjJB/lu8ePEC5ubm8Pf3F5bdunUL9vb2aN26tUzrnr+/f5G+t/T0dIwbNw79+vVDTk4OUlNTMX/+fFhbW8PW1hazZs3CgAEDoKqqioiIiEKXA0DmdiDJOWHGjBlwdnaWeV5oaChatWqF0aNHA8g9Vq5fv16k2bViYmJgaGiIP//8E0DuD1VtbW14enrK7FODBw9GjRo1CnVrx7cKCgpClSpV4Ovri5kzZ+Knn35C48aNhVt1Xr16hb/++guOjo5o3bq1wnojxcfHo0GDBjh16hSA/76TyMhIKCsr55mpi5UOnJ++7/wEfF8ZqiTyE8AZ6nM4P31dacxQnJ/+wxmKK6O+CxMmTICZmZnwb8lJ9+TJk6hTpw4iIyOFk2BBaqAlO9LYsWOFWUr8/PyE+5dbt24tDGyXmJiImJiYIk8BLJGcnAx9fX0cPnwYo0ePhrOzM27evImQkBCMGzcOlpaW2Lx5s/D8V69eya2WdfXq1TA3NxcO2Pnz50MkEqFz584wMzNDo0aN8McffxS47AsXLkBJSQlt2rTBoEGDUKVKFQwfPhxA7tgOVatWlblfXN6ys7ORmZmJoUOHws3NDenp6RCLxcLJ89GjR7C1tUXv3r1lXiePbpzHjh1D//79cfXqVVy+fBlaWlpfDFNHjhzBjh07CtQK/Tlnz57NM4hfTk4ODAwMcPr06XxfUxIDWIaHh6NTp04yg9oCueNBtGnTBkBuC2jPnj1lWs6KI1B9+nnMnDkT2traOHToEMLCwtChQwfUqFEDCQkJSExMxIYNG9CuXTvY2dnBzc1NOCe5uLhg+vTpEIvF3/wZv3v3DsbGxkKrt2R7b926BXV1dTg6OsrMGFJUYWFhqFChgjDIZ1paGo4ePYq+ffvCwcEBvXv3LnJF1PHjx2FsbIyFCxfKLJ85cybs7OyQkZEh8/ls2rQJlStXLtL5VfpYv3LlCho1agQg94dU7dq1hdtcACAkJET4u6i9NL4kIiIC5ubmWLt2LYDcH5d6enqoVq2azFTDkpZ/RfZGev78OdTV1YX9LDs7W7gGtmvXTqabOys9OD/9GPkJKNkMVZL5CeAM9TWcnz6vtGUozk//4QyViyujitHnTj6XLl1CtWrVZE6wQG6NcL169Yp8MVq8eLEwC8X79+9hYWGB8uXLY8aMGcJz5D2I78ePH4WpPnv16iVzcD958gSurq4YM2aM3MqUdu7cORgbG6NJkyZwdXWFSCQSWg5evnwJT09PdO7cuVAzTEimMB4+fLjM93Xw4EGYmprKtQZdcuL89Ls5c+YMypUrJxMIJc85c+YMlJSUEBkZKbf1AICEhASZ0PLvv/8KYUp6m4s6tsDntllCcgzl5OSgXr16MrP2nDp1SqGDC37JypUr0aFDBzg6Ogr7lWQb9uzZg3r16qFly5Zo3rw5zM3NhRN8cQQ+6c8MAJ4+fQpbW1scP34cQO6Ft3LlyvlOZys97smvv/4KXV3dr7a6ScqTDM6amJiIJk2aYNq0aQByf+RJ1sXFxQVaWlro169foS+ysbGxecbgGDduHNq3b59nME/pi2tRPHv2TLh3fvHixcLywMBAVKhQIU+gvnDhAkxNTQs1oLH0sSAZC+L+/fuws7PD8ePHUbduXYwcOVLYroiICAwePFi4vULe+5j093vv3j14eHggJycHT548gaGhIYYPH46zZ8/CwMAAFhYWcm9dz8rKEtZBEvIl//bz84Oenl6eQXjbtm2L3377Ta7rwYoX56dcP3J+AoovQ31P+QngDPUlnJ/yL7O0ZqiynJ+k35Mz1H+4MqoYSAask57aNjg4GI8ePUJ2djbevXuHcePGwdbWVug2mJaWhunTp6NRo0ZFmg0ByD3AJffCenh4oHr16nB3d4eWlpZQG6sI//vf/yASiSASibBr1y6Zx6ZNmyYzTae8nT17Frt27cKMGTNk7nUFgCVLlsDU1LTQJ+78Tk7e3t5wdHSUW7dy6VlflixZkueCsGTJEigpKeXpNnn9+nWYmpoK9xsXpezPhRnJ45cuXZJp3cvMzMTq1atluvEXptz8tln6M8/KykJqaioMDQ2Frr5+fn4QiUR5prZVlE/3gaCgIFSvXh1qamoyPxyA3FbuPXv2YPjw4Zg8ebJw0SuOwTZ9fX0xbtw4mdbDFy9ewMTEBM+fP8eBAwegqqqKNWvWAMi9MP39998yYTwiIgJDhw5F/fr1vzrwr+RzOX78OEaMGCFMt7tp0yaIRCLhFheJkSNH4o8//ihUyBCLxXjy5AkqVqwIV1dXLFu2THjs1KlTMDIywr///gvgv1AnD5JtjI+Ph5eXF1q0aIFFixYJj/ft2xc6Ojo4c+aMcD6YPHkyGjVqVOAfcFFRUULr4e7du6Gjo4OnT58iLi4OzZs3h7KyMgYPHizzmsmTJ8PBwaHI140v2b9/P7y8vABA+I4HDhyIfv36Cft1x44dIRKJYGFhIZexuS5duiQz3fKxY8fQp08fuLm5Yf/+/cI4Bu7u7qhWrRoCAgKwe/dueHt7Q11dXa7TH7Piw/mpdOUnQPEZqiTzk3T5nKHyx/np80p7huL8lIszlCyujFKwlStXYu7cuUhISACQOwiduro69PX1UaVKFfz+++9ITk7Gs2fPMH78eOjo6MDAwADNmzcv0Kwv+ZHsuHFxcXBzc4OzszNq1KiBiIgIvHr1CmPGjEGdOnWQkpKisNbzVatWQSQSoXv37jInaC8vL3h4eMj9gvJp99f169eje/fuMs/55Zdf4OLiIjNbSWHdvn0bXl5eUFNTk+tg5UDuwJpaWloQiUTw8/OTOTmmpaXht99+g0gkwvTp03Hjxg0kJydjypQpMDQ0FPa3gvpaiPuUpLt57969MXToUFSoUKHQU0oDX95m6XX8+PEjGjRogGvXrmHOnDmoUqUKrly5UuhyC+vSpUvCfhQaGoo6deqgT58+wlgfn1Mc0w+/f/8eI0eORMuWLTF9+nThu33y5AksLCwwefJkaGpqyrRO37p1C127dhVm6pA4ceIEYmNjv6nc/fv3o2rVqvD29pY5f82aNQsikQgTJ07E4sWLMW7cOGhpaX11H/uaY8eOYerUqdDV1UWrVq2wevVqZGRkYMCAAWjbtm2R3vtzpKc/lwQqSej5+PEj+vfvD2VlZTRu3Bh2dnbQ1NQs1Lk8MDAQIpEIffr0Qbly5RAYGCg8FhISAmVlZbi7u+Po0aO4dOkSxo8fD3V1ddy+fVs+G5qPyMhI6Ovr46+//hI+h7dv38LKykr4cZ6ZmYlhw4Zh+/btcunmHhwcDCMjIyG0Xr58GRUqVMCYMWNgbW0NKysr+Pr6IjU1Fa9evcKsWbNQrVo1WFhYoEWLFjxr3g+K81Ppzk+A4jJUSeQngDNUQXB+yl9pz1BlOT8BnKHyw5VRCubl5QU9PT0sXbpUGHBuzZo1ePXqFebNmwdDQ0N4e3sjKSkJ6enpiIiIwNy5cxEYGFikC5IkpHz48AEpKSnQ0tJC3bp1ZQ7o+Ph4hXTJlVwoJN3/Vq1aBWVlZbRr1w4DBw6Eh4eHwg54SdmS7rFHjx6FSCTC4sWLsWXLFvj6+kJDQ0MuZaenp2P//v3o27fvVy+eBZWamgoPDw+4u7sLgdTHx0cmJOXk5GDz5s2oUaMGatWqBRMTE+jp6RV59pNvCTPSLly4AJFIBC0trSKV/blt/lz5VlZWsLGxQcWKFeUyaOy3kG4hO3z4MBo3boxly5YJ+1twcDDq1q0Ld3d3mX2suKYclpAM7picnAxfX1+0aNEC06ZNE9ZfMg6I9K0eqamp+Pnnn+Hk5CSsb0HHY3j48CEMDAxkZuOQtm3bNtjb28PKygq2trZF+rEI/HdLQ3Z2Nl69egUPDw+0atUKBgYGGDZsGNTU1Ardypwf6R9q0j9Wx4wZg2bNmskMMLp7924EBARg+fLlRTqXe3p6QklJCd27dxe+D0nZBw8ehI2NDXR1dWFubo6WLVvKvVJc2s2bN+Hv7y8zmKjk/507d4adnR3CwsIwefJkGBoaFqq1Nj8ZGRkYPnw4WrRogaVLl2L69Okyt9nMmjULNjY28Pb2Fm43SEhIwNu3bxU2kQRTPM5PpTc/ScpRRIYqyfwEcIb6HM5PX1eaM1RZz08AZ6jP4cqoYuDn54cGDRpg7ty5GDJkiEyL0vLly2FkZARvb2+hq963+NJJThIoYmNj0aZNGyQkJODu3bsKuQ/+U5ID6/Hjx2jdujXu3r0LIHfaSj8/P3Ts2BFeXl5FHkC4IGUvW7YMurq6MDU1haOjo1xDT3p6OlJTU+X2fhIfPnzAqlWrsHPnTgDArl278g1UQO7MEGfPnsWxY8eEe6ILq6BhJiMjA6NGjZLLwKNf2mbp8rOzs5GcnAx1dXWUK1dO4a0YEtLH3NatW+Hj4wN1dXUYGBjgzz//FH48HD16FPr6+vDw8CiWaZE/tWDBAtSpUweXL18GkBuofHx80KJFC/j5+QnbMWbMGIhEInh6emLo0KFo27at0B0YKFyQkkyr/uTJE2HZp0Hy7du3yMjIKPJAjJL3jYmJEaZ9zs7OxtOnTzFjxgzUrVsX2traMutSFJIAc+7cOSxYsADDhw/HsWPHAABJSUkYM2YMmjdvnmdQzqKSTOUsEokwa9Ysoau65Pt59eoVHjx4gMePHyt01pesrCzY2tpCJBLJzHolWY8jR47A3t4eNWrUgLGxsdz2fcn3nJmZiREjRqBNmzYwNzfHjh07ZJ43e/Zs2NjYwMfHR24DSbOSx/mp9OYnQDEZqqTyE8AZ6nM4P32b0pqhynp+AjhDfQlXRimQdFfSiRMnolKlSjAwMMhT07l8+XKYm5vDy8urQF054+LicObMGQDAjh07MH/+fOGx2NhY1KpVC6NGjZJ7l9avdUmPiYmBnp4eBg8enG+LRlFaOb617CFDhsiU8/jxYyQmJir8ZCNPnwa0nTt3QiQSwdvbWwgWWVlZcvuxDXx7mJG4cuUKzM3N5da9+0vbnJSUBCB3mxMTE3H8+PFi+YHwqenTp0NTUxN//fUXtmzZAnt7e1haWmL58uVCoAoODoaysjJ+//33Yl+/4OBguLq6wsbGJk+gat68OaZNmyYcR2vWrEHv3r3Rr18/zJ49WzhXFPacERoaiooVKwqtS9K3fZw/f75APxilSd5Dsn9Iju3Y2Fjo6Ohg2LBhecJfZGSk3GdC2bdvHzQ1NdGzZ08MGTIE5cqVw7hx45CVlSWMgWBnZ4dZs2YVugzJtl66dElmEMl169ZBJBJh5syZMoON5jc1t6K8fv0anTt3Rs2aNbFjx448+8mbN28QGRkp1x4j0uf8jIwMjB07FpUrV8aIESNkBogFgLlz58LY2FimFZv9mDg/cX4qipLITwBnqK/h/PRlpTlDlfX8BHCG+hyujFIQyZf/9OlTYdlvv/0GbW1tzJs3L0/rzPz582FjY/NNO6BYLEZaWho6deqELl26YPbs2RCJRMJsDhkZGWjRogU8PT0VNtuEpPY/PDwcJ06cEE7aADBs2DAMGzYsT9nyWpeClF3c09MqQnZ2trAdO3bsEIJNfHw8Jk6ciB49eiA1NVVu2/otYSYnJ0fYtws7q86XfG2bu3fvLrcxK76VWCzGs2fPYGxsjK1btwrLU1NT0a9fPxgaGsq08F28eLHYu5dLhIaGwsXFBdbW1nkClY2NjcyFRrK+EkVZ5+joaDRt2hQTJ07ME/Ld3d0xfvz4Ar+/ZD8IDg5G165dhZb5169fw9TUFCNGjJDZ9xV1AY2Ojkb9+vWxceNGYVn58uWFqZqB3KlxBw8ejA4dOiA5ObnAZUjeZ+/evahWrRpmzJgh82NhzZo1QgvfgwcP8Pvvv6NmzZoKHbcmLS0NYrFYGEg6OTkZ9vb2sLW1xZEjRxQaWCTrEBYWhiNHjgDIDfpjxoxBkyZNsGTJkjzngUWLFhV5AGJWsjg/cX6Sl+LOTwBnqPxwfvo2pTVDlbX8JL0+nKG+jiujFEDy5R86dAhNmzaVGTTN19cX+vr6WLp0aZ5WkoIefNevX4eZmRlEIhGmTJki89jjx4/lfnCtX78ew4YNE/69Y8cO6OjooEaNGjAzM4OnpyeA3Jpdec/yUpJlfw/EYrFwwtq5cycqVKiAhg0bonz58gobWO5rYcbV1VU4uSrC57a5XLlyJTYg8Zs3b2BiYiJ0aZZuCTM2NoapqSn++OMPmdaG4gxU0sf8qVOnPhuoWrZsWaSWD0k5Dx8+RHh4OK5duyY8Nm/ePBgZGWHs2LEICwvD7du34e3tDW1t7ULfhrB//35UqVIF06dPx4ULFwDknuN2795dbD+Ybt26hVatWgHIHZy2Vq1aGDFihPC4pIUtPj6+SK2JISEhUFVVxdq1a/PdtnXr1qFKlSqwsrKCtra2Qsb6kJR79OhRuLm5oWXLlhgxYoRMt/pWrVqhVatWOHr0qELClHSw1NXVhZeXl9AqnJmZCU9PT9jY2MDf31+h5yFWvDg/cX6St5LITwBnqE9xfspbVlnJUGUpPwGcoQqKK6MU5ODBg6hUqRICAgLydL/99ddfoa+vj+XLlxeqK55kp01JSUGjRo1gaGiIXr164dSpU3meIy8fP37Eb7/9hoYNG2LSpEl49+4d2rdvjy1btiAqKgorVqyAubk5evfuLbxGXheRkiz7eyLdXbddu3bQ0tJS+L3+XwpxRR048VvLL+5t/pIPHz6gRYsWcHNzE5ZJ9rU+ffrA0tISrVu3ljkWi8PnjvdTp06ha9eueQKVr68v6tevj/Xr1xe4LMn3ERQUBDMzM+jr68PMzExmitzly5fDwcEBSkpKMDMzg4mJSaH3l6dPn6Jhw4Yy0w6XhJMnT8LAwAC3b99G/fr1MWLECOFzP3fuHPr27Vuk1iTJsTZq1Ch4eHgAyB0b4uLFixg/fjwGDRokzJpz4cIFHDlypEC3JRXUoUOHoKysDD8/P4wZMwZubm5QVlbG//73PwC5YcrBwQFmZmZyHSReWlhYGNTU1PD3338LrXeS/S8zMxMjR46Era0t5syZU+JhiskP5yfOT/JWUlmCM9R/OD/lKosZqqzlJ4AzVEFwZZQCvHnzBq1bt8bcuXNllmdkZAh/+/r6omrVqli1alWBgo9kJ3rw4AHEYjFSU1Nx6dIltGrVCq6urjh58qR8NiIfycnJWLJkCRo1aoR+/fqhT58+QvfiDx8+YOvWrTA3N8/3QvMjl/09yc7OxsSJEyESieQ+kOjnlHSYKYlt/tx6ALkt6lWrVsXYsWORlZUlfD79+vVDcHAwrKys0KtXr2JbL+nzx8mTJ3Hw4EHs3r1bWHb+/Hl07doVTZs2xaVLlwDkXgRXr15d6GPk2LFjUFVVxZo1a/Ds2TNhCl3p7U5MTMTNmzcRGRlZpKmyb9y4gfr16wstZ9LhXkKeLXvSrdnSsrKy4OzsjHLlymHAgAEy5U6ZMkUY7LiopkyZgqZNm+L48ePo378/nJ2dYWtrCxsbGxgaGhbLeS01NRVOTk6YMWOGsOzly5eYMmUKVFRUhB8LSUlJ6NSpk8K6dC9btgzdunVDZmamzKwzEpmZmejfvz/atWtXqG797PvD+Ynzk6KUVJbgDMX56VOlNUNxfsrFGapguDJKAZ49ewY9PT0cOnQIQP7TWQK5A/lJphD9FpLXHjhwAIaGhli8eLHQzfXMmTOws7NDjx49hEA1ffp0LFq0qNDbIT1ugOTElZqaiiVLlsDMzAwGBgYyz5eEGktLSzg5ORW63JIu+3uWnZ2NjRs3FnsX65IMM8W9zZJjSnoflPx98+ZNPHr0CAcPHkTlypWFY65ly5YwNjYGkHvc2dnZFfsAypMnT0bNmjVhbGwMVVVVtGrVCmFhYQCAs2fPolu3brCxscG5c+dkXlfQi3NiYiL69u0rTMP7/PlzGBgYoGvXrtDW1kb37t3lsj2Sz/zGjRvQ0dGR+aEo+WyDg4PlNhWvpNVM4sKFC/D398eGDRuEmUX27NmDpk2bomvXroiOjsaFCxfw66+/ynWq9aCgIHTt2hVVqlRB//79ceTIEWRnZ+PgwYNo2bKlzOCb8iS9vyYkJAi3Q0l78eIFunbtismTJwuVA4rcz4cMGYKmTZvmu46SYJ2ZmZnnu2M/Ls5PnJ8UpaTyk6TsspChOD99XWnMUGU9PwGcoYqCK6Pk4NNa4KSkJFhYWGD58uXCMskOEBISIjOAW0EdOHAAKioqWL16dZ4gdubMGTg6OqJp06b46aefULFiRZnBKQvj5cuXwv27e/bswfbt25GWlgZ/f39oaWlh9OjRMs//8OEDNmzYAFtb2zyz3hTUixcvSqzs71lJDCpakiEOKL5tDg0NxcKFC2UGzpW+77pq1ar4999/AQCPHj3C2LFjhUElJWNt9OzZE4MGDSrWluVNmzZBV1cXN27cwIsXLxAXFwdra2tYW1sL04CfPHkS9vb2GDp0qMx2FVROTg7Wrl2Le/fuISEhAY0aNcLIkSORmZmJhQsXQiQS4eeffy7Ue+e3Tk+ePIGZmRmGDh0q870AgKenJwYMGCDTa6Iw1qxZgw4dOgjfbXBwMMqVKwcHBweIRCJ07NgRoaGhAIDNmzejdevWKF++PMzNzWFjY1Oo40KyrREREQgJCcH+/fuFx1JSUoSp1SUmTJgABwcHvH//vpBbmb+UlBRhiuhjx44JYW3AgAHo27evMOCuxIABA+Ds7CzXdQD++zySkpKE7uJbtmyBubm5TIjOzs7GmzdvMGjQIJw4cULu68GKF+en/3B+UrySGpS9LGQozk/fprRlqLKcnyTlcYYqGq6MKiLJl3/u3Dns378fHz9+RHZ2NlxdXdGkSZM8YcbHxweOjo6FmiI3OTkZDg4OWLJkCQAgPT0dSUlJ2LRpk1CrfP36dSxYsABeXl55DsaCyMrKwvv376Grq4tRo0Zh/fr1EIlE2LJlC4DcrvT+/v6wsLDA+PHjZV778eNHvH37tlDlSkLnhw8fUK1aNXh6ehZb2ezLSsPMOl8SGBgIfX19jBkzBqdPn5Z57PDhwxCJRFi9ejWA//ZT6c/k1atX8Pb2ho6OTqEHmSwsX19fuLq6AvivpS4tLQ0mJibo1q2b8Lzr16/LZdBNyXts2LABjo6OQqtKYGAg7OzsYG5uXuApsyXvfeXKFWzevBkBAQF4+PAhgNxwo6KigqFDhyIoKAiXL1/G+PHjoampKZepqS9evAgDAwP07NkTZ86cQf/+/bFhwwYAuQOM2traon379jJjWVy8eBFxcXFFmvVl//79qF27Nho1agQNDQ106NABkZGRMvtVeHg4xo8fDw0NDbm3qD9//hwtWrTArl27sHXrVohEIiHUrVy5UqgUkN5Gd3d3DBs2TK4DHUsPWu3k5ISTJ09CLBYjKioKlpaW6NWrlzDw5/v37zFr1izUqVMHjx49kts6sOLH+YnzU1lSmjMU56dvUxozVFnNTwBnKHnhyqgikHz5+/btg5aWFiZNmiTc95mSkgIzMzNYW1tjzpw52Lx5Mzw9PaGmpvbV7oiSk9SnLQOJiYmoX78+Nm3ahMzMTPj5+cHOzg4aGhpQVVUVurVLr1tBfVr2xYsXoaysjHLlyuGPP/6QeW5ycjIWL14Mc3NzTJo0qVDl5Vf2s2fP8OrVK9y6davYymZl29atW6GqqoqtW7fm24138+bN+Pvvv/Mslxxnz549w/z582FsbKzwls/87vUfPHgwWrduLSyTtIocPnwYNWrUyHPBKWyg+vScNHnyZJiZmQn/9vX1xcyZM/NMd/yt9uzZAw0NDVhZWaFBgwaoXLkyVqxYASC3ZdLOzg66urowMjKCpaWlXD5ryWdx7do1GBoaom/fvnBycsK9e/eE50RHR8POzg7t27cXpsctqpMnT0JTU1Po6XHjxg2IRCK0a9cON27cgFgsRnh4OEaOHIlWrVop7NaOfv36oW7duihXrlyeAVm9vb1hbm4OFxcXzJgxAx4eHqhatarQWixP+/fvh6qqKubMmSPTa+XKlSuwt7dHw4YN0aBBAzg4OEBHR6dYBv9lisP5ifMTKx04P3270pahynp+AjhDyQNXRhVRaGgoqlatisDAQOFeaYn3798LUycaGRnBycnpqweE5MC+f/8+lixZkuc+zokTJ0JDQwOampro1q0b/vzzTwBAhw4d0K9fvyJti6Tsmzdv4ueff0ZKSgpevHgBJSUlKCkp4ZdffsmzPsnJyVi6dClq1qyZZ3rkwpQdGRmJ2rVrY9y4cUhJSYFIJFJ42axsi4+Ph62trdCSI5GWlobIyEg8fvz4q12Yc3JyEBcXJ9wbryjSIej48eO4f/8+AOD06dNQVVUVQodEUFAQLCws8kyDXhiSEBUTEyMEgIsXL0JNTQ2Ojo7o0aMH1NTUCt2qGRkZierVqyMwMFDo8jxt2jRoa2tj1apVAHLvw4+NjUVUVJQwAG9RSf/wvHjxIoyNjaGkpCTT7RvIHfTY0dERzZs3x/HjxwtcTkxMDA4ePAggdzDmCRMmYNasWQByp1iuX78+3N3dUb9+fdja2grjONy9e7dQs4Z9jeT7DAsLQ4UKFVCjRg3s3LlT+OwlNmzYgBEjRsDKygq9e/dWSKiLiYlBgwYNsHLlSgC5+3lmZiYuX76MtLQ0vHnzBidOnIC3tzc2bNggtPayHxvnJ85P7MfG+enblcYMVVbzE8AZSp64MqqI5syZg/79+wPIDU9nzpzBkCFDMHLkSISEhADIHRwsKSlJmFbxax48eAAtLS2IRCL4+fnJnAhfvnyJo0ePYtu2bfjw4YNwMAwaNAh+fn5FbtG7desWVFRU4OvrKzz25MkTnDlzBkpKSvD09MwTaj58+IBVq1YVeueWLrty5cqoV68e9PT08PHjR6SkpODs2bNQUlLCyJEj5V42Y3fv3kX16tWF4xUANm7cCDc3N1SsWBGqqqrw8/NTyL3mBSF9bPv6+sLU1BTz5s1DWloaXr9+jenTp6NevXpYvHgx3r59iydPnqBLly5wdnYu8HlB8vzU1FQA/110Y2NjoaOjg2HDhgHIPf6OHDkCV1dXDBkypEiDUJ45cwbGxsaIjY2VCY1+fn6oWrUq4uLiCv3enyM97oAksNy6dQvGxsbo0qWLMHuORFRUFJydnQvcfT4+Ph46OjowNTXF9u3bAQAnTpzAnTt38ObNG9jY2GD48OEAcn+gi0QiWFlZKaT1DPhvu9+8eYNXr17h9OnTcHd3R8OGDbFp06Z89/W3b9/KtVu5tPv378Pa2hrXr19HUlIS/P394eDgAHV1dbRp0wYXLlxQSLmsZHF+4vzEfmycn75cXmnOUGU1PwGcoeSNK6OKaPTo0ahbty7OnDmD7t27w8nJCe3atUObNm3g4OBQ4BrZ1NRUeHh4wN3dHatWrYJIJIKPj89np7yMj4/H9OnToaWlVegxDiQHVXh4OKpUqQIfHx8A/82KIQmBp06dQrly5TBq1CjEx8cDAObPn48dO3YUqlwgb4ibOnUqEhMT0bBhQ8ybN09oUTl27BiUlJTg5eUlt7JZ2Xbs2DEkJycjOTkZzZs3h7e3NyIjI9G/f380adIEw4cPx+HDh7FhwwaIRCIcPny4pFcZALBo0SJoa2vj0qVLMuN7xMbGYv78+VBVVUWNGjVgaGiIZs2aCRe/b+1aLjkfBAcHo2vXrkIrzuvXr2FqaooRI0bk+15FHUQ8KCgIKioqwrlO0lU+PT0dtWvXFsY8kRfpcQf09fUxYcIEIThevXoVhoaG6NGjR55xawoTJk6fPg0lJSXY2NjAxcVF5ry1f/9+NGvWTOhWHRwcDBcXF1hZWSnkfn7Jdh8+fBi2trYyA1sOGDAADRs2RGBgoBCmVq5cKbcZaG7evJlvpcLz58+hpaWFjh07onr16nB1dcWCBQvwzz//wNTUVBhrhJUunJ84P7EfE+enzysLGaqs5ieAM5QicGVUAUjXjktOJO/fv0fz5s2hp6eH/v37C90PQ0NDYWZmVuDpEiUtVTt37gQA7Nq1SwhUn3YVPX36NPr37w99ff0i3/f74sUL1KhRAx07dgSQW4s/YcIE/Pzzz2jYsCGWLFmCtLQ0XLhwAcrKyvj555/Rq1cvVKpUCdevXy9S2eHh4VBWVsbUqVMB5H62bm5usLGxkXne8ePHoaysjC5dusitbFY2vXv3DmZmZmjQoAFSUlLg7+8PU1NTaGlpwdzcHMeOHZOZAcPExATz588vwTXO9fbtW3Tu3Fnocv3pYJgA8PTpU+zfvx8hISFCa9ynt8B8zf79+1GlShVMnz5daFF5/Pgxdu/enaeVsCithuHh4cJUyTk5OWjWrBmcnJyEUCYWi5GYmAhTU1Ohi7Y8/fPPP6hUqRL++usvYbwaybpdu3YNRkZG6N27t1xalTw8PNCkSRP07NkTbdu2FYLhmjVrUKtWLaHVcurUqZg5c6ZCZxOSzCq2cOFCXLx4UeaxgQMHwtzcHL6+vpgwYQJEIpFcBpQdPXo0LC0t8wyQLAmn9+7dw7Rp0+Dv7y9zu0aHDh3yjHnDfjycnzg/sdKB89PXlYUMVVbzE8AZSt64MuobSQ6wkydPYsSIEXB2dsb06dPx8uVL5OTk4PHjxzLP9/X1hZ2dXaHuyZXULkvs3LkTIpEI3t7eMif4Y8eO4ejRo3nKLowXL16ge/fuaNasGQ4cOABnZ2e0b98ekydPxpgxY6Cvrw93d3cAuSGub9++6Nu3b5G6lEpcuXIFM2bMAPDfRSEqKgrq6upCba7k85d32azsunPnDpo2bQobGxuhq+2VK1fyPO/Zs2ewtrbGrl27SmAtZb19+xb6+vpYvHhxnsc+fPiQb/fngl6Unz59ioYNG2LZsmWFXs8vkR64WF9fH3PmzEFMTAxycnIQFBQEa2trtG/fHjExMYiMjMSsWbNQs2ZNxMbGynU9srKy4OHhgV9++UVmvbKysoS/r169Cm1tbQwePLjQA4qmp6cDAI4ePQp3d3f8888/6NGjB9q0aYOgoCC8efMGtWrVQoMGDWBnZwd1dXWFDuL66tUrWFtbY+HChTLLpVssx40bBycnJzRr1kwYe6EowsLCoK+vj7CwMAD/neclZcbFxeUZTDM7Oxt+fn6oXr0630b0g+P8xPmJlS6cnz6vLGSospqfAM5QisCVUQUQFBSEqlWrYtSoUVi5ciXU1NTQvn17mRPYyZMn4e3tLZcDIjs7Wziod+zYIbTwxcXFwdvbGz179swzUFpRPH/+HIMHD4aKigp++uknmeC2fft2qKmpCV1t09PTi9yl9HPEYjFSUlLg6uqK3r17Izs7W/hP0WWz0k9yEs/KykJsbCysra1ha2ub54ePZD/s0qUL2rRpo/CWlm+RkpKC1q1bY9SoUUIXbImrV6/C09MTL168KFIZN27cQP369REVFQUg93PIbwaaojh+/DgqV66M1atX5wkp//zzD5o3bw4VFRUYGRmhfv36CmnBz8jIgKWlJSZMmCAsk94uSevTtWvXCnwhl7SuSktISICJiQlWrlyJhIQE9OjRA3Z2djh8+LAwrbWfn1+RppT/Fg8ePECtWrVw/vx5ALnbnF8LcXJystyuL2fPnoWKigri4+Nx6NAh2NraCufw2NhY1K1bF8uWLRPW4++//0a3bt1Qq1at72rGF1Z4nJ84P7EfH+enrysLGaqs5ieAM5QicGXUN4qPj0eTJk2Erm7Z2dnQ0dHBxIkThee8fPkSv/zyC1q2bCm3Vifpk9jOnTtRoUIFNGzYEOXKlVNI7W98fDz8/PyEwQilTy6Ghobw9vaWe5mfs2/fPohEIqGLZ1FP3qxsk/5xIB3GnZ2dIRKJ0KhRIyFQJSYmYvPmzXBycoKVlZXQ+lCSgerTH1ZLliwR7kOXhL5u3boVetphyfvfuHEDOjo6MvfBS94zODi4SK08YrEYHz58QM+ePYVBft+9e4eIiAj89ttvWLp0qfDckJAQ3Lp1q8C36nytfMn/s7KyMHjwYPTr10/mFh6xWIw7d+5g9OjRnx1r5kuePn0KbW1tiEQidO7cGbt27RJm7Tl06BBat26NhIQE3L17Fz169ICjoyP27Nkjnw38Asm2P3nyBAYGBti8ebPwmOT7/eeffxRyO2RWVhYGDBgADQ0NVKxYEf/73/+EdZFUUEif36OiojBx4kThc2M/Ns5PnJ/Yj43z07eXUVozVFnOTwBnKEXiyqgvkP5iX716haZNmyI1NRUxMTHQ09PDiBEjhMcvXryInJwcJCYmFuoA/Np6SNalXbt20NLSUmgX67dv38pcbMRiMZKSkmBrayvMZFAcMjIy4OTkhAEDBuRpxWCsIM6dOwdHR0ecPXtWZrmbmxsaNWqEU6dOoVmzZjA1NcXr16+xa9cu9OzZE15eXsJ4AYUZN0BeJMf/7du38fr1a6xduxbly5dHhw4d0L59e9ja2qJRo0aFHqxc2pMnT2BmZoahQ4fi6dOnMo95enpiwIABRW5Z79evH1xcXHDv3j14enqiffv2sLCwgLa2Nnr27Fmk986PdIiStmbNGlSuXBkrVqyQOW/PmjUL5ubmhQpxsbGxaNasGWxtbdG0aVMMHz4c+vr6WLduHXbt2oUuXbogODgYQO6tDh06dECXLl3yjAMgD/l9v2/fvoWDgwPatWuHyMhImccmTJiATp065bnVSR7WrVsHkUgEVVVVYTyDy5cvY+zYsTLrKfn7e2hJZ4XH+em/8jk/sR8Z56evv7e00pahymp+AjhDFReujPqKXbt2Yf369UhOTkbdunWxZcsWGBoawtPTUzi5RkVFoVOnTsK9nIqQnZ2NiRMnQiQSCTMzFKeZM2fCyMhI7uO2fM2CBQugpqYml66zrOyKioqCg4MDOnfujGvXrgEAevbsCXNzcyEs3L17F9bW1mjevDmSk5ORmJhY4id16R9Se/fuRe3atfHvv/8CyJ2dae7cuRg5ciT8/f0LHPok73vlyhVs3rwZAQEBQnfq4OBgqKioYOjQoQgKCsLly5cxfvx4aGpq5rn4fms5d+7cEWZWWb16NVq3bg0lJSW4ublh165dyMjIwB9//AFHR8dCjy/wpfLPnj2LSZMm4ZdffpGZWWT69OnQ1dWFq6srBg8ejN69e0NNTa1IPSeio6PRo0cPuLq6Yv/+/QgKCoKjoyNcXV0hEonQokULIYxGRUXh2bNnRdrG/Ei2+8KFC1i0aBGmTJkitNQ+evQIenp66NChA1auXInDhw/Dy8sL6urqcp8OOTs7G+np6Zg1axb++OMPuLq6QkNDQ+hOX5I/UphicX7KxfmJ/cg4P33+/YHSnaHKan4COEMVJ66M+oR07WJERATU1dUREBAAILfGs1KlSujcubPMa6ZOnQpra2thylxFyM7OxsaNGxU+MNunduzYAU9PT2hqahbrfaeS7+H169ewtrYWZmpgrLCio6Ph7OyMn3/+Gfb29rCyssqzX927dw96enoYNGiQsKy4bm/4Umvcrl27UKFCha9Oz1rQ0Ldnzx5oaGjAysoKDRo0EFq5gNzxW+zs7KCrqwsjIyNYWloW+PwjPdCmgYEBFi9ejKSkJGRnZ+PRo0fCPfcSI0eORPfu3eU+psn+/fuhrq6OgQMHom/fvrCwsICHh4fw+ObNm+Hj44O2bdvil19+kcvMJ5If2U5OTrh//z5SU1Px77//okuXLti6dSsAxe9be/fuhaqqKhwcHNCiRQuIRCKMHz8e6enpiI2NRbdu3dCwYUM0aNAA9vb2chloU+Jz23b//n106tQJGhoaiI6OBvBjteCxz+P8JIvzEystOD/lryxkqLKanwDOUMWFK6OQ/0ksIiICM2fOxK+//iosu3jxIjp37gxLS0ts2bIFu3btwrhx46CmpibXHfBzSuKe//DwcPz8888FrsmXF7FYrJDujqxsio6ORocOHaCuro7du3cLy6XPAbGxscV+Ypcuf926dfDx8YGLiwtOnjyJ58+fY8OGDVi5cmWe1xXlnBAZGYnq1asjMDBQGGRx2rRp0NbWFqY+TkhIQGxsLKKiogo1sxWQO2tVlSpVsHLlynwHcxSLxYiOjsakSZOgoaEh91torl69CgMDA6xduxZAbmDW1dVFxYoV4erqKvPcnJycIo0Z8ano6Gg4OTnByclJLtMbF8TDhw9Rt25dbNiwQWa8DG1tbUyaNAkAkJaWhpSUFMTHx8t1MGdJeefPn8eMGTMwdepUmVuUHj16hE6dOkFTUxMPHjwA8OOHqbKK89PncX5ipQnnJ1llIUOV1fwEcIYqTmW+Mkpy4MTFxWHnzp3Yvn07Dh06hP79+0NbWxuenp4yzw8NDYWXlxc0NDTQpEkTdOzYsUS6fRcnnnmFlSYPHz5Ex44d0alTJ5lWpU8voiVxYvfx8UGNGjXg4+ODIUOGQFdXFz4+PkhLS5N7WWfOnIGxsTFiY2Nltt3Pzw9Vq1ZFXFxckd5fLBYjLS0NXbp0EQbafP/+PaKjo7FkyRKhx8TVq1fh7u6Oxo0bF+lHqWQbPp25ZsuWLcJ5/MmTJ6hXrx6GDh2KjRs3olKlShg2bFihy/wWkhbljh075mnFVKTbt2/DwMAAt27dkgnd27dvh5KSksLD3b59+1ClShU4OTmhTZs2UFJSwuDBg/Hq1SsAuZ+Li4sLRCLRdz/tMMsf56ev4/zEShPOT/8pTRmK81NenKGKT5mujJIccOHh4ahfvz7MzMxQoUIFWFtbw8XFBZ06dUKdOnXy7VaZkJCA9PR0bnVi7AckucA5OzuXSItLfo4fPw4DAwPhfPPvv/9CJBJh586dCikvKCgIKioqwsCTkkFu09PTUbt2bWzZsqXQ7y0dZnr37o1hw4YhIiICXl5eaN++PerVq4fatWsLXb1Pnz5dpNt0JOXdv38fY8eORffu3eHv7y88fuXKFWRnZ8PZ2RmDBw8GkDvjj5GREUQiEQYMGFDosr9FdHQ0unTpgpYtWwpjVshTWloaEhMTcfr0acTFxeHt27d4+PAhypUrh4sXLwLI/V4lLCwssGTJErmvh0RMTAwMDAyE1mEgt4VPQ0MD7u7uwrJ79+6hd+/ewhTY7MfB+YmxsonzU67SkqHKen4COEOVNCUqo8RiMSkpKdHt27fJ1taW3Nzc6OTJk7R3717S0dGhpKQkatu2Lenr69OsWbPo9u3bREQEgHJyckhXV5eUlZWpSpUqJbwljLGCMjIyohUrVlC5cuVowoQJwvFdklJTU8nQ0JCaNGlCO3bsICcnJ1q1ahX16dOHUlNTKTw8nHJycgr13gCIiOj27dt0/vx5IiJycXEhc3NzGjhwIGVmZpKKigoBoPfv31PVqlVJXV29QGVERUXRtGnT6MmTJyQSiYTlJiYmdOfOHWrSpAklJibS8OHDKTw8nIYNG0YJCQlEROTo6Eh6enqF2jbJuTw8PJzs7e0pLi6OlJWVaerUqbRo0SIiIrKxsaG4uDh69uwZeXh4EBGRkpIStWjRgrZs2UJz584tVNnfysjIiPz9/al27dqF3s7PiY6OptGjR1Pr1q2pU6dOZG5uTqNHj6bU1FTy8vIiDw8PevjwISkrKxMRUWZmJikrK5Oamppc10OyjxERZWVlkUgkInt7eyLK/Y7s7e3pwIEDtG3bNgoKCiKi3H1j27Zt1LBhQ7muC1Mszk+MlV1lLT8Rld4MVdbzExFnqO9CydWDlbynT59CR0cHvXr1klm+Zs0aaGho4MmTJwgKCkL79u3RrVs3hU4HzBgrfnfv3sWkSZPkep97QUm6/65duxYtW7ZEaGgo1NTUZFpEduzYAS8vLyQlJRX6/fft2wd9fX3MmTMHMTExEIvFCAoKgrW1Ndq1a4eYmBhERkZi1qxZqFmzZoFmfsrMzISNjQ1EIhGMjIzg7e0t0yJ5//59YRYSyWc9YsQI9OrVCxkZGYUeu0G6d4aKigqmTp0qLB87diwmTJggzCrz8uVLGBoaYuzYsUhJScGUKVNgY2Mj96nkv0Tet+yEh4ejZs2aGDVqFAIDA3Hv3j34+vqiQYMGMDExwcKFCzF48GAYGRnh1KlTOHv2LKZNmwYdHR08evRIrusC5A4Uu3HjRrx48QIVKlTAvn37APw3lsSHDx9gZWWFpUuXyr1sVrw4PzFWtpWF/CRdRmnLUGU9PwGcob4XZboyKiYmBjY2NnBxcZG5F/XEiRPQ1NQUpk3cuXMnnJyc0LZt2xIbiJIxpljFFag+V87r169hZmYGkUiE9evXC8vT09PRpUsXDBkypNCVNsePH0flypWxevXqPFP+/vPPP2jevDlUVFRgZGSE+vXr4/r16wUuY/HixVi2bBlOnDiBWbNmQVNTE/369cO6detk1jsmJgaTJ0+GhoaGXKbA/dyP4j59+qBJkyYwMTGBs7Mz1q9fj+XLl0NPTw916tRB9erVi3WGK3kLDw9H5cqV4efnl2dq3x07dqB58+Zo0aIFNm/ejKFDh0JFRQXGxsYwNzeX23Z/bvY0sViM4cOHo3nz5jh79qzMa1q1aoXly5fLpXxWcjg/McYkSnN+Akpvhiqr+QngDPU9KdOVUcB/9z47OTnh7t27eP/+PXR1dWVmgQFyp650cXHBs2fPSmhNGWM/OukLz6ZNmzBp0iRs27YNT548AZA7MKKJiQm6d++Omzdv4sCBA3B2doaFhYVwsSxIoBKLxfjw4QN69uwpDID57t07RERE4LfffpNpXQkJCcGtW7fw/PnzQm3b6dOnoaamhqtXrwIAnj9/jtmzZ0NFRQUtWrTA+vXrsWzZMnh7e8PMzExu06xL/yiWjF+xYMECVK5cGXPnzsXGjRthYmICS0tLnDt3Dnfv3sXBgwfx9OlTuZRfEvILkGKxWCZQrV27Ftra2kIwj4yMxJMnT5CYmFiksr919rSzZ8+ie/fusLKywrZt23DmzBn4+PhAS0vrhx9sk+Xi/MQYKy7FnZ8kzy/NGaos5ieAM9T3psxXRgG5gapTp05wcHCApqYmJkyYIDyWmZkp/C3PaRsZY2XXb7/9BnV1dTg5OUFVVRX9+/fH5cuXkZOTg927d8PS0hJaWlqwtrZGjx49hPNQYWeo6devH1xcXHDv3j14enqiffv2sLCwgLa2Nnr27Cm37fL29saAAQOElsM+ffrAxMQEQ4YMwU8//YSKFSti5MiRwmwg8iL5Uezi4oLhw4ejWrVq+Oeff4THY2Nj87SY/sg+1ysFkA3b9vb26N69OwD5tFwXdPa08+fPY8yYMahUqRJMTU3RqFGjH741lcni/MQYK07FnZ+A0p2hylp+AjhDfW+4Mur/RUdHo127dtDX15fpEicWi4vUtZMxxqSnzc3IyEDfvn2FC+DJkyfRsmVLdO/eHZcuXRJec+fOHSQnJwvnn0+7EX+O5Pl37tzB5cuXAQCrV69G69atoaSkBDc3N+zatQsZGRn4448/4OjomKfbeWHt2bMHtra2yMnJwbBhw1C9enXh1py7d+9i5cqVCrtV5/79+/jpp5+goqIizHIiFouRmZmJuLg4NG7cGHv27BGW/+g+N+Wx9LY5OjrKbaabosyeFh8fj/j4eLx+/Vou68K+L5yfGGOKUpz5SVKO5D3KSoYqa/kJ4Az1PeHKKCkPHjwQdszvZbpSxtiPTbo1JTw8HPfv34e7u7vMNLySQNWzZ0+EhoZ+8T2+RHqgTQMDAyxevBhJSUnIzs7Go0eP8rQAjRw5Et27d5frwJBt2rSBkpIS9PT0cOvWLbm977d4+PAhnJyc0KlTJ5w7d05YPmPGDNSrV++H71r+KekwJX3NysnJwbNnz9CpUycEBgYCKFqAlA5RlStXxq+//or4+HgcPHgQHTt2RKtWrbB48WLY29vDxcUF4eHhQplFaY1mPw7OT4wxeSvO/ASU7QxV1vITwBnqe8GVUZ+Ijo5Gly5d0LJlS/z7778lvTqMsR+Y9MVr0qRJqFmzJipVqgRVVVWhlUni5MmTsLe3R9u2bYs0FsCxY8dQpUoVrFy5Mt9bY8RiMaKjozFp0iRoaGjIbZYrybYePXoUxsbGCAoKklleXKTDxY0bN7Bo0SJUqlSpVHZtBj7fuufr6wtLS0u5jdPDs6exr+H8xBiTl5LIT0DZzlBlLT8BnKG+B1wZlY979+7Bzc1NGBSPMcYKSjpAXLt2DcbGxggNDcWWLVvQvn172Nvb4/DhwzKvOXr0KEaOHFmoe9PFYjHS0tLQpUsXYaDN9+/fIzo6GkuWLEFAQAAA4OrVq3B3d0fjxo0V0uommQJ4+vTpcn/vbyX5UVytWjVUqFAB165dK7F1KQ75BUhVVVW5fr88exr7FpyfGGNFVdz5SVImZ6iyl58AzlAljSujPkOeXS4ZY2XXX3/9hSFDhsDPz09YduHCBXTv3h2Ojo55ApXElwLVp49J/7t3794YNmwYIiIi4OXlhfbt26NevXqoXbs2PDw8AOTO2iLdzV3etm7diipVqgjjLZSEqKgouLi4lJmLeXEESJ49jX0Lzk+MMXlQRH7K73HOULLKWn4COEOVJCVi+apYsWJJrwJj7Af36tUrOnXqFB06dIieP38uLLezs6PJkyeTpqYmBQQE0N69e/O8Vknp86dnJSUlioqKomnTptGTJ09IJBIJj5mYmNCdO3eoSZMmlJiYSMOHD6fw8HAaNmwYJSQkEBGRo6Mj6enpyXFLZbVt25ZsbGwUWsbXNGzYkPbu3Uvm5uYltg7FycjIiJYsWUItW7akmzdvkrW1tULKWLFiBZUrV45Gjx5NdevWpQEDBtCiRYuIiCgrK4uIiAYPHkzbtm2j2rVry30d2PeP8xNjrKgUlZ8kj3OG+ryylp+IOEOVJBEAlPRKMMZYaQBAJtQQEV2/fp1WrVpFe/fupY0bN1Lv3r2Fxy5evEh+fn7UuHFj+vPPP7+5nKysLLKzs6Nr166RoaEhdevWjZo1a0Z9+vQhIqLo6Gh6+vQpdejQgcRiMSkpKZGnpyelpKTQtm3bqEKFCnnWU97S09OpUqVKCi2D5ZWVlUUVKlRQaBkPHjygUaNG0aNHj2jLli3Upk0bIsrd/4lI4fsWY4yx0qW48hMRZyj2eZyhih9XRjHGmBxIAgsRUUpKConFYtLS0iIioqioKFq8eDFdunSJ5syZQ25ubsLrIiIiyNzc/KsteZ/y9/en8uXLk4WFBYWFhdGKFSvI2dmZHB0dacSIEcLFLDY2llauXEl//fUXnT9/niwsLOS0xawse/jwIY0bN44A0IwZM8jOzq6kV4kxxtgPqLjzExFnKFayOEP9hyujGGOsiKRb9ObNm0eHDx+mlJQU0tPTo/nz51PLli0pKiqK/P39hUDVs2dPmfeQDmPf4syZM9StWzcKCQmhZs2a0YsXL2j9+vW0aNEiaty4MQ0bNoxSU1Pp+fPnFBwcTNu3b6cmTZrIc7NZGffgwQOaNGkSJSUl0fLly6lly5YlvUqMMcZ+ICWRn4g4Q7GSxxkqF48ZxRhjRSQJUrNnz6bly5fTkCFDyM/Pj8RiMfXt25d2795NJiYmNH78eLKzsyNPT086ffq0zHsUNEg5OjqSp6cnBQQEUHp6OtWsWZPu3btH+vr6ZGJiQnv27KEpU6bQ+/fv6fTp0xyimNwZGRmRv78/1a5du0THB2OMMfZjKon8RMQZipU8zlC5uGcUY4wVUkZGBikrKxMR0cuXL6ljx47k4+NDAwcOFJ7Tr18/CgsLo/Pnz5O+vj5duXKFQkNDycfHh8qVK1ek8vfu3UvLli2jCxcukKenJx05coRCQkLI3Nyc7t27R6GhoeTo6FimBqFkxS8zM5MHrWaMMfbNSjo/EXGGYt+Hsp6huDKKMcYK4cSJExQeHk4ODg7UvHlzio+Pp5YtW9L69eupU6dOMoNPmpqaUseOHSkgIEDmPXJycoocqBwcHOjChQtUo0YNCg4OJktLyyK9H2OMMcaYonwv+YmIMxRjJY1v02OMsQL6+++/ycPDg2JiYoQu5rVq1SJNTU3aunUrERFVqlSJMjMziSh3mtz86v2LEqQk7+fr60uGhoa0atUqsrS0zLccxhhjjLGS9j3kJyLOUIx9L7gyijHGCmDnzp00duxYWrZsGS1cuJBsbGxILBYTEdGsWbPoxo0bNH78eCIiodvtq1evSE1NTa7rIQlx1tbWJBaL6fr16zLLGWOMMca+F99LfiLiDMXY94Jv02OMsW+UmJhIvXv3Jjc3NxozZoywPDU1lR4+fEjPnz+n6Oho2rRpE1WqVIkaN25MUVFR9Pr1a7p9+zaVL19eIeu1bds2GjVqFIWGhlLz5s0VUgZjjDHGWGF8r/mJiDMUYyVJcUc2Y4yVQgkJCVSrVi3h32vWrKHQ0FDat28fNWjQgFRVVWndunX0119/UUZGBtnY2JC/vz+VL19ebmMcfKpt27ZkY2NTpmfjYIwxxtj363vMT0ScoRgrSVwZxRhjBfDu3Ts6evQoqamp0erVqyk6Oprs7e3p+PHj9PbtW5o6dSpdvnyZNm7cKPO67OxshbXs1apVi44dOyYM+MkYY4wx9j35HvMTEWcoxkoSV0Yxxtg30tXVpcDAQOrZsyeFhoZS1apVKSAggCwtLUlbW5vevHlD8+fPp+Tk5DyvVWSQIiIOUYwxxhj7Ln3P+YmIMxRjJYUroxhjrADat29PDx48oNTUVKpXr16ex9XU1KhOnTolsGaMMcYYY98nzk+MsU/xAOaMMSYHiYmJNHToUEpKSqKwsDCFjW3AGGOMMVZacH5irOzinlGMMVYESUlJtHHjRrpw4QIlJCQIQUqRg20yxhhjjP3IOD8xxpRKegUYY+xHFhcXR2FhYWRoaEgXL16kChUqUHZ2NgcpxhhjjLHP4PzEGOPb9BhjrIhSUlJIXV2dRCIRt+gxxhhjjH0Dzk+MlW1cGcUYY3ICgEQiUUmvBmOMMcbYD4PzE2NlE1dGMcYYY4wxxhhjjLFiw2NGMcYYY4wxxhhjjLFiw5VRjDHGGGOMMcYYY6zYcGUUY4wxxhhjjDHGGCs2XBnFGGOMMcYYY4wxxooNV0YxxhhjjDHGGGOMsWLDlVGMMcYYY4wxxhhjrNhwZRRj7Idy5swZEolElJKSUtKrQgYGBhQQEFDSq8EYY4wx9kWcnxhj3xuujGKMsa8IDAwkDQ2NPMuvXr1Knp6exb9CjDHGGGPfOc5PjLEvKV/SK8AYYz8qXV3dkl4FxhhjjLEfCucnxhgR94xijJUwsVhMCxYsoHr16pGKigpZWlrS3r17hceDg4PJ2NiYVFRUqG3bthQbGyvz+tmzZ1OTJk1klgUEBJCBgYHMsk2bNpG5uTkpKytTzZo1aezYscJjy5Yto0aNGlGVKlWoTp065OXlRampqUSU26196NCh9PbtWxKJRCQSiWj27NlElLeb+dOnT6lbt26kqqpKampq1Lt3b3r16lWedd26dSsZGBiQuro69e3bl96/f1/4D5AxxhhjZQ7nJ85PjP3ouDKKMVaiFixYQFu2bKG1a9fSnTt3aOLEiTRw4EA6e/YsPXv2jHr06EFdu3alW7du0fDhw2nKlCkFLmPNmjU0ZswY8vT0pIiICDp06BAZGhoKjyspKdGKFSvozp07tHnzZgoNDaVff/2ViIhatWpFAQEBpKamRi9evKAXL16Qt7d3njLEYjF169aNXr9+TWfPnqWTJ0/S48ePqU+fPjLPe/ToER04cICOHDlCR44cobNnz9LChQsLvE2MMcYYK7s4P3F+YuxHx7fpMcZKTEZGBs2fP59OnTpFtra2RERUv359unDhAq1bt44MDAyoQYMGtHTpUiIiatiwIUVERNCiRYsKVM7vv/9OkydPpvHjxwvLbGxshL8nTJgg/G1gYEC///47jRo1ilavXk0VK1YkdXV1EolEVKNGjc+WERISQhERERQTE0N16tQhIqItW7aQubk5Xb16VShPLBZTYGAgVa1alYiIBg0aRCEhITRv3rwCbRNjjDHGyibOT5yfGCsNuDKKMVZiHj58SB8+fKCffvpJZnlmZiZZWVnRx48fqUWLFjKPSULXt0pISKDnz59T+/btP/ucU6dO0YIFCygqKorevXtH2dnZlJ6eTh8+fKDKlSt/Uzn37t2jOnXqCEGKiMjMzIw0NDTo3r17QpgyMDAQghQRUc2aNSkhIaFA28QYY4yxsovzE+cnxkoDvk2PMVZiJOMKHD16lG7duiX8d/fuXZlxD75ESUmJAMgsy8rKEv5WUVH54utjY2OpS5cu1LhxY9q3bx9dv36dVq1aRUS5oU7eKlSoIPNvkUhEYrFY7uUwxhhjrHTi/MT5ibHSgHtGMcZKjJmZGSkrK9PTp0/JwcEhz+OmpqZ06NAhmWWXLl2S+beuri69fPmSAJBIJCIiolu3bgmPV61alQwMDCgkJITatm2bp4zr16+TWCympUuXkpJSbv387t27ZZ5TsWJFysnJ+eK2mJqa0rNnz+jZs2dC697du3cpJSWFzMzMvvhaxhhjjLFvxfmJMVYacGUUY6zEVK1alby9vWnixIkkFovJ3t6e3r59S2FhYaSmpkajRo2ipUuXko+PDw0fPpyuX79OgYGBMu/h6OhIiYmJtHjxYnJzc6Pjx4/TsWPHSE1NTXjO7NmzadSoUVStWjXq1KkTvX//nsLCwmjcuHFkaGhIWVlZ9Oeff1LXrl0pLCyM1q5dK1OGgYEBpaamUkhICFlaWlLlypXzdD/v0KEDNWrUiAYMGEABAQGUnZ1NXl5e5ODgQM2aNVPYZ8gYY4yxsoXzE2OsNODb9BhjJWru3Lk0Y8YMWrBgAZmampKzszMdPXqU6tWrR3Xr1qV9+/bRgQMHyNLSktauXUvz58+Xeb2pqSmtXr2aVq1aRZaWlnTlypU8s7UMGTKEAgICaPXq1WRubk5dunShBw8eEBGRpaUlLVu2jBYtWkQWFha0fft2WrBggczrW7VqRaNGjaI+ffqQrq4uLV68OM92iEQiOnjwIGlqalKbNm2oQ4cOVL9+fdq1a5ecPzHGGGOMlXWcnxhjPzoRPr1ZmDHGGGOMMcYYY4wxBeGeUYwxxhhjjDHGGGOs2HBlFGOMMcYYY4wxxhgrNlwZxRhjjDHGGGOMMcaKDVdGMcYYY4wxxhhjjLFiw5VRjDHGGGOMMcYYY6zYcGUUY4wxxhhjjDHGGCs2XBnFGGOMMcYYY4wxxooNV0YxxhhjjDHGGGOMsWLDlVGMMcYYY4wxxhhjrNhwZRRjjDHGGGOMMcYYKzZcGcUYY4wxxhhjjDHGig1XRjHGGGOMMcYYY4yxYvN/4vPY9Pw/4gsAAAAASUVORK5CYII=\n"},"metadata":{}}],"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd\n","education_order = ['Preschool', '1st-4th', '5th-6th', '7th-8th', '9th', '10th', '11th', '12th',\n","                   'HS-grad', 'Some-college', 'Assoc-acdm', 'Assoc-voc', 'Bachelors',\n","                   'Masters', 'Doctorate', 'Prof-school']\n","train_df['education'] = pd.Categorical(train_df['education'], categories=education_order, ordered=True)\n","\n","# 'income' 값이 0인 경우에 대해 education 분포 countplot 생성\n","plt.figure(figsize=(12, 6))\n","\n","# 첫 번째 그래프 (income = 0)\n","plt.subplot(1, 2, 1)\n","sns.countplot(x='education', data=train_df[train_df['income'] == 0], order=education_order, color='skyblue')\n","plt.title('education Distribution for Income = 0')\n","plt.xlabel('education')\n","plt.ylabel('Count')\n","plt.xticks(rotation=45)  # X축 레이블 45도 회전\n","\n","# 두 번째 그래프 (income = 1)\n","plt.subplot(1, 2, 2)\n","sns.countplot(x='education', data=train_df[train_df['income'] == 1], order=education_order, color='orange')\n","plt.title('education Distribution for Income = 1')\n","plt.xlabel('education')\n","plt.ylabel('Count')\n","plt.xticks(rotation=45)  # X축 레이블 45도 회전\n","\n","# 레이아웃 조정 및 그래프 출력\n","plt.tight_layout()\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"id":"9Mzo3RDFw6vH","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"executionInfo":{"elapsed":1238,"status":"ok","timestamp":1728262524088,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"9Mzo3RDFw6vH","outputId":"19208f87-b137-4fd8-df38-9835fc708bb0"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-10-6140217aa4f9>:6: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n","  education_income_counts = train_df.groupby('education')['income'].value_counts(normalize=True).unstack()\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd\n","\n","# 'education' 레벨별로 income의 0과 1의 비율을 계산\n","education_income_counts = train_df.groupby('education')['income'].value_counts(normalize=True).unstack()\n","\n","# 1에 해당하는 비율을 추출\n","education_income_ratio = education_income_counts[1]  # 1의 비율 (income = 1)\n","\n","plt.figure(figsize=(10, 6))\n","ax = education_income_ratio.plot(kind='bar', color='orange')\n","\n","for p in ax.patches:\n","    ax.annotate(f'{p.get_height() * 100:.1f}%',\n","                (p.get_x() + p.get_width() / 2., p.get_height()),\n","                ha='center', va='baseline', fontsize=10, color='black', xytext=(0, 5),\n","                textcoords='offset points')\n","\n","group_boundaries = {\n","    '1': 7.5,  # Up to '5th-6th'\n","    '2': 9.5,  # Up to '9th'\n","    '3': 12.5,  # Up to 'Assoc-voc'\n","}\n","for label, position in group_boundaries.items():\n","    plt.axvline(x=position, color='blue', linestyle='--', lw=1)\n","\n","# 그래프 설정\n","plt.title('Proportion of Income = 1 by Education Level (education)')\n","plt.xlabel('Education Level (education)')\n","plt.ylabel('Proportion of Income = 1')\n","plt.xticks(rotation=45)\n","# 그래프 출력\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","id":"dbcf848c","metadata":{"id":"dbcf848c"},"source":["# 1.데이터 전처리"]},{"cell_type":"markdown","id":"61fa8e87","metadata":{"id":"61fa8e87"},"source":["### 1) workclass, occupation 결측값\n","* 둘 다 null이면 unknown\n","* occupation만 null이면 no job"]},{"cell_type":"code","execution_count":null,"id":"cbbb554a","metadata":{"id":"cbbb554a"},"outputs":[],"source":["train_df.loc[train_df['workclass'].isnull() & train_df['occupation'].isnull() , ['workclass', 'occupation'] ] = 'unknown'\n","train_df.loc[train_df['occupation'].isnull(), 'occupation'] = \"no_job\""]},{"cell_type":"code","execution_count":null,"id":"5ff35713","metadata":{"id":"5ff35713"},"outputs":[],"source":["# capital 수익 계산\n","train_df['capital'] = train_df['capital.gain'] - train_df['capital.loss']\n","test_df['capital'] = test_df['capital.gain'] - test_df['capital.loss']\n","\n","# #필요없는 열 삭제\n","train_df.drop(columns=[ 'fnlwgt', 'education'], inplace=True)\n","test_df.drop(columns=['fnlwgt', 'education'], inplace=True)"]},{"cell_type":"markdown","id":"7b3986e8","metadata":{"id":"7b3986e8"},"source":["### 2) native country 결측값 & 미국이 너무 많음 문제\n","* gdp외부데이터 활용하여 IncomeGroup이라는 새로운 열로 대체\n","* 국가별 GDP, 국가명, GDP기준 IncomeGroup추출\n","* 데이터출처:https://data.worldbank.org/indicator/NY.GDP.MKTP.CD (World Bank Group)"]},{"cell_type":"code","execution_count":null,"id":"fb36ffe9","metadata":{"id":"fb36ffe9"},"outputs":[],"source":["#gdp 외부 데이터 가져오기\n","gdp1 = pd.read_csv(\"API_NY.GDP.MKTP.CD_DS2_en_csv_v2_31795.csv\", skiprows=4)\n","gdp = gdp1.copy()\n","\n","#필요한 부분 2021년도만 가져옴\n","#2021을 가져온 이유는 최근이면서 결측치 적은 연도\n","gdp_2021 = gdp[['Country Name', 'Country Code', '2021']]\n","\n","#gdp 기준 income group 데이터 가져오기\n","c_group1 = pd.read_csv(\"Metadata_Country_API_NY.GDP.MKTP.CD_DS2_en_csv_v2_31795.csv\")\n","c_group2 = c_group1.copy()\n","# 필요한 부분만 오려내기\n","c_group = c_group2[['Country Code', 'IncomeGroup']]\n","\n","# gdp 두 데이터에서 필요한 부분만 뽑아서 merge\n","# gdp는 몰라도 Income Group은 알 수 있는 경우 있음\n","income_group = pd.merge(gdp_2021, c_group, how = 'left')\n","income_group.drop(columns = ['Country Code'], inplace = True)\n","income_group.head()\n","\n","# gdp데이터와 train/test데이터 국가명이 다른 형식인 아이들 딕셔너리로 정리하기\n","country = {\n","    'England' : 'United Kingdom', 'Vietnam' : 'Vietnam Viet Nam', 'Iran' : 'Iran, Islamic Rep.',\n","    'Trinadad&Tobago' : 'Trinidad and Tobago', 'Outlying-US(Guam-USVI-etc)' : 'Guam', 'Scotland' : 'United Kingdom',\n","    'Holand-Netherlands' : ' Netherlands'\n","}"]},{"cell_type":"code","execution_count":null,"id":"d5417c8b","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1728262524090,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"d5417c8b","outputId":"c42b9e16-b637-49bc-a837-e5b63170f8b1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age     workclass  education.num      marital.status  \\\n","0       41       Private             13            Divorced   \n","1       20       Private              9       Never-married   \n","2       73       Private              9             Widowed   \n","3       56  Self-emp-inc             10  Married-civ-spouse   \n","4       53       Private              7  Married-civ-spouse   \n","...    ...           ...            ...                 ...   \n","25015   35       unknown             13  Married-civ-spouse   \n","25016   30       unknown             13       Never-married   \n","25017   71       unknown             16  Married-civ-spouse   \n","25018   41       unknown              9           Separated   \n","25019   72       unknown              9  Married-civ-spouse   \n","\n","              occupation   relationship                race     sex  \\\n","0        Exec-managerial      Unmarried               White  Female   \n","1          Other-service      Own-child               White  Female   \n","2          Other-service  Not-in-family               White  Female   \n","3        Exec-managerial        Husband               White    Male   \n","4      Machine-op-inspct        Husband               White    Male   \n","...                  ...            ...                 ...     ...   \n","25015            unknown           Wife               White  Female   \n","25016            unknown  Not-in-family  Asian-Pac-Islander  Female   \n","25017            unknown        Husband               White    Male   \n","25018            unknown  Not-in-family               Black  Female   \n","25019            unknown        Husband               White    Male   \n","\n","       capital.gain  capital.loss  hours.per.week  income  capital  \\\n","0                 0             0              45       0        0   \n","1                 0             0              40       0        0   \n","2                 0             0              37       0        0   \n","3              7688             0              50       1     7688   \n","4                 0             0              40       0        0   \n","...             ...           ...             ...     ...      ...   \n","25015             0             0              55       1        0   \n","25016             0             0              99       0        0   \n","25017             0             0              10       1        0   \n","25018             0             0              32       0        0   \n","25019             0             0              25       0        0   \n","\n","               IncomeGroup  \n","0              High income  \n","1      Upper middle income  \n","2              High income  \n","3              High income  \n","4              High income  \n","...                    ...  \n","25015          High income  \n","25016          High income  \n","25017          High income  \n","25018          High income  \n","25019          High income  \n","\n","[25020 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-d57830bc-d5dd-4f8b-ae3b-a08d44101478\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education.num</th>\n","      <th>marital.status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital.gain</th>\n","      <th>capital.loss</th>\n","      <th>hours.per.week</th>\n","      <th>income</th>\n","      <th>capital</th>\n","      <th>IncomeGroup</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>Private</td>\n","      <td>13</td>\n","      <td>Divorced</td>\n","      <td>Exec-managerial</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>Private</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Other-service</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Upper middle income</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>73</td>\n","      <td>Private</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Other-service</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>Self-emp-inc</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>7688</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>25015</th>\n","      <td>35</td>\n","      <td>unknown</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>unknown</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>25016</th>\n","      <td>30</td>\n","      <td>unknown</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>unknown</td>\n","      <td>Not-in-family</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>99</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>25017</th>\n","      <td>71</td>\n","      <td>unknown</td>\n","      <td>16</td>\n","      <td>Married-civ-spouse</td>\n","      <td>unknown</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>25018</th>\n","      <td>41</td>\n","      <td>unknown</td>\n","      <td>9</td>\n","      <td>Separated</td>\n","      <td>unknown</td>\n","      <td>Not-in-family</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>25019</th>\n","      <td>72</td>\n","      <td>unknown</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>unknown</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25020 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d57830bc-d5dd-4f8b-ae3b-a08d44101478')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d57830bc-d5dd-4f8b-ae3b-a08d44101478 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d57830bc-d5dd-4f8b-ae3b-a08d44101478');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-93c5b722-f3d6-4618-af61-e818a4802f9b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-93c5b722-f3d6-4618-af61-e818a4802f9b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-93c5b722-f3d6-4618-af61-e818a4802f9b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e44ad025-d622-421e-866a-3e58669e328f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e44ad025-d622-421e-866a-3e58669e328f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df","summary":"{\n  \"name\": \"train_df\",\n  \"rows\": 25020,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          53,\n          81,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"unknown\",\n          \"Self-emp-inc\",\n          \"Federal-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education.num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          13,\n          9,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital.status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Divorced\",\n          \"Never-married\",\n          \"Separated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Exec-managerial\",\n          \"Other-service\",\n          \"Craft-repair\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Unmarried\",\n          \"Own-child\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Black\",\n          \"Asian-Pac-Islander\",\n          \"Amer-Indian-Eskimo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 117,\n        \"samples\": [\n          6418,\n          13550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 405,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          2201,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours.per.week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          62,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7304,\n        \"min\": -4356,\n        \"max\": 99999,\n        \"num_unique_values\": 204,\n        \"samples\": [\n          10605,\n          -2559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IncomeGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Upper middle income\",\n          \"Lower middle income\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}],"source":["#train 데이터 merge\n","\n","#국가명 형식에서 -를 공백으로 채워주기\n","#  ex. United-States -> United States\n","train_df['native.country'] = train_df['native.country'].replace(country).str.replace('-', ' ')\n","#국가명 다른 애들 통일\n","train_df['native.country'] = train_df['native.country'].replace(country)\n","\n","# gdp와 train을 나라명 기준으로 merge\n","train_df = pd.merge(train_df, income_group, how = 'left', left_on = 'native.country', right_on = 'Country Name')\n","\n","# incomegroup을 알 수 없는 행은  Unknown 처리\n","train_df['IncomeGroup'] = train_df['IncomeGroup'].fillna('unknown')\n","\n","# 필요없는 열 삭제\n","train_df.drop(columns = [ 'native.country', 'Country Name', '2021'], inplace = True)\n","train_df"]},{"cell_type":"code","execution_count":null,"id":"f93612b6","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"executionInfo":{"elapsed":428,"status":"ok","timestamp":1728262524499,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"f93612b6","outputId":"68a65c97-a3d1-4511-824f-3079ce71b0d1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      age         workclass  education.num      marital.status  \\\n","0      45       Federal-gov             12            Divorced   \n","1      22  Self-emp-not-inc              9       Never-married   \n","2      39           Private             13       Never-married   \n","3      35           Private             15       Never-married   \n","4      40           Private             13  Married-civ-spouse   \n","...   ...               ...            ...                 ...   \n","7536   20           Private             10       Never-married   \n","7537   52           Private              9  Married-civ-spouse   \n","7538   50           Private             10  Married-civ-spouse   \n","7539   26           Private             10           Separated   \n","7540   29           Private              9       Never-married   \n","\n","             occupation   relationship                race     sex  \\\n","0          Adm-clerical      Unmarried  Asian-Pac-Islander    Male   \n","1       Farming-fishing      Own-child               White    Male   \n","2          Adm-clerical      Own-child               White  Female   \n","3        Prof-specialty  Not-in-family  Asian-Pac-Islander    Male   \n","4                 Sales        Husband               White    Male   \n","...                 ...            ...                 ...     ...   \n","7536      Other-service      Own-child               White  Female   \n","7537    Exec-managerial        Husband               White    Male   \n","7538       Tech-support        Husband               White    Male   \n","7539    Farming-fishing      Own-child               White    Male   \n","7540  Handlers-cleaners  Not-in-family               White    Male   \n","\n","      capital.gain  capital.loss  hours.per.week  income  capital  \\\n","0                0          2080              40       0    -2080   \n","1                0             0              40       0        0   \n","2                0             0              40       0        0   \n","3                0             0              40       1        0   \n","4                0             0              40       1        0   \n","...            ...           ...             ...     ...      ...   \n","7536             0             0              20       0        0   \n","7537             0             0              50       1        0   \n","7538             0             0              45       1        0   \n","7539             0             0              40       0        0   \n","7540             0          1408              40       0    -1408   \n","\n","              IncomeGroup  \n","0     Lower middle income  \n","1             High income  \n","2             High income  \n","3     Lower middle income  \n","4             High income  \n","...                   ...  \n","7536          High income  \n","7537          High income  \n","7538          High income  \n","7539          High income  \n","7540          High income  \n","\n","[7541 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-e8ee122d-492c-4be7-a2d1-b7f5d6ff145b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education.num</th>\n","      <th>marital.status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital.gain</th>\n","      <th>capital.loss</th>\n","      <th>hours.per.week</th>\n","      <th>income</th>\n","      <th>capital</th>\n","      <th>IncomeGroup</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>45</td>\n","      <td>Federal-gov</td>\n","      <td>12</td>\n","      <td>Divorced</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>2080</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>-2080</td>\n","      <td>Lower middle income</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Farming-fishing</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39</td>\n","      <td>Private</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35</td>\n","      <td>Private</td>\n","      <td>15</td>\n","      <td>Never-married</td>\n","      <td>Prof-specialty</td>\n","      <td>Not-in-family</td>\n","      <td>Asian-Pac-Islander</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Lower middle income</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Sales</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7536</th>\n","      <td>20</td>\n","      <td>Private</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>Other-service</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>7537</th>\n","      <td>52</td>\n","      <td>Private</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>7538</th>\n","      <td>50</td>\n","      <td>Private</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>7539</th>\n","      <td>26</td>\n","      <td>Private</td>\n","      <td>10</td>\n","      <td>Separated</td>\n","      <td>Farming-fishing</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>7540</th>\n","      <td>29</td>\n","      <td>Private</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>1408</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>-1408</td>\n","      <td>High income</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7541 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8ee122d-492c-4be7-a2d1-b7f5d6ff145b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e8ee122d-492c-4be7-a2d1-b7f5d6ff145b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e8ee122d-492c-4be7-a2d1-b7f5d6ff145b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08268fd2-5319-418f-9f5f-6de848ee5bdb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08268fd2-5319-418f-9f5f-6de848ee5bdb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08268fd2-5319-418f-9f5f-6de848ee5bdb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_faa46543-e466-4537-a89e-9a68a38d1235\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_faa46543-e466-4537-a89e-9a68a38d1235 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_df","summary":"{\n  \"name\": \"test_df\",\n  \"rows\": 7541,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          57,\n          45,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Federal-gov\",\n          \"Self-emp-not-inc\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education.num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          12,\n          9,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital.status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Divorced\",\n          \"Never-married\",\n          \"Separated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Other-service\",\n          \"Priv-house-serv\",\n          \"Adm-clerical\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Unmarried\",\n          \"Own-child\",\n          \"Wife\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"White\",\n          \"Amer-Indian-Eskimo\",\n          \"Black\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7724,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          2105,\n          5556\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 395,\n        \"min\": 0,\n        \"max\": 3770,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          2246,\n          2080\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours.per.week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          90,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7746,\n        \"min\": -3770,\n        \"max\": 99999,\n        \"num_unique_values\": 162,\n        \"samples\": [\n          6360,\n          6418\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IncomeGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"High income\",\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}],"source":["#test 데이터 merge\n","\n","#국가명 형식에서 -를 공백으로 채워주기\n","#  ex. United-States -> United States\n","test_df['native.country'] = test_df['native.country'].replace(country).str.replace('-', ' ')\n","#국가명 다른 애들 통일\n","test_df['native.country'] = test_df['native.country'].replace(country)\n","\n","# gdp와 test를 나라명 기준으로 merge\n","test_df = pd.merge(test_df, income_group, how = 'left', left_on = 'native.country', right_on = 'Country Name')\n","test_df\n","\n","# incomegroup을 알 수 없는 0개는  Unknown 처리.. 이지만 0개라서 무의미한 코드\n","test_df['IncomeGroup'] = test_df['IncomeGroup'].fillna('unknown')\n","\n","# 필요없는 열\n","test_df.drop(columns = ['native.country', 'Country Name', '2021'], inplace = True)\n","test_df"]},{"cell_type":"code","execution_count":null,"id":"d4ffa283","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":679},"executionInfo":{"elapsed":1452,"status":"ok","timestamp":1728262525943,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"d4ffa283","outputId":"a810197a-7341-4884-ad16-7ff3d3fe859c","scrolled":true},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["i_count = train_df['IncomeGroup'].value_counts()\n","n_count = train_df1['native.country'].value_counts()\n","\n","fig, axs = plt.subplots(2,1, figsize=(15, 8))\n","fig.suptitle('Dealing native.country', fontsize = 20)\n","\n","axs[0].bar(n_count.index, n_count.values)\n","axs[0].set_title('native.country')\n","\n","axs[1].bar(i_count.index, i_count.values)\n","axs[1].set_title('IncomeGroup')\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"6ce7747b","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1728262525943,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"6ce7747b","outputId":"837b59bf-0b3f-476b-f255-93f89ec597f1","scrolled":true},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25020 entries, 0 to 25019\n","Data columns (total 15 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   age             25020 non-null  int64 \n"," 1   workclass       23184 non-null  object\n"," 2   fnlwgt          25020 non-null  int64 \n"," 3   education       25020 non-null  object\n"," 4   education.num   25020 non-null  int64 \n"," 5   marital.status  25020 non-null  object\n"," 6   occupation      23177 non-null  object\n"," 7   relationship    25020 non-null  object\n"," 8   race            25020 non-null  object\n"," 9   sex             25020 non-null  object\n"," 10  capital.gain    25020 non-null  int64 \n"," 11  capital.loss    25020 non-null  int64 \n"," 12  hours.per.week  25020 non-null  int64 \n"," 13  native.country  24437 non-null  object\n"," 14  income          25020 non-null  int64 \n","dtypes: int64(7), object(8)\n","memory usage: 2.9+ MB\n"]}],"source":["# 전처리 전\n","train_df1.info()"]},{"cell_type":"code","execution_count":null,"id":"c8008800","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1728262525943,"user":{"displayName":"정의관","userId":"07984772602579906399"},"user_tz":-540},"id":"c8008800","outputId":"7c343ab0-e4b7-4b9f-818f-e11191bfbcdb"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25020 entries, 0 to 25019\n","Data columns (total 14 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   age             25020 non-null  int64 \n"," 1   workclass       25020 non-null  object\n"," 2   education.num   25020 non-null  int64 \n"," 3   marital.status  25020 non-null  object\n"," 4   occupation      25020 non-null  object\n"," 5   relationship    25020 non-null  object\n"," 6   race            25020 non-null  object\n"," 7   sex             25020 non-null  object\n"," 8   capital.gain    25020 non-null  int64 \n"," 9   capital.loss    25020 non-null  int64 \n"," 10  hours.per.week  25020 non-null  int64 \n"," 11  income          25020 non-null  int64 \n"," 12  capital         25020 non-null  int64 \n"," 13  IncomeGroup     25020 non-null  object\n","dtypes: int64(7), object(7)\n","memory usage: 2.7+ MB\n"]}],"source":["# 전처리 후\n","train_df.info()"]},{"cell_type":"markdown","id":"cU_BqSElqUD2","metadata":{"id":"cU_BqSElqUD2"},"source":["#03. 범주화"]},{"cell_type":"markdown","id":"l1fc7P8RqdUS","metadata":{"id":"l1fc7P8RqdUS"},"source":["1)education.num"]},{"cell_type":"code","source":["# education.num을 범주형 값으로 묶기\n","bins = [0, 4, 6, 12, 14, 15, 16, float('inf')]  # 구간을 지정\n","labels = ['low_ele', 'ele', 'mid', 'high', 'assoc', 'bach', 'above_mas']  # 각 구간에 부여할 라벨\n","\n","train_df['education.num'] = pd.cut(train_df['education.num'], bins=bins, labels=labels, right=True)\n","test_df['education.num'] = pd.cut(test_df['education.num'], bins=bins, labels=labels, right=True)"],"metadata":{"id":"fLZL7DReG-st"},"id":"fLZL7DReG-st","execution_count":null,"outputs":[]},{"cell_type":"markdown","id":"J_CUQ9whrwgD","metadata":{"id":"J_CUQ9whrwgD"},"source":["2)marital.status"]},{"cell_type":"code","execution_count":null,"id":"xDBZ19jaryqq","metadata":{"id":"xDBZ19jaryqq"},"outputs":[],"source":["# 'marital.status' 열을 직접 대체\n","train_df['marital.status'] = train_df['marital.status'].replace(\n","    {'Married-civ-spouse': 'Married', 'Married-AF-spouse': 'Married'}\n",").apply(lambda x: 'Married' if x == 'Married' else 'Not Married')\n","\n","test_df['marital.status'] = test_df['marital.status'].replace(\n","    {'Married-civ-spouse': 'Married', 'Married-AF-spouse': 'Married'}\n",").apply(lambda x: 'Married' if x == 'Married' else 'Not Married')"]},{"cell_type":"markdown","id":"WXvh9mzFr1wU","metadata":{"id":"WXvh9mzFr1wU"},"source":["3)relationship"]},{"cell_type":"code","execution_count":null,"id":"oFQrGxSdr4Qv","metadata":{"id":"oFQrGxSdr4Qv"},"outputs":[],"source":["# 'relationship' 열을 직접 대체\n","train_df['relationship'] = train_df['relationship'].replace(\n","    {'Husband': 'Spouse', 'Wife': 'Spouse'}\n",").apply(lambda x: 'Spouse' if x == 'Spouse' else 'Not Spouse')\n","\n","test_df['relationship'] = test_df['relationship'].replace(\n","    {'Husband': 'Spouse', 'Wife': 'Spouse'}\n",").apply(lambda x: 'Spouse' if x == 'Spouse' else 'Not Spouse')"]},{"cell_type":"code","source":["train_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"us2zDx2hLSyd","executionInfo":{"status":"ok","timestamp":1728262526361,"user_tz":-540,"elapsed":428,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"a56d3133-b453-48f4-b27f-a0bf180ddf27"},"id":"us2zDx2hLSyd","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     workclass education.num marital.status         occupation  \\\n","0   41       Private          high    Not Married    Exec-managerial   \n","1   20       Private           mid    Not Married      Other-service   \n","2   73       Private           mid    Not Married      Other-service   \n","3   56  Self-emp-inc           mid        Married    Exec-managerial   \n","4   53       Private           mid        Married  Machine-op-inspct   \n","\n","  relationship   race     sex  capital.gain  capital.loss  hours.per.week  \\\n","0   Not Spouse  White  Female             0             0              45   \n","1   Not Spouse  White  Female             0             0              40   \n","2   Not Spouse  White  Female             0             0              37   \n","3       Spouse  White    Male          7688             0              50   \n","4       Spouse  White    Male             0             0              40   \n","\n","   income  capital          IncomeGroup  \n","0       0        0          High income  \n","1       0        0  Upper middle income  \n","2       0        0          High income  \n","3       1     7688          High income  \n","4       0        0          High income  "],"text/html":["\n","  <div id=\"df-2edccf7b-fbb1-498f-a366-cb46786cdfd1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education.num</th>\n","      <th>marital.status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital.gain</th>\n","      <th>capital.loss</th>\n","      <th>hours.per.week</th>\n","      <th>income</th>\n","      <th>capital</th>\n","      <th>IncomeGroup</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>Private</td>\n","      <td>high</td>\n","      <td>Not Married</td>\n","      <td>Exec-managerial</td>\n","      <td>Not Spouse</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>Private</td>\n","      <td>mid</td>\n","      <td>Not Married</td>\n","      <td>Other-service</td>\n","      <td>Not Spouse</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Upper middle income</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>73</td>\n","      <td>Private</td>\n","      <td>mid</td>\n","      <td>Not Married</td>\n","      <td>Other-service</td>\n","      <td>Not Spouse</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>Self-emp-inc</td>\n","      <td>mid</td>\n","      <td>Married</td>\n","      <td>Exec-managerial</td>\n","      <td>Spouse</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>7688</td>\n","      <td>High income</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>mid</td>\n","      <td>Married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Spouse</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>High income</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2edccf7b-fbb1-498f-a366-cb46786cdfd1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2edccf7b-fbb1-498f-a366-cb46786cdfd1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2edccf7b-fbb1-498f-a366-cb46786cdfd1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-71240aec-ba2e-4ab1-8aa4-29bd34c66d21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71240aec-ba2e-4ab1-8aa4-29bd34c66d21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-71240aec-ba2e-4ab1-8aa4-29bd34c66d21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df","summary":"{\n  \"name\": \"train_df\",\n  \"rows\": 25020,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          53,\n          81,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"unknown\",\n          \"Self-emp-inc\",\n          \"Federal-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education.num\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"high\",\n          \"mid\",\n          \"assoc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital.status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Married\",\n          \"Not Married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Exec-managerial\",\n          \"Other-service\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Spouse\",\n          \"Not Spouse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Black\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 117,\n        \"samples\": [\n          6418,\n          13550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 405,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          2201,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours.per.week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          62,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7304,\n        \"min\": -4356,\n        \"max\": 99999,\n        \"num_unique_values\": 204,\n        \"samples\": [\n          10605,\n          -2559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IncomeGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Upper middle income\",\n          \"Lower middle income\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["#인코딩"],"metadata":{"id":"h6pqJM7OczW8"},"id":"h6pqJM7OczW8"},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","\n","def label_encode_columns(train_df, test_df, columns):\n","\n","    encoders = {}\n","\n","    for column in columns:\n","        le = LabelEncoder()\n","\n","        train_df[column] = le.fit_transform(train_df[column])\n","        test_df[column] = le.transform(test_df[column])\n","        encoders[column] = le\n","\n","    return train_df, test_df, encoders\n","\n","\n","train_df, test_df, encoders = label_encode_columns(train_df, test_df, ['workclass', 'education.num', 'occupation', 'marital.status', 'relationship', 'race', 'IncomeGroup'])\n","\n","train_df = pd.get_dummies(train_df, columns = ['sex'], drop_first = True)\n","test_df = pd.get_dummies(test_df, columns = ['sex'], drop_first = True)\n","\n","\n","test_df = test_df.reindex(columns=train_df.columns, fill_value=0)"],"metadata":{"id":"V12aSG-Bli7Q"},"id":"V12aSG-Bli7Q","execution_count":null,"outputs":[]},{"cell_type":"markdown","id":"Bu9TE6Hqs5IF","metadata":{"id":"Bu9TE6Hqs5IF"},"source":["#AutoML로 최적의 모델 선택"]},{"cell_type":"code","execution_count":null,"id":"8c94b2c8-207a-4347-8bf0-d4d526a5ce77","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"8c94b2c8-207a-4347-8bf0-d4d526a5ce77","executionInfo":{"status":"ok","timestamp":1728262526363,"user_tz":-540,"elapsed":23,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"717f8375-074b-456a-d79b-cc88c30a4e3a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  workclass  education.num  marital.status  occupation  relationship  \\\n","0   41          3              3               1           3             0   \n","1   20          3              5               1           7             0   \n","2   73          3              5               1           7             0   \n","3   56          4              5               0           3             1   \n","4   53          3              5               0           6             1   \n","\n","   race  capital.gain  capital.loss  hours.per.week  income  capital  \\\n","0     4             0             0              45       0        0   \n","1     4             0             0              40       0        0   \n","2     4             0             0              37       0        0   \n","3     4          7688             0              50       1     7688   \n","4     4             0             0              40       0        0   \n","\n","   IncomeGroup  sex_Male  \n","0            0     False  \n","1            2     False  \n","2            0     False  \n","3            0      True  \n","4            0      True  "],"text/html":["\n","  <div id=\"df-5452e3e0-162b-4897-a9ce-dcdc3d64ea23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education.num</th>\n","      <th>marital.status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>capital.gain</th>\n","      <th>capital.loss</th>\n","      <th>hours.per.week</th>\n","      <th>income</th>\n","      <th>capital</th>\n","      <th>IncomeGroup</th>\n","      <th>sex_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>73</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>53</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5452e3e0-162b-4897-a9ce-dcdc3d64ea23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5452e3e0-162b-4897-a9ce-dcdc3d64ea23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5452e3e0-162b-4897-a9ce-dcdc3d64ea23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7ea3bd9-9d6a-44e0-a22c-d7e0a620fe35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7ea3bd9-9d6a-44e0-a22c-d7e0a620fe35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7ea3bd9-9d6a-44e0-a22c-d7e0a620fe35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df","summary":"{\n  \"name\": \"train_df\",\n  \"rows\": 25020,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          53,\n          81,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          8,\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education.num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital.status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 117,\n        \"samples\": [\n          6418,\n          13550\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 405,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          2201,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours.per.week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          62,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7304,\n        \"min\": -4356,\n        \"max\": 99999,\n        \"num_unique_values\": 204,\n        \"samples\": [\n          10605,\n          -2559\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IncomeGroup\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex_Male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}],"source":["train_df.head()"]},{"cell_type":"code","execution_count":null,"id":"339664c6-1ad6-443b-91b0-dbb5d1f684a3","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"339664c6-1ad6-443b-91b0-dbb5d1f684a3","executionInfo":{"status":"ok","timestamp":1728262526364,"user_tz":-540,"elapsed":21,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"309e3d9e-5c3b-47aa-f59a-1e321129a955"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  workclass  education.num  marital.status  occupation  relationship  \\\n","0   45          0              5               1           0             0   \n","1   22          5              5               1           4             0   \n","2   39          3              3               1           0             0   \n","3   35          3              0               1           9             0   \n","4   40          3              3               0          11             1   \n","\n","   race  capital.gain  capital.loss  hours.per.week  income  capital  \\\n","0     1             0          2080              40       0    -2080   \n","1     4             0             0              40       0        0   \n","2     4             0             0              40       0        0   \n","3     1             0             0              40       1        0   \n","4     4             0             0              40       1        0   \n","\n","   IncomeGroup  sex_Male  \n","0            1      True  \n","1            0      True  \n","2            0     False  \n","3            1      True  \n","4            0      True  "],"text/html":["\n","  <div id=\"df-10cbe028-12f6-4864-9b14-73eed8252239\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education.num</th>\n","      <th>marital.status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>capital.gain</th>\n","      <th>capital.loss</th>\n","      <th>hours.per.week</th>\n","      <th>income</th>\n","      <th>capital</th>\n","      <th>IncomeGroup</th>\n","      <th>sex_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2080</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>-2080</td>\n","      <td>1</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>22</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>35</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>40</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10cbe028-12f6-4864-9b14-73eed8252239')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10cbe028-12f6-4864-9b14-73eed8252239 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10cbe028-12f6-4864-9b14-73eed8252239');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6528af05-a736-43d1-a5a9-aec265e7ba79\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6528af05-a736-43d1-a5a9-aec265e7ba79')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6528af05-a736-43d1-a5a9-aec265e7ba79 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_df","summary":"{\n  \"name\": \"test_df\",\n  \"rows\": 7541,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          57,\n          45,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          5,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education.num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5,\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital.status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 13,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          7,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7724,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          2105,\n          5556\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital.loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 395,\n        \"min\": 0,\n        \"max\": 3770,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          2246,\n          2080\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours.per.week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          90,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7746,\n        \"min\": -3770,\n        \"max\": 99999,\n        \"num_unique_values\": 162,\n        \"samples\": [\n          6360,\n          6418\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IncomeGroup\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex_Male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}],"source":["test_df.head()"]},{"cell_type":"code","execution_count":null,"id":"ifNeOAYQs8a6","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["346c6a969a7b43d8a57a85eaa5f1cd5a","e688576e08d24741910143c116abb9af","23497ea7f452427b8b432fd149fb8015","9218bdfa34de4ff392d28181da97bde6","8beef00757ec475d9b314d423ea88000","5d3cb2d38afa48d98745828f6a6a54de","16ba1b6c04ed417dac65afe0f7bae967","1a5c5876c6914b84a49ba540327f6f65","6b1b680db1b74edbbcd053cd34a49822","c933c040424d453fa2123bda9fb35612","74bf4a884b4c44d58614a785e4ff4f2b"]},"id":"ifNeOAYQs8a6","scrolled":true,"executionInfo":{"status":"ok","timestamp":1728262737024,"user_tz":-540,"elapsed":210679,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"247342e9-124b-4e73-d80d-4ab44c78bbf8"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7c98cb916950>"],"text/html":["<style type=\"text/css\">\n","#T_b7934_row8_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_b7934\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_b7934_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_b7934_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_b7934_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_b7934_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_b7934_row0_col1\" class=\"data row0 col1\" >123</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_b7934_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_b7934_row1_col1\" class=\"data row1 col1\" >income</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_b7934_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_b7934_row2_col1\" class=\"data row2 col1\" >Binary</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_b7934_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_b7934_row3_col1\" class=\"data row3 col1\" >(25020, 14)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_b7934_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_b7934_row4_col1\" class=\"data row4 col1\" >(25020, 14)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_b7934_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_b7934_row5_col1\" class=\"data row5 col1\" >(17514, 14)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_b7934_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_b7934_row6_col1\" class=\"data row6 col1\" >(7506, 14)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_b7934_row7_col0\" class=\"data row7 col0\" >Numeric features</td>\n","      <td id=\"T_b7934_row7_col1\" class=\"data row7 col1\" >12</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_b7934_row8_col0\" class=\"data row8 col0\" >Preprocess</td>\n","      <td id=\"T_b7934_row8_col1\" class=\"data row8 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_b7934_row9_col0\" class=\"data row9 col0\" >Imputation type</td>\n","      <td id=\"T_b7934_row9_col1\" class=\"data row9 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_b7934_row10_col0\" class=\"data row10 col0\" >Numeric imputation</td>\n","      <td id=\"T_b7934_row10_col1\" class=\"data row10 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_b7934_row11_col0\" class=\"data row11 col0\" >Categorical imputation</td>\n","      <td id=\"T_b7934_row11_col1\" class=\"data row11 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_b7934_row12_col0\" class=\"data row12 col0\" >Fold Generator</td>\n","      <td id=\"T_b7934_row12_col1\" class=\"data row12 col1\" >StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_b7934_row13_col0\" class=\"data row13 col0\" >Fold Number</td>\n","      <td id=\"T_b7934_row13_col1\" class=\"data row13 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_b7934_row14_col0\" class=\"data row14 col0\" >CPU Jobs</td>\n","      <td id=\"T_b7934_row14_col1\" class=\"data row14 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_b7934_row15_col0\" class=\"data row15 col0\" >Use GPU</td>\n","      <td id=\"T_b7934_row15_col1\" class=\"data row15 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_b7934_row16_col0\" class=\"data row16 col0\" >Log Experiment</td>\n","      <td id=\"T_b7934_row16_col1\" class=\"data row16 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_b7934_row17_col0\" class=\"data row17 col0\" >Experiment Name</td>\n","      <td id=\"T_b7934_row17_col1\" class=\"data row17 col1\" >clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b7934_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_b7934_row18_col0\" class=\"data row18 col0\" >USI</td>\n","      <td id=\"T_b7934_row18_col1\" class=\"data row18 col1\" >ed6d</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7c98eaa5f100>"],"text/html":["<style type=\"text/css\">\n","#T_8bb00 th {\n","  text-align: left;\n","}\n","#T_8bb00_row0_col0, #T_8bb00_row0_col2, #T_8bb00_row0_col3, #T_8bb00_row0_col4, #T_8bb00_row1_col0, #T_8bb00_row1_col1, #T_8bb00_row1_col3, #T_8bb00_row1_col4, #T_8bb00_row1_col5, #T_8bb00_row1_col6, #T_8bb00_row1_col7, #T_8bb00_row2_col0, #T_8bb00_row2_col1, #T_8bb00_row2_col2, #T_8bb00_row2_col4, #T_8bb00_row2_col5, #T_8bb00_row2_col6, #T_8bb00_row2_col7, #T_8bb00_row3_col0, #T_8bb00_row3_col1, #T_8bb00_row3_col2, #T_8bb00_row3_col3, #T_8bb00_row3_col5, #T_8bb00_row3_col6, #T_8bb00_row3_col7, #T_8bb00_row4_col0, #T_8bb00_row4_col1, #T_8bb00_row4_col2, #T_8bb00_row4_col3, #T_8bb00_row4_col4, #T_8bb00_row4_col5, #T_8bb00_row4_col6, #T_8bb00_row4_col7, #T_8bb00_row5_col0, #T_8bb00_row5_col1, #T_8bb00_row5_col2, #T_8bb00_row5_col3, #T_8bb00_row5_col4, #T_8bb00_row5_col5, #T_8bb00_row5_col6, #T_8bb00_row5_col7, #T_8bb00_row6_col0, #T_8bb00_row6_col1, #T_8bb00_row6_col2, #T_8bb00_row6_col3, #T_8bb00_row6_col4, #T_8bb00_row6_col5, #T_8bb00_row6_col6, #T_8bb00_row6_col7, #T_8bb00_row7_col0, #T_8bb00_row7_col1, #T_8bb00_row7_col2, #T_8bb00_row7_col3, #T_8bb00_row7_col4, #T_8bb00_row7_col5, #T_8bb00_row7_col6, #T_8bb00_row7_col7, #T_8bb00_row8_col0, #T_8bb00_row8_col1, #T_8bb00_row8_col2, #T_8bb00_row8_col3, #T_8bb00_row8_col4, #T_8bb00_row8_col5, #T_8bb00_row8_col6, #T_8bb00_row8_col7, #T_8bb00_row9_col0, #T_8bb00_row9_col1, #T_8bb00_row9_col2, #T_8bb00_row9_col3, #T_8bb00_row9_col4, #T_8bb00_row9_col5, #T_8bb00_row9_col6, #T_8bb00_row9_col7, #T_8bb00_row10_col0, #T_8bb00_row10_col1, #T_8bb00_row10_col2, #T_8bb00_row10_col3, #T_8bb00_row10_col4, #T_8bb00_row10_col5, #T_8bb00_row10_col6, #T_8bb00_row10_col7, #T_8bb00_row11_col0, #T_8bb00_row11_col1, #T_8bb00_row11_col2, #T_8bb00_row11_col3, #T_8bb00_row11_col4, #T_8bb00_row11_col5, #T_8bb00_row11_col6, #T_8bb00_row11_col7, #T_8bb00_row12_col0, #T_8bb00_row12_col1, #T_8bb00_row12_col2, #T_8bb00_row12_col3, #T_8bb00_row12_col4, #T_8bb00_row12_col5, #T_8bb00_row12_col6, #T_8bb00_row12_col7, #T_8bb00_row13_col0, #T_8bb00_row13_col1, #T_8bb00_row13_col2, #T_8bb00_row13_col3, #T_8bb00_row13_col4, #T_8bb00_row13_col5, #T_8bb00_row13_col6, #T_8bb00_row13_col7, #T_8bb00_row14_col0, #T_8bb00_row14_col1, #T_8bb00_row14_col2, #T_8bb00_row14_col3, #T_8bb00_row14_col4, #T_8bb00_row14_col5, #T_8bb00_row14_col6, #T_8bb00_row14_col7, #T_8bb00_row15_col0, #T_8bb00_row15_col1, #T_8bb00_row15_col2, #T_8bb00_row15_col3, #T_8bb00_row15_col4, #T_8bb00_row15_col5, #T_8bb00_row15_col6, #T_8bb00_row15_col7 {\n","  text-align: left;\n","}\n","#T_8bb00_row0_col1, #T_8bb00_row0_col5, #T_8bb00_row0_col6, #T_8bb00_row0_col7, #T_8bb00_row1_col2, #T_8bb00_row2_col3, #T_8bb00_row3_col4 {\n","  text-align: left;\n","  background-color: yellow;\n","}\n","#T_8bb00_row0_col8, #T_8bb00_row1_col8, #T_8bb00_row2_col8, #T_8bb00_row3_col8, #T_8bb00_row4_col8, #T_8bb00_row5_col8, #T_8bb00_row6_col8, #T_8bb00_row7_col8, #T_8bb00_row8_col8, #T_8bb00_row9_col8, #T_8bb00_row10_col8, #T_8bb00_row11_col8, #T_8bb00_row13_col8, #T_8bb00_row14_col8, #T_8bb00_row15_col8 {\n","  text-align: left;\n","  background-color: lightgrey;\n","}\n","#T_8bb00_row12_col8 {\n","  text-align: left;\n","  background-color: yellow;\n","  background-color: lightgrey;\n","}\n","</style>\n","<table id=\"T_8bb00\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_8bb00_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n","      <th id=\"T_8bb00_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n","      <th id=\"T_8bb00_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n","      <th id=\"T_8bb00_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n","      <th id=\"T_8bb00_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n","      <th id=\"T_8bb00_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n","      <th id=\"T_8bb00_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n","      <th id=\"T_8bb00_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n","      <th id=\"T_8bb00_level0_col8\" class=\"col_heading level0 col8\" >TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row0\" class=\"row_heading level0 row0\" >lightgbm</th>\n","      <td id=\"T_8bb00_row0_col0\" class=\"data row0 col0\" >Light Gradient Boosting Machine</td>\n","      <td id=\"T_8bb00_row0_col1\" class=\"data row0 col1\" >0.8683</td>\n","      <td id=\"T_8bb00_row0_col2\" class=\"data row0 col2\" >0.9251</td>\n","      <td id=\"T_8bb00_row0_col3\" class=\"data row0 col3\" >0.6380</td>\n","      <td id=\"T_8bb00_row0_col4\" class=\"data row0 col4\" >0.7685</td>\n","      <td id=\"T_8bb00_row0_col5\" class=\"data row0 col5\" >0.6970</td>\n","      <td id=\"T_8bb00_row0_col6\" class=\"data row0 col6\" >0.6138</td>\n","      <td id=\"T_8bb00_row0_col7\" class=\"data row0 col7\" >0.6183</td>\n","      <td id=\"T_8bb00_row0_col8\" class=\"data row0 col8\" >1.6520</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row1\" class=\"row_heading level0 row1\" >catboost</th>\n","      <td id=\"T_8bb00_row1_col0\" class=\"data row1 col0\" >CatBoost Classifier</td>\n","      <td id=\"T_8bb00_row1_col1\" class=\"data row1 col1\" >0.8679</td>\n","      <td id=\"T_8bb00_row1_col2\" class=\"data row1 col2\" >0.9254</td>\n","      <td id=\"T_8bb00_row1_col3\" class=\"data row1 col3\" >0.6296</td>\n","      <td id=\"T_8bb00_row1_col4\" class=\"data row1 col4\" >0.7728</td>\n","      <td id=\"T_8bb00_row1_col5\" class=\"data row1 col5\" >0.6937</td>\n","      <td id=\"T_8bb00_row1_col6\" class=\"data row1 col6\" >0.6107</td>\n","      <td id=\"T_8bb00_row1_col7\" class=\"data row1 col7\" >0.6160</td>\n","      <td id=\"T_8bb00_row1_col8\" class=\"data row1 col8\" >9.5810</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row2\" class=\"row_heading level0 row2\" >xgboost</th>\n","      <td id=\"T_8bb00_row2_col0\" class=\"data row2 col0\" >Extreme Gradient Boosting</td>\n","      <td id=\"T_8bb00_row2_col1\" class=\"data row2 col1\" >0.8652</td>\n","      <td id=\"T_8bb00_row2_col2\" class=\"data row2 col2\" >0.9231</td>\n","      <td id=\"T_8bb00_row2_col3\" class=\"data row2 col3\" >0.6401</td>\n","      <td id=\"T_8bb00_row2_col4\" class=\"data row2 col4\" >0.7556</td>\n","      <td id=\"T_8bb00_row2_col5\" class=\"data row2 col5\" >0.6930</td>\n","      <td id=\"T_8bb00_row2_col6\" class=\"data row2 col6\" >0.6074</td>\n","      <td id=\"T_8bb00_row2_col7\" class=\"data row2 col7\" >0.6109</td>\n","      <td id=\"T_8bb00_row2_col8\" class=\"data row2 col8\" >0.2150</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row3\" class=\"row_heading level0 row3\" >gbc</th>\n","      <td id=\"T_8bb00_row3_col0\" class=\"data row3 col0\" >Gradient Boosting Classifier</td>\n","      <td id=\"T_8bb00_row3_col1\" class=\"data row3 col1\" >0.8643</td>\n","      <td id=\"T_8bb00_row3_col2\" class=\"data row3 col2\" >0.9204</td>\n","      <td id=\"T_8bb00_row3_col3\" class=\"data row3 col3\" >0.5661</td>\n","      <td id=\"T_8bb00_row3_col4\" class=\"data row3 col4\" >0.8053</td>\n","      <td id=\"T_8bb00_row3_col5\" class=\"data row3 col5\" >0.6647</td>\n","      <td id=\"T_8bb00_row3_col6\" class=\"data row3 col6\" >0.5829</td>\n","      <td id=\"T_8bb00_row3_col7\" class=\"data row3 col7\" >0.5972</td>\n","      <td id=\"T_8bb00_row3_col8\" class=\"data row3 col8\" >1.2210</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row4\" class=\"row_heading level0 row4\" >ada</th>\n","      <td id=\"T_8bb00_row4_col0\" class=\"data row4 col0\" >Ada Boost Classifier</td>\n","      <td id=\"T_8bb00_row4_col1\" class=\"data row4 col1\" >0.8591</td>\n","      <td id=\"T_8bb00_row4_col2\" class=\"data row4 col2\" >0.9120</td>\n","      <td id=\"T_8bb00_row4_col3\" class=\"data row4 col3\" >0.5839</td>\n","      <td id=\"T_8bb00_row4_col4\" class=\"data row4 col4\" >0.7680</td>\n","      <td id=\"T_8bb00_row4_col5\" class=\"data row4 col5\" >0.6632</td>\n","      <td id=\"T_8bb00_row4_col6\" class=\"data row4 col6\" >0.5762</td>\n","      <td id=\"T_8bb00_row4_col7\" class=\"data row4 col7\" >0.5850</td>\n","      <td id=\"T_8bb00_row4_col8\" class=\"data row4 col8\" >0.3930</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row5\" class=\"row_heading level0 row5\" >rf</th>\n","      <td id=\"T_8bb00_row5_col0\" class=\"data row5 col0\" >Random Forest Classifier</td>\n","      <td id=\"T_8bb00_row5_col1\" class=\"data row5 col1\" >0.8472</td>\n","      <td id=\"T_8bb00_row5_col2\" class=\"data row5 col2\" >0.8944</td>\n","      <td id=\"T_8bb00_row5_col3\" class=\"data row5 col3\" >0.6250</td>\n","      <td id=\"T_8bb00_row5_col4\" class=\"data row5 col4\" >0.6999</td>\n","      <td id=\"T_8bb00_row5_col5\" class=\"data row5 col5\" >0.6601</td>\n","      <td id=\"T_8bb00_row5_col6\" class=\"data row5 col6\" >0.5620</td>\n","      <td id=\"T_8bb00_row5_col7\" class=\"data row5 col7\" >0.5636</td>\n","      <td id=\"T_8bb00_row5_col8\" class=\"data row5 col8\" >1.4360</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row6\" class=\"row_heading level0 row6\" >et</th>\n","      <td id=\"T_8bb00_row6_col0\" class=\"data row6 col0\" >Extra Trees Classifier</td>\n","      <td id=\"T_8bb00_row6_col1\" class=\"data row6 col1\" >0.8417</td>\n","      <td id=\"T_8bb00_row6_col2\" class=\"data row6 col2\" >0.8566</td>\n","      <td id=\"T_8bb00_row6_col3\" class=\"data row6 col3\" >0.6096</td>\n","      <td id=\"T_8bb00_row6_col4\" class=\"data row6 col4\" >0.6886</td>\n","      <td id=\"T_8bb00_row6_col5\" class=\"data row6 col5\" >0.6466</td>\n","      <td id=\"T_8bb00_row6_col6\" class=\"data row6 col6\" >0.5450</td>\n","      <td id=\"T_8bb00_row6_col7\" class=\"data row6 col7\" >0.5468</td>\n","      <td id=\"T_8bb00_row6_col8\" class=\"data row6 col8\" >1.5030</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row7\" class=\"row_heading level0 row7\" >knn</th>\n","      <td id=\"T_8bb00_row7_col0\" class=\"data row7 col0\" >K Neighbors Classifier</td>\n","      <td id=\"T_8bb00_row7_col1\" class=\"data row7 col1\" >0.8349</td>\n","      <td id=\"T_8bb00_row7_col2\" class=\"data row7 col2\" >0.8463</td>\n","      <td id=\"T_8bb00_row7_col3\" class=\"data row7 col3\" >0.5714</td>\n","      <td id=\"T_8bb00_row7_col4\" class=\"data row7 col4\" >0.6821</td>\n","      <td id=\"T_8bb00_row7_col5\" class=\"data row7 col5\" >0.6217</td>\n","      <td id=\"T_8bb00_row7_col6\" class=\"data row7 col6\" >0.5172</td>\n","      <td id=\"T_8bb00_row7_col7\" class=\"data row7 col7\" >0.5206</td>\n","      <td id=\"T_8bb00_row7_col8\" class=\"data row7 col8\" >0.5070</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row8\" class=\"row_heading level0 row8\" >lr</th>\n","      <td id=\"T_8bb00_row8_col0\" class=\"data row8 col0\" >Logistic Regression</td>\n","      <td id=\"T_8bb00_row8_col1\" class=\"data row8 col1\" >0.8264</td>\n","      <td id=\"T_8bb00_row8_col2\" class=\"data row8 col2\" >0.8776</td>\n","      <td id=\"T_8bb00_row8_col3\" class=\"data row8 col3\" >0.4930</td>\n","      <td id=\"T_8bb00_row8_col4\" class=\"data row8 col4\" >0.6889</td>\n","      <td id=\"T_8bb00_row8_col5\" class=\"data row8 col5\" >0.5744</td>\n","      <td id=\"T_8bb00_row8_col6\" class=\"data row8 col6\" >0.4691</td>\n","      <td id=\"T_8bb00_row8_col7\" class=\"data row8 col7\" >0.4797</td>\n","      <td id=\"T_8bb00_row8_col8\" class=\"data row8 col8\" >2.5080</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row9\" class=\"row_heading level0 row9\" >dt</th>\n","      <td id=\"T_8bb00_row9_col0\" class=\"data row9 col0\" >Decision Tree Classifier</td>\n","      <td id=\"T_8bb00_row9_col1\" class=\"data row9 col1\" >0.8184</td>\n","      <td id=\"T_8bb00_row9_col2\" class=\"data row9 col2\" >0.7667</td>\n","      <td id=\"T_8bb00_row9_col3\" class=\"data row9 col3\" >0.6007</td>\n","      <td id=\"T_8bb00_row9_col4\" class=\"data row9 col4\" >0.6223</td>\n","      <td id=\"T_8bb00_row9_col5\" class=\"data row9 col5\" >0.6111</td>\n","      <td id=\"T_8bb00_row9_col6\" class=\"data row9 col6\" >0.4927</td>\n","      <td id=\"T_8bb00_row9_col7\" class=\"data row9 col7\" >0.4930</td>\n","      <td id=\"T_8bb00_row9_col8\" class=\"data row9 col8\" >0.0810</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row10\" class=\"row_heading level0 row10\" >lda</th>\n","      <td id=\"T_8bb00_row10_col0\" class=\"data row10 col0\" >Linear Discriminant Analysis</td>\n","      <td id=\"T_8bb00_row10_col1\" class=\"data row10 col1\" >0.8177</td>\n","      <td id=\"T_8bb00_row10_col2\" class=\"data row10 col2\" >0.8671</td>\n","      <td id=\"T_8bb00_row10_col3\" class=\"data row10 col3\" >0.4649</td>\n","      <td id=\"T_8bb00_row10_col4\" class=\"data row10 col4\" >0.6676</td>\n","      <td id=\"T_8bb00_row10_col5\" class=\"data row10 col5\" >0.5478</td>\n","      <td id=\"T_8bb00_row10_col6\" class=\"data row10 col6\" >0.4383</td>\n","      <td id=\"T_8bb00_row10_col7\" class=\"data row10 col7\" >0.4497</td>\n","      <td id=\"T_8bb00_row10_col8\" class=\"data row10 col8\" >0.0680</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row11\" class=\"row_heading level0 row11\" >ridge</th>\n","      <td id=\"T_8bb00_row11_col0\" class=\"data row11 col0\" >Ridge Classifier</td>\n","      <td id=\"T_8bb00_row11_col1\" class=\"data row11 col1\" >0.8113</td>\n","      <td id=\"T_8bb00_row11_col2\" class=\"data row11 col2\" >0.8671</td>\n","      <td id=\"T_8bb00_row11_col3\" class=\"data row11 col3\" >0.3721</td>\n","      <td id=\"T_8bb00_row11_col4\" class=\"data row11 col4\" >0.6912</td>\n","      <td id=\"T_8bb00_row11_col5\" class=\"data row11 col5\" >0.4833</td>\n","      <td id=\"T_8bb00_row11_col6\" class=\"data row11 col6\" >0.3805</td>\n","      <td id=\"T_8bb00_row11_col7\" class=\"data row11 col7\" >0.4080</td>\n","      <td id=\"T_8bb00_row11_col8\" class=\"data row11 col8\" >0.0550</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row12\" class=\"row_heading level0 row12\" >nb</th>\n","      <td id=\"T_8bb00_row12_col0\" class=\"data row12 col0\" >Naive Bayes</td>\n","      <td id=\"T_8bb00_row12_col1\" class=\"data row12 col1\" >0.8074</td>\n","      <td id=\"T_8bb00_row12_col2\" class=\"data row12 col2\" >0.8610</td>\n","      <td id=\"T_8bb00_row12_col3\" class=\"data row12 col3\" >0.3337</td>\n","      <td id=\"T_8bb00_row12_col4\" class=\"data row12 col4\" >0.6977</td>\n","      <td id=\"T_8bb00_row12_col5\" class=\"data row12 col5\" >0.4511</td>\n","      <td id=\"T_8bb00_row12_col6\" class=\"data row12 col6\" >0.3516</td>\n","      <td id=\"T_8bb00_row12_col7\" class=\"data row12 col7\" >0.3870</td>\n","      <td id=\"T_8bb00_row12_col8\" class=\"data row12 col8\" >0.0540</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row13\" class=\"row_heading level0 row13\" >qda</th>\n","      <td id=\"T_8bb00_row13_col0\" class=\"data row13 col0\" >Quadratic Discriminant Analysis</td>\n","      <td id=\"T_8bb00_row13_col1\" class=\"data row13 col1\" >0.8052</td>\n","      <td id=\"T_8bb00_row13_col2\" class=\"data row13 col2\" >0.8553</td>\n","      <td id=\"T_8bb00_row13_col3\" class=\"data row13 col3\" >0.3274</td>\n","      <td id=\"T_8bb00_row13_col4\" class=\"data row13 col4\" >0.6912</td>\n","      <td id=\"T_8bb00_row13_col5\" class=\"data row13 col5\" >0.4437</td>\n","      <td id=\"T_8bb00_row13_col6\" class=\"data row13 col6\" >0.3435</td>\n","      <td id=\"T_8bb00_row13_col7\" class=\"data row13 col7\" >0.3791</td>\n","      <td id=\"T_8bb00_row13_col8\" class=\"data row13 col8\" >0.0590</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row14\" class=\"row_heading level0 row14\" >dummy</th>\n","      <td id=\"T_8bb00_row14_col0\" class=\"data row14 col0\" >Dummy Classifier</td>\n","      <td id=\"T_8bb00_row14_col1\" class=\"data row14 col1\" >0.7625</td>\n","      <td id=\"T_8bb00_row14_col2\" class=\"data row14 col2\" >0.5000</td>\n","      <td id=\"T_8bb00_row14_col3\" class=\"data row14 col3\" >0.0000</td>\n","      <td id=\"T_8bb00_row14_col4\" class=\"data row14 col4\" >0.0000</td>\n","      <td id=\"T_8bb00_row14_col5\" class=\"data row14 col5\" >0.0000</td>\n","      <td id=\"T_8bb00_row14_col6\" class=\"data row14 col6\" >0.0000</td>\n","      <td id=\"T_8bb00_row14_col7\" class=\"data row14 col7\" >0.0000</td>\n","      <td id=\"T_8bb00_row14_col8\" class=\"data row14 col8\" >0.0790</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8bb00_level0_row15\" class=\"row_heading level0 row15\" >svm</th>\n","      <td id=\"T_8bb00_row15_col0\" class=\"data row15 col0\" >SVM - Linear Kernel</td>\n","      <td id=\"T_8bb00_row15_col1\" class=\"data row15 col1\" >0.7609</td>\n","      <td id=\"T_8bb00_row15_col2\" class=\"data row15 col2\" >0.7854</td>\n","      <td id=\"T_8bb00_row15_col3\" class=\"data row15 col3\" >0.5452</td>\n","      <td id=\"T_8bb00_row15_col4\" class=\"data row15 col4\" >0.5322</td>\n","      <td id=\"T_8bb00_row15_col5\" class=\"data row15 col5\" >0.4991</td>\n","      <td id=\"T_8bb00_row15_col6\" class=\"data row15 col6\" >0.3534</td>\n","      <td id=\"T_8bb00_row15_col7\" class=\"data row15 col7\" >0.3772</td>\n","      <td id=\"T_8bb00_row15_col8\" class=\"data row15 col8\" >0.0840</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/69 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"346c6a969a7b43d8a57a85eaa5f1cd5a"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/2b70e893a8ba7c0f/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}],"source":["from pycaret.classification import *\n","clf = setup(data=train_df, target='income', session_id=123)\n","best_model = compare_models()"]},{"cell_type":"code","execution_count":null,"id":"VKmOOaTbvtFJ","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":807},"id":"VKmOOaTbvtFJ","executionInfo":{"status":"ok","timestamp":1728262737588,"user_tz":-540,"elapsed":578,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"014d60a0-2d9a-4ca3-a4d9-739c4b35ce0a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7c98cb9145e0>"],"text/html":["<style type=\"text/css\">\n","</style>\n","<table id=\"T_664f5\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_664f5_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n","      <th id=\"T_664f5_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n","      <th id=\"T_664f5_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n","      <th id=\"T_664f5_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n","      <th id=\"T_664f5_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n","      <th id=\"T_664f5_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n","      <th id=\"T_664f5_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n","      <th id=\"T_664f5_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_664f5_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_664f5_row0_col0\" class=\"data row0 col0\" >Light Gradient Boosting Machine</td>\n","      <td id=\"T_664f5_row0_col1\" class=\"data row0 col1\" >0.8699</td>\n","      <td id=\"T_664f5_row0_col2\" class=\"data row0 col2\" >0.9244</td>\n","      <td id=\"T_664f5_row0_col3\" class=\"data row0 col3\" >0.6617</td>\n","      <td id=\"T_664f5_row0_col4\" class=\"data row0 col4\" >0.7875</td>\n","      <td id=\"T_664f5_row0_col5\" class=\"data row0 col5\" >0.7192</td>\n","      <td id=\"T_664f5_row0_col6\" class=\"data row0 col6\" >0.6353</td>\n","      <td id=\"T_664f5_row0_col7\" class=\"data row0 col7\" >0.6394</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["      age  workclass  education.num  marital.status  occupation  relationship  \\\n","0      45          0              5               1           0             0   \n","1      22          5              5               1           4             0   \n","2      39          3              3               1           0             0   \n","3      35          3              0               1           9             0   \n","4      40          3              3               0          11             1   \n","...   ...        ...            ...             ...         ...           ...   \n","7536   20          3              5               1           7             0   \n","7537   52          3              5               0           3             1   \n","7538   50          3              5               0          12             1   \n","7539   26          3              5               1           4             0   \n","7540   29          3              5               1           5             0   \n","\n","      race  capital.gain  capital.loss  hours.per.week  capital  IncomeGroup  \\\n","0        1             0          2080              40    -2080            1   \n","1        4             0             0              40        0            0   \n","2        4             0             0              40        0            0   \n","3        1             0             0              40        0            1   \n","4        4             0             0              40        0            0   \n","...    ...           ...           ...             ...      ...          ...   \n","7536     4             0             0              20        0            0   \n","7537     4             0             0              50        0            0   \n","7538     4             0             0              45        0            0   \n","7539     4             0             0              40        0            0   \n","7540     4             0          1408              40    -1408            0   \n","\n","      sex_Male  income  prediction_label  prediction_score  \n","0         True       0                 0            0.9794  \n","1         True       0                 0            0.9959  \n","2        False       0                 0            0.9661  \n","3         True       1                 0            0.6566  \n","4         True       1                 1            0.6481  \n","...        ...     ...               ...               ...  \n","7536     False       0                 0            0.9997  \n","7537      True       1                 1            0.6406  \n","7538      True       1                 1            0.6208  \n","7539      True       0                 0            0.9928  \n","7540      True       0                 0            0.9939  \n","\n","[7541 rows x 16 columns]\n"]}],"source":["# 테스트 데이터에 대해 예측\n","predictions = predict_model(best_model, data=test_df)\n","# 예측 결과 확인\n","print(predictions)"]},{"cell_type":"markdown","source":["##CatBoost, LightGBM에 대해서 하이퍼 파라미터 튜닝 진행"],"metadata":{"id":"iVK5gUJQrKCj"},"id":"iVK5gUJQrKCj"},{"cell_type":"code","source":["from imblearn.over_sampling import SMOTE\n","from catboost import CatBoostClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import accuracy_score\n","\n","# 데이터 준비\n","X_train = train_df.drop(columns=['income'])\n","y_train = train_df['income']\n","\n","X_test = test_df.drop(columns=['income'])\n","y_test = test_df['income']\n","\n","# SMOTE를 사용하여 오버샘플링\n","smote = SMOTE(random_state=42)\n","\n","# X_train과 y_train에서 오버샘플링 수행\n","X_train_resampled, y_train_resampled = smote.fit_resample(X_train, y_train)\n","\n","# CatBoost 모델 설정\n","catboost_model = CatBoostClassifier(verbose=100)\n","\n","# 하이퍼파라미터 그리드 설정\n","param_grid = {\n","    'iterations': [200, 300],\n","    'learning_rate': [0.05, 0.1],\n","    'depth': [8, 10],\n","    'l2_leaf_reg': [7, 9],\n","    'border_count': [128, 256]\n","}\n","\n","# GridSearchCV 설정\n","grid_search = GridSearchCV(estimator=catboost_model, param_grid=param_grid, scoring='accuracy', cv=3, n_jobs=1, verbose=3)\n","\n","# 오버샘플링된 데이터로 모델 학습\n","grid_search.fit(X_train_resampled, y_train_resampled)\n","\n","# 최적의 하이퍼파라미터 및 성능 출력\n","print(\"최적의 하이퍼파라미터: \", grid_search.best_params_)\n","print(\"최적의 성능 (정확도): \", grid_search.best_score_)\n","\n","# 테스트 데이터에 대한 예측\n","best_model = grid_search.best_estimator_\n","y_pred = best_model.predict(X_test)\n","\n","# 테스트 데이터 정확도 출력\n","print(\"테스트 데이터 정확도: \", accuracy_score(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CCJcGexGiEqj","executionInfo":{"status":"ok","timestamp":1728263500682,"user_tz":-540,"elapsed":532412,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"9907468a-de95-4780-ccdb-3d2ff0aaf194"},"id":"CCJcGexGiEqj","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 32 candidates, totalling 96 fits\n","0:\tlearn: 0.6374701\ttotal: 107ms\tremaining: 21.3s\n","100:\tlearn: 0.2550658\ttotal: 4.87s\tremaining: 4.77s\n","199:\tlearn: 0.2302865\ttotal: 9.01s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.816 total time=   9.4s\n","0:\tlearn: 0.6498316\ttotal: 53.4ms\tremaining: 10.6s\n","100:\tlearn: 0.3091407\ttotal: 4.57s\tremaining: 4.48s\n","199:\tlearn: 0.2886685\ttotal: 7.35s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.876 total time=   7.5s\n","0:\tlearn: 0.6512655\ttotal: 40.8ms\tremaining: 8.11s\n","100:\tlearn: 0.3142572\ttotal: 2.2s\tremaining: 2.16s\n","199:\tlearn: 0.2913782\ttotal: 4.39s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.829 total time=   4.6s\n","0:\tlearn: 0.5882438\ttotal: 24.9ms\tremaining: 4.95s\n","100:\tlearn: 0.2301875\ttotal: 3.2s\tremaining: 3.13s\n","199:\tlearn: 0.2053082\ttotal: 7.42s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.823 total time=   7.6s\n","0:\tlearn: 0.6111061\ttotal: 13.4ms\tremaining: 2.67s\n","100:\tlearn: 0.2872455\ttotal: 1.08s\tremaining: 1.06s\n","199:\tlearn: 0.2621820\ttotal: 2.13s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.886 total time=   2.2s\n","0:\tlearn: 0.6138595\ttotal: 11ms\tremaining: 2.19s\n","100:\tlearn: 0.2897037\ttotal: 1.08s\tremaining: 1.06s\n","199:\tlearn: 0.2626769\ttotal: 2.14s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.839 total time=   2.2s\n","0:\tlearn: 0.6378784\ttotal: 12.7ms\tremaining: 2.54s\n","100:\tlearn: 0.2562528\ttotal: 1.09s\tremaining: 1.07s\n","199:\tlearn: 0.2321904\ttotal: 2.15s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.815 total time=   2.2s\n","0:\tlearn: 0.6503081\ttotal: 11.1ms\tremaining: 2.21s\n","100:\tlearn: 0.3102575\ttotal: 1.1s\tremaining: 1.08s\n","199:\tlearn: 0.2898106\ttotal: 2.14s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.876 total time=   2.2s\n","0:\tlearn: 0.6518776\ttotal: 10.9ms\tremaining: 2.16s\n","100:\tlearn: 0.3141155\ttotal: 1.75s\tremaining: 1.72s\n","199:\tlearn: 0.2923858\ttotal: 4.14s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.830 total time=   4.2s\n","0:\tlearn: 0.5889458\ttotal: 28.4ms\tremaining: 5.64s\n","100:\tlearn: 0.2317971\ttotal: 1.17s\tremaining: 1.14s\n","199:\tlearn: 0.2054901\ttotal: 2.21s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.823 total time=   2.3s\n","0:\tlearn: 0.6119397\ttotal: 11.3ms\tremaining: 2.25s\n","100:\tlearn: 0.2880241\ttotal: 1.09s\tremaining: 1.07s\n","199:\tlearn: 0.2656857\ttotal: 2.14s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.882 total time=   2.2s\n","0:\tlearn: 0.6149293\ttotal: 11ms\tremaining: 2.2s\n","100:\tlearn: 0.2918877\ttotal: 1.08s\tremaining: 1.06s\n","199:\tlearn: 0.2660997\ttotal: 2.14s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.835 total time=   2.2s\n","0:\tlearn: 0.6374701\ttotal: 10.6ms\tremaining: 3.18s\n","100:\tlearn: 0.2550658\ttotal: 1.09s\tremaining: 2.14s\n","200:\tlearn: 0.2301137\ttotal: 2.14s\tremaining: 1.06s\n","299:\tlearn: 0.2155733\ttotal: 3.18s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.820 total time=   3.3s\n","0:\tlearn: 0.6498316\ttotal: 11.1ms\tremaining: 3.33s\n","100:\tlearn: 0.3091407\ttotal: 2.43s\tremaining: 4.79s\n","200:\tlearn: 0.2884534\ttotal: 4.3s\tremaining: 2.12s\n","299:\tlearn: 0.2738558\ttotal: 5.34s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.883 total time=   5.4s\n","0:\tlearn: 0.6512655\ttotal: 10.8ms\tremaining: 3.23s\n","100:\tlearn: 0.3142572\ttotal: 1.1s\tremaining: 2.16s\n","200:\tlearn: 0.2911687\ttotal: 2.17s\tremaining: 1.07s\n","299:\tlearn: 0.2758421\ttotal: 3.24s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.833 total time=   3.3s\n","0:\tlearn: 0.5882438\ttotal: 10.6ms\tremaining: 3.17s\n","100:\tlearn: 0.2301875\ttotal: 1.09s\tremaining: 2.15s\n","200:\tlearn: 0.2050924\ttotal: 2.13s\tremaining: 1.05s\n","299:\tlearn: 0.1877427\ttotal: 3.19s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.827 total time=   3.3s\n","0:\tlearn: 0.6111061\ttotal: 10.9ms\tremaining: 3.26s\n","100:\tlearn: 0.2872455\ttotal: 1.09s\tremaining: 2.15s\n","200:\tlearn: 0.2620851\ttotal: 2.63s\tremaining: 1.3s\n","299:\tlearn: 0.2444249\ttotal: 5.01s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.890 total time=   5.1s\n","0:\tlearn: 0.6138595\ttotal: 31ms\tremaining: 9.27s\n","100:\tlearn: 0.2897037\ttotal: 1.27s\tremaining: 2.51s\n","200:\tlearn: 0.2623052\ttotal: 2.34s\tremaining: 1.15s\n","299:\tlearn: 0.2476118\ttotal: 3.39s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.839 total time=   3.5s\n","0:\tlearn: 0.6378784\ttotal: 10.6ms\tremaining: 3.18s\n","100:\tlearn: 0.2562528\ttotal: 1.08s\tremaining: 2.13s\n","200:\tlearn: 0.2319808\ttotal: 2.15s\tremaining: 1.06s\n","299:\tlearn: 0.2178885\ttotal: 3.18s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.818 total time=   3.3s\n","0:\tlearn: 0.6503081\ttotal: 12ms\tremaining: 3.59s\n","100:\tlearn: 0.3102575\ttotal: 1.1s\tremaining: 2.16s\n","200:\tlearn: 0.2896230\ttotal: 2.15s\tremaining: 1.06s\n","299:\tlearn: 0.2767544\ttotal: 3.19s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.882 total time=   3.3s\n","0:\tlearn: 0.6518776\ttotal: 11.1ms\tremaining: 3.33s\n","100:\tlearn: 0.3141155\ttotal: 2.22s\tremaining: 4.38s\n","200:\tlearn: 0.2922846\ttotal: 4.05s\tremaining: 2s\n","299:\tlearn: 0.2777010\ttotal: 5.1s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.833 total time=   5.2s\n","0:\tlearn: 0.5889458\ttotal: 12.8ms\tremaining: 3.82s\n","100:\tlearn: 0.2317971\ttotal: 1.09s\tremaining: 2.15s\n","200:\tlearn: 0.2051547\ttotal: 2.15s\tremaining: 1.06s\n","299:\tlearn: 0.1895976\ttotal: 3.21s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.826 total time=   3.3s\n","0:\tlearn: 0.6119397\ttotal: 11.1ms\tremaining: 3.31s\n","100:\tlearn: 0.2880241\ttotal: 1.1s\tremaining: 2.17s\n","200:\tlearn: 0.2653167\ttotal: 2.15s\tremaining: 1.06s\n","299:\tlearn: 0.2496884\ttotal: 3.19s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.890 total time=   3.3s\n","0:\tlearn: 0.6149293\ttotal: 13.3ms\tremaining: 3.98s\n","100:\tlearn: 0.2918877\ttotal: 1.09s\tremaining: 2.15s\n","200:\tlearn: 0.2655771\ttotal: 2.47s\tremaining: 1.22s\n","299:\tlearn: 0.2496627\ttotal: 4.91s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.838 total time=   5.0s\n","0:\tlearn: 0.6374701\ttotal: 30.6ms\tremaining: 6.08s\n","100:\tlearn: 0.2409578\ttotal: 2.6s\tremaining: 2.55s\n","199:\tlearn: 0.2156358\ttotal: 4.89s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.820 total time=   5.0s\n","0:\tlearn: 0.6498316\ttotal: 22.8ms\tremaining: 4.53s\n","100:\tlearn: 0.2963581\ttotal: 2.42s\tremaining: 2.37s\n","199:\tlearn: 0.2727020\ttotal: 4.77s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.881 total time=   4.9s\n","0:\tlearn: 0.6512655\ttotal: 14.1ms\tremaining: 2.81s\n","100:\tlearn: 0.3002527\ttotal: 4.33s\tremaining: 4.24s\n","199:\tlearn: 0.2761072\ttotal: 6.57s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.836 total time=   6.7s\n","0:\tlearn: 0.5882438\ttotal: 13.8ms\tremaining: 2.74s\n","100:\tlearn: 0.2156285\ttotal: 2.34s\tremaining: 2.29s\n","199:\tlearn: 0.1836332\ttotal: 4.67s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.827 total time=   4.8s\n","0:\tlearn: 0.6111061\ttotal: 14.2ms\tremaining: 2.83s\n","100:\tlearn: 0.2735888\ttotal: 2.35s\tremaining: 2.3s\n","199:\tlearn: 0.2403832\ttotal: 6.49s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.890 total time=   6.6s\n","0:\tlearn: 0.6138595\ttotal: 14.2ms\tremaining: 2.83s\n","100:\tlearn: 0.2738523\ttotal: 2.85s\tremaining: 2.8s\n","199:\tlearn: 0.2416332\ttotal: 5.21s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.841 total time=   5.3s\n","0:\tlearn: 0.6378784\ttotal: 13.8ms\tremaining: 2.75s\n","100:\tlearn: 0.2422319\ttotal: 2.46s\tremaining: 2.42s\n","199:\tlearn: 0.2174590\ttotal: 4.89s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.820 total time=   5.0s\n","0:\tlearn: 0.6503081\ttotal: 18.6ms\tremaining: 3.69s\n","100:\tlearn: 0.2985164\ttotal: 3.86s\tremaining: 3.79s\n","199:\tlearn: 0.2748361\ttotal: 6.1s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.881 total time=   6.2s\n","0:\tlearn: 0.6518776\ttotal: 13.7ms\tremaining: 2.73s\n","100:\tlearn: 0.3018815\ttotal: 2.35s\tremaining: 2.3s\n","199:\tlearn: 0.2790685\ttotal: 4.56s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.834 total time=   4.7s\n","0:\tlearn: 0.5889458\ttotal: 16.4ms\tremaining: 3.26s\n","100:\tlearn: 0.2174792\ttotal: 2.39s\tremaining: 2.34s\n","199:\tlearn: 0.1867208\ttotal: 6.51s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.826 total time=   6.6s\n","0:\tlearn: 0.6119397\ttotal: 23.1ms\tremaining: 4.6s\n","100:\tlearn: 0.2742306\ttotal: 2.35s\tremaining: 2.31s\n","199:\tlearn: 0.2425641\ttotal: 4.7s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.892 total time=   4.8s\n","0:\tlearn: 0.6149293\ttotal: 13.9ms\tremaining: 2.78s\n","100:\tlearn: 0.2771114\ttotal: 2.33s\tremaining: 2.28s\n","199:\tlearn: 0.2477733\ttotal: 4.86s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.836 total time=   5.0s\n","0:\tlearn: 0.6374701\ttotal: 32.6ms\tremaining: 9.76s\n","100:\tlearn: 0.2409578\ttotal: 3.96s\tremaining: 7.8s\n","200:\tlearn: 0.2154430\ttotal: 6.22s\tremaining: 3.06s\n","299:\tlearn: 0.1976461\ttotal: 8.55s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.825 total time=   8.7s\n","0:\tlearn: 0.6498316\ttotal: 14.8ms\tremaining: 4.42s\n","100:\tlearn: 0.2963581\ttotal: 2.46s\tremaining: 4.85s\n","200:\tlearn: 0.2725409\ttotal: 5.21s\tremaining: 2.57s\n","299:\tlearn: 0.2553605\ttotal: 8.96s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.887 total time=   9.1s\n","0:\tlearn: 0.6512655\ttotal: 14ms\tremaining: 4.18s\n","100:\tlearn: 0.3002527\ttotal: 2.38s\tremaining: 4.69s\n","200:\tlearn: 0.2759112\ttotal: 4.64s\tremaining: 2.29s\n","299:\tlearn: 0.2578228\ttotal: 8.64s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.838 total time=   8.8s\n","0:\tlearn: 0.5882438\ttotal: 13.5ms\tremaining: 4.04s\n","100:\tlearn: 0.2156285\ttotal: 4.95s\tremaining: 9.75s\n","200:\tlearn: 0.1833004\ttotal: 9.75s\tremaining: 4.8s\n","299:\tlearn: 0.1629545\ttotal: 12.8s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.830 total time=  13.0s\n","0:\tlearn: 0.6111061\ttotal: 14ms\tremaining: 4.18s\n","100:\tlearn: 0.2735888\ttotal: 3.88s\tremaining: 7.66s\n","200:\tlearn: 0.2399147\ttotal: 6.52s\tremaining: 3.21s\n","299:\tlearn: 0.2169337\ttotal: 8.96s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.897 total time=   9.1s\n","0:\tlearn: 0.6138595\ttotal: 13.8ms\tremaining: 4.14s\n","100:\tlearn: 0.2738523\ttotal: 2.32s\tremaining: 4.58s\n","200:\tlearn: 0.2414923\ttotal: 4.68s\tremaining: 2.31s\n","100:\tlearn: 0.2422319\ttotal: 2.52s\tremaining: 4.97s\n","200:\tlearn: 0.2172665\ttotal: 4.91s\tremaining: 2.42s\n","299:\tlearn: 0.2004926\ttotal: 7.3s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.824 total time=   7.4s\n","0:\tlearn: 0.6503081\ttotal: 13.8ms\tremaining: 4.14s\n","100:\tlearn: 0.2985164\ttotal: 2.36s\tremaining: 4.66s\n","200:\tlearn: 0.2746199\ttotal: 6.29s\tremaining: 3.1s\n","299:\tlearn: 0.2598770\ttotal: 8.56s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.886 total time=   8.7s\n","0:\tlearn: 0.6518776\ttotal: 13.8ms\tremaining: 4.14s\n","100:\tlearn: 0.3018815\ttotal: 2.45s\tremaining: 4.83s\n","200:\tlearn: 0.2788271\ttotal: 4.78s\tremaining: 2.35s\n","299:\tlearn: 0.2627198\ttotal: 9.01s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.837 total time=   9.2s\n","0:\tlearn: 0.5889458\ttotal: 18.4ms\tremaining: 5.49s\n","100:\tlearn: 0.2174792\ttotal: 3.2s\tremaining: 6.31s\n","200:\tlearn: 0.1865735\ttotal: 5.54s\tremaining: 2.73s\n","299:\tlearn: 0.1683345\ttotal: 7.95s\tremaining: 0us\n","[CV 1/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.829 total time=   8.1s\n","0:\tlearn: 0.6119397\ttotal: 14ms\tremaining: 4.19s\n","100:\tlearn: 0.2742306\ttotal: 2.38s\tremaining: 4.69s\n","200:\tlearn: 0.2421774\ttotal: 5.82s\tremaining: 2.87s\n","299:\tlearn: 0.2223675\ttotal: 8.9s\tremaining: 0us\n","[CV 2/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.896 total time=   9.0s\n","0:\tlearn: 0.6149293\ttotal: 22.8ms\tremaining: 6.81s\n","100:\tlearn: 0.2771114\ttotal: 2.34s\tremaining: 4.61s\n","200:\tlearn: 0.2476218\ttotal: 4.73s\tremaining: 2.33s\n","299:\tlearn: 0.2279160\ttotal: 7.1s\tremaining: 0us\n","[CV 3/3] END border_count=128, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.841 total time=   7.2s\n","0:\tlearn: 0.6347485\ttotal: 11.1ms\tremaining: 2.2s\n","100:\tlearn: 0.2554090\ttotal: 1.14s\tremaining: 1.12s\n","199:\tlearn: 0.2302628\ttotal: 3.6s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.814 total time=   3.7s\n","0:\tlearn: 0.6501458\ttotal: 29.2ms\tremaining: 5.81s\n","100:\tlearn: 0.3092887\ttotal: 1.74s\tremaining: 1.7s\n","199:\tlearn: 0.2876385\ttotal: 2.82s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.877 total time=   2.9s\n","0:\tlearn: 0.6515315\ttotal: 11.2ms\tremaining: 2.23s\n","100:\tlearn: 0.3126980\ttotal: 1.11s\tremaining: 1.09s\n","199:\tlearn: 0.2906072\ttotal: 2.17s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.829 total time=   2.2s\n","0:\tlearn: 0.5836188\ttotal: 10.8ms\tremaining: 2.15s\n","100:\tlearn: 0.2294905\ttotal: 1.12s\tremaining: 1.09s\n","199:\tlearn: 0.2043940\ttotal: 2.16s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.825 total time=   2.2s\n","0:\tlearn: 0.6116781\ttotal: 12.1ms\tremaining: 2.41s\n","100:\tlearn: 0.2879218\ttotal: 1.13s\tremaining: 1.1s\n","199:\tlearn: 0.2619595\ttotal: 2.2s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.886 total time=   2.3s\n","0:\tlearn: 0.6143521\ttotal: 21.8ms\tremaining: 4.33s\n","100:\tlearn: 0.2899654\ttotal: 1.15s\tremaining: 1.13s\n","199:\tlearn: 0.2648882\ttotal: 3.35s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.838 total time=   3.4s\n","0:\tlearn: 0.6354559\ttotal: 31.1ms\tremaining: 6.18s\n","100:\tlearn: 0.2570503\ttotal: 2.02s\tremaining: 1.99s\n","199:\tlearn: 0.2322682\ttotal: 3.1s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.815 total time=   3.2s\n","0:\tlearn: 0.6506081\ttotal: 11ms\tremaining: 2.19s\n","100:\tlearn: 0.3111558\ttotal: 1.1s\tremaining: 1.08s\n","199:\tlearn: 0.2897136\ttotal: 2.16s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.878 total time=   2.2s\n","0:\tlearn: 0.6521155\ttotal: 10.9ms\tremaining: 2.17s\n","100:\tlearn: 0.3122736\ttotal: 1.09s\tremaining: 1.07s\n","199:\tlearn: 0.2910056\ttotal: 2.15s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.828 total time=   2.2s\n","0:\tlearn: 0.5848349\ttotal: 13.4ms\tremaining: 2.67s\n","100:\tlearn: 0.2315915\ttotal: 1.11s\tremaining: 1.09s\n","199:\tlearn: 0.2072521\ttotal: 2.15s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.821 total time=   2.2s\n","0:\tlearn: 0.6124909\ttotal: 11ms\tremaining: 2.18s\n","100:\tlearn: 0.2889040\ttotal: 1.14s\tremaining: 1.11s\n","199:\tlearn: 0.2631355\ttotal: 3.14s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.886 total time=   3.2s\n","0:\tlearn: 0.6153671\ttotal: 31.1ms\tremaining: 6.18s\n","100:\tlearn: 0.2909245\ttotal: 2.41s\tremaining: 2.37s\n","199:\tlearn: 0.2649846\ttotal: 3.49s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.838 total time=   3.6s\n","0:\tlearn: 0.6347485\ttotal: 10.7ms\tremaining: 3.21s\n","100:\tlearn: 0.2554090\ttotal: 1.11s\tremaining: 2.19s\n","200:\tlearn: 0.2301005\ttotal: 2.19s\tremaining: 1.08s\n","299:\tlearn: 0.2151651\ttotal: 3.27s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.820 total time=   3.4s\n","0:\tlearn: 0.6501458\ttotal: 11.3ms\tremaining: 3.38s\n","100:\tlearn: 0.3092887\ttotal: 1.1s\tremaining: 2.17s\n","200:\tlearn: 0.2874924\ttotal: 2.18s\tremaining: 1.07s\n","299:\tlearn: 0.2732986\ttotal: 3.24s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.883 total time=   3.3s\n","0:\tlearn: 0.6515315\ttotal: 13.7ms\tremaining: 4.09s\n","100:\tlearn: 0.3126980\ttotal: 1.12s\tremaining: 2.2s\n","200:\tlearn: 0.2904930\ttotal: 2.81s\tremaining: 1.38s\n","299:\tlearn: 0.2758277\ttotal: 5.32s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.835 total time=   5.4s\n","0:\tlearn: 0.5836188\ttotal: 11.5ms\tremaining: 3.43s\n","100:\tlearn: 0.2294905\ttotal: 1.1s\tremaining: 2.18s\n","200:\tlearn: 0.2043064\ttotal: 2.16s\tremaining: 1.06s\n","299:\tlearn: 0.1866977\ttotal: 3.24s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.827 total time=   3.3s\n","0:\tlearn: 0.6116781\ttotal: 11.2ms\tremaining: 3.34s\n","100:\tlearn: 0.2879218\ttotal: 1.08s\tremaining: 2.13s\n","200:\tlearn: 0.2617829\ttotal: 2.15s\tremaining: 1.06s\n","299:\tlearn: 0.2452519\ttotal: 3.17s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.892 total time=   3.3s\n","0:\tlearn: 0.6143521\ttotal: 11.3ms\tremaining: 3.37s\n","100:\tlearn: 0.2899654\ttotal: 1.09s\tremaining: 2.15s\n","200:\tlearn: 0.2648357\ttotal: 2.16s\tremaining: 1.07s\n","299:\tlearn: 0.2480247\ttotal: 3.24s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.838 total time=   3.3s\n","0:\tlearn: 0.6354559\ttotal: 10.9ms\tremaining: 3.25s\n","100:\tlearn: 0.2570503\ttotal: 2.33s\tremaining: 4.59s\n","200:\tlearn: 0.2320817\ttotal: 4.31s\tremaining: 2.12s\n","299:\tlearn: 0.2180003\ttotal: 5.36s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.820 total time=   5.5s\n","0:\tlearn: 0.6506081\ttotal: 11.1ms\tremaining: 3.33s\n","100:\tlearn: 0.3111558\ttotal: 1.1s\tremaining: 2.17s\n","200:\tlearn: 0.2895929\ttotal: 2.17s\tremaining: 1.07s\n","299:\tlearn: 0.2764656\ttotal: 3.22s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.882 total time=   3.3s\n","0:\tlearn: 0.6521155\ttotal: 11.3ms\tremaining: 3.36s\n","100:\tlearn: 0.3122736\ttotal: 1.11s\tremaining: 2.18s\n","200:\tlearn: 0.2909023\ttotal: 2.17s\tremaining: 1.07s\n","299:\tlearn: 0.2767480\ttotal: 3.23s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.833 total time=   3.3s\n","0:\tlearn: 0.5848349\ttotal: 11.3ms\tremaining: 3.37s\n","100:\tlearn: 0.2315915\ttotal: 1.1s\tremaining: 2.18s\n","200:\tlearn: 0.2070376\ttotal: 2.63s\tremaining: 1.3s\n","299:\tlearn: 0.1919558\ttotal: 5.05s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.825 total time=   5.2s\n","0:\tlearn: 0.6124909\ttotal: 24.7ms\tremaining: 7.38s\n","100:\tlearn: 0.2889040\ttotal: 1.25s\tremaining: 2.46s\n","200:\tlearn: 0.2628885\ttotal: 2.33s\tremaining: 1.15s\n","299:\tlearn: 0.2464811\ttotal: 3.4s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.890 total time=   3.5s\n","0:\tlearn: 0.6153671\ttotal: 11.4ms\tremaining: 3.42s\n","100:\tlearn: 0.2909245\ttotal: 1.11s\tremaining: 2.19s\n","200:\tlearn: 0.2648130\ttotal: 2.2s\tremaining: 1.08s\n","299:\tlearn: 0.2500995\ttotal: 3.26s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=8, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.838 total time=   3.4s\n","0:\tlearn: 0.6347485\ttotal: 14ms\tremaining: 2.79s\n","100:\tlearn: 0.2410030\ttotal: 2.51s\tremaining: 2.46s\n","199:\tlearn: 0.2154973\ttotal: 6.41s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.818 total time=   6.5s\n","0:\tlearn: 0.6501458\ttotal: 37.9ms\tremaining: 7.53s\n","100:\tlearn: 0.2970040\ttotal: 2.59s\tremaining: 2.54s\n","199:\tlearn: 0.2735863\ttotal: 4.92s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.880 total time=   5.0s\n","0:\tlearn: 0.6515315\ttotal: 16.7ms\tremaining: 3.31s\n","100:\tlearn: 0.3000608\ttotal: 2.4s\tremaining: 2.35s\n","199:\tlearn: 0.2765860\ttotal: 4.74s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.05;, score=0.833 total time=   4.8s\n","0:\tlearn: 0.5836188\ttotal: 14.4ms\tremaining: 2.86s\n","100:\tlearn: 0.2151066\ttotal: 4.27s\tremaining: 4.18s\n","199:\tlearn: 0.1827679\ttotal: 6.74s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.826 total time=   6.8s\n","0:\tlearn: 0.6116781\ttotal: 14.4ms\tremaining: 2.87s\n","100:\tlearn: 0.2713643\ttotal: 2.45s\tremaining: 2.4s\n","199:\tlearn: 0.2381222\ttotal: 4.88s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.892 total time=   5.0s\n","0:\tlearn: 0.6143521\ttotal: 15.9ms\tremaining: 3.17s\n","100:\tlearn: 0.2747100\ttotal: 2.46s\tremaining: 2.42s\n","199:\tlearn: 0.2424457\ttotal: 6.5s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=7, learning_rate=0.1;, score=0.840 total time=   6.6s\n","0:\tlearn: 0.6354559\ttotal: 14.3ms\tremaining: 2.85s\n","100:\tlearn: 0.2420555\ttotal: 2.53s\tremaining: 2.48s\n","199:\tlearn: 0.2174793\ttotal: 4.96s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.818 total time=   5.1s\n","0:\tlearn: 0.6506081\ttotal: 14.5ms\tremaining: 2.89s\n","100:\tlearn: 0.2978061\ttotal: 2.48s\tremaining: 2.43s\n","199:\tlearn: 0.2758667\ttotal: 5.41s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.881 total time=   5.6s\n","0:\tlearn: 0.6521155\ttotal: 21.7ms\tremaining: 4.32s\n","100:\tlearn: 0.3020284\ttotal: 3.47s\tremaining: 3.4s\n","199:\tlearn: 0.2790716\ttotal: 5.81s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.05;, score=0.834 total time=   5.9s\n","0:\tlearn: 0.5848349\ttotal: 14.3ms\tremaining: 2.85s\n","100:\tlearn: 0.2171620\ttotal: 2.52s\tremaining: 2.47s\n","199:\tlearn: 0.1872088\ttotal: 4.92s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.826 total time=   5.0s\n","0:\tlearn: 0.6124909\ttotal: 14.2ms\tremaining: 2.83s\n","100:\tlearn: 0.2739849\ttotal: 3.44s\tremaining: 3.37s\n","199:\tlearn: 0.2435644\ttotal: 6.53s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.893 total time=   6.6s\n","0:\tlearn: 0.6153671\ttotal: 14.4ms\tremaining: 2.87s\n","100:\tlearn: 0.2771086\ttotal: 2.4s\tremaining: 2.35s\n","199:\tlearn: 0.2476367\ttotal: 4.81s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=200, l2_leaf_reg=9, learning_rate=0.1;, score=0.838 total time=   4.9s\n","0:\tlearn: 0.6347485\ttotal: 14.1ms\tremaining: 4.21s\n","100:\tlearn: 0.2410030\ttotal: 2.52s\tremaining: 4.96s\n","200:\tlearn: 0.2153786\ttotal: 6.54s\tremaining: 3.22s\n","299:\tlearn: 0.1984256\ttotal: 9.12s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.822 total time=   9.2s\n","0:\tlearn: 0.6501458\ttotal: 14.3ms\tremaining: 4.28s\n","100:\tlearn: 0.2970040\ttotal: 2.53s\tremaining: 4.99s\n","200:\tlearn: 0.2734361\ttotal: 4.9s\tremaining: 2.41s\n","299:\tlearn: 0.2567410\ttotal: 7.35s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.887 total time=   7.5s\n","0:\tlearn: 0.6515315\ttotal: 23.1ms\tremaining: 6.9s\n","100:\tlearn: 0.3000608\ttotal: 4.16s\tremaining: 8.2s\n","200:\tlearn: 0.2764749\ttotal: 6.52s\tremaining: 3.21s\n","299:\tlearn: 0.2579817\ttotal: 8.94s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.05;, score=0.839 total time=   9.1s\n","0:\tlearn: 0.5836188\ttotal: 14ms\tremaining: 4.18s\n","100:\tlearn: 0.2151066\ttotal: 2.54s\tremaining: 5s\n","200:\tlearn: 0.1825922\ttotal: 5.42s\tremaining: 2.67s\n","299:\tlearn: 0.1649005\ttotal: 9.24s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.831 total time=   9.4s\n","0:\tlearn: 0.6116781\ttotal: 14.5ms\tremaining: 4.33s\n","100:\tlearn: 0.2713643\ttotal: 2.53s\tremaining: 4.99s\n","200:\tlearn: 0.2379862\ttotal: 5.13s\tremaining: 2.53s\n","299:\tlearn: 0.2153553\ttotal: 7.65s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.897 total time=   7.8s\n","0:\tlearn: 0.6143521\ttotal: 14.3ms\tremaining: 4.28s\n","100:\tlearn: 0.2747100\ttotal: 3.67s\tremaining: 7.24s\n","200:\tlearn: 0.2421840\ttotal: 6.49s\tremaining: 3.2s\n","299:\tlearn: 0.2213187\ttotal: 8.95s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=7, learning_rate=0.1;, score=0.844 total time=   9.1s\n","0:\tlearn: 0.6354559\ttotal: 15.4ms\tremaining: 4.6s\n","100:\tlearn: 0.2420555\ttotal: 2.63s\tremaining: 5.19s\n","200:\tlearn: 0.2173445\ttotal: 5.26s\tremaining: 2.59s\n","299:\tlearn: 0.2006920\ttotal: 9.59s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.823 total time=   9.7s\n","0:\tlearn: 0.6506081\ttotal: 14.4ms\tremaining: 4.31s\n","100:\tlearn: 0.2978061\ttotal: 2.42s\tremaining: 4.76s\n","200:\tlearn: 0.2756513\ttotal: 4.73s\tremaining: 2.33s\n","299:\tlearn: 0.2601729\ttotal: 7.09s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.05;, score=0.886 total time=   7.2s\n","0:\tlearn: 0.6521155\ttotal: 14.3ms\tremaining: 4.28s\n","100:\tlearn: 0.3020284\ttotal: 2.74s\tremaining: 5.41s\n","200:\tlearn: 0.2788938\ttotal: 6.76s\tremaining: 3.33s\n","100:\tlearn: 0.2171620\ttotal: 2.52s\tremaining: 4.96s\n","200:\tlearn: 0.1869002\ttotal: 5s\tremaining: 2.46s\n","299:\tlearn: 0.1696249\ttotal: 8.26s\tremaining: 0us\n","[CV 1/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.829 total time=   8.4s\n","0:\tlearn: 0.6124909\ttotal: 38ms\tremaining: 11.4s\n","100:\tlearn: 0.2739849\ttotal: 3.36s\tremaining: 6.62s\n","200:\tlearn: 0.2432942\ttotal: 5.8s\tremaining: 2.85s\n","299:\tlearn: 0.2225588\ttotal: 8.16s\tremaining: 0us\n","[CV 2/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.897 total time=   8.3s\n","0:\tlearn: 0.6153671\ttotal: 14.2ms\tremaining: 4.25s\n","100:\tlearn: 0.2771086\ttotal: 2.38s\tremaining: 4.69s\n","200:\tlearn: 0.2473490\ttotal: 5.67s\tremaining: 2.79s\n","299:\tlearn: 0.2281038\ttotal: 8.93s\tremaining: 0us\n","[CV 3/3] END border_count=256, depth=10, iterations=300, l2_leaf_reg=9, learning_rate=0.1;, score=0.841 total time=   9.1s\n","0:\tlearn: 0.6072158\ttotal: 18.9ms\tremaining: 5.66s\n","100:\tlearn: 0.2625758\ttotal: 2.97s\tremaining: 5.85s\n","200:\tlearn: 0.2334014\ttotal: 5.93s\tremaining: 2.92s\n","299:\tlearn: 0.2138893\ttotal: 9.21s\tremaining: 0us\n","최적의 하이퍼파라미터:  {'border_count': 256, 'depth': 10, 'iterations': 300, 'l2_leaf_reg': 7, 'learning_rate': 0.1}\n","최적의 성능 (정확도):  0.8575247680452902\n","테스트 데이터 정확도:  0.8331786235247315\n"]}]},{"cell_type":"code","source":["#LightGBM\n","import lightgbm as lgb\n","from sklearn.model_selection import RandomizedSearchCV\n","from sklearn.metrics import accuracy_score\n","\n","X_train = train_df.drop(columns=['income'])\n","y_train = train_df['income']\n","\n","X_test = test_df.drop(columns=['income'])\n","y_test = test_df['income']\n","\n","lgb_model = lgb.LGBMClassifier()\n","\n","\n","param_dist = {\n","    'n_estimators': [100, 200, 300],\n","    'learning_rate': [0.01, 0.05, 0.1],\n","    'num_leaves': [31, 63, 127],\n","    'max_depth': [-1, 10, 20, 30],\n","    'min_child_samples': [20, 30, 50],\n","    'subsample': [0.6, 0.8, 1.0],\n","    'colsample_bytree': [0.6, 0.8, 1.0],\n","    'reg_alpha': [0, 1, 5],\n","    'reg_lambda': [0, 1, 5]\n","}\n","\n","random_search = RandomizedSearchCV(estimator=lgb_model, param_distributions=param_dist, n_iter=10, scoring='accuracy', cv=5, n_jobs=-1, random_state=42, verbose=3)\n","\n","\n","random_search.fit(X_train, y_train)\n","\n","\n","print(\"최적의 하이퍼파라미터: \", random_search.best_params_)\n","print(\"최적의 성능 (정확도): \", random_search.best_score_)\n","\n","\n","best_model = random_search.best_estimator_\n","y_pred = best_model.predict(X_test)\n","\n","# 성능 평가\n","print(\"테스트 데이터 정확도: \", accuracy_score(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bQL4vPz9qyjQ","executionInfo":{"status":"ok","timestamp":1728263787538,"user_tz":-540,"elapsed":33153,"user":{"displayName":"정의관","userId":"07984772602579906399"}},"outputId":"57b14da9-7b0a-4489-8880-419991e70bdd"},"id":"bQL4vPz9qyjQ","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 10 candidates, totalling 50 fits\n","[LightGBM] [Info] Number of positive: 5943, number of negative: 19077\n","[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.002424 seconds.\n","You can set `force_row_wise=true` to remove the overhead.\n","And if memory is not enough, you can set `force_col_wise=true`.\n","[LightGBM] [Info] Total Bins 519\n","[LightGBM] [Info] Number of data points in the train set: 25020, number of used features: 13\n","[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.237530 -> initscore=-1.166269\n","[LightGBM] [Info] Start training from score -1.166269\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","최적의 하이퍼파라미터:  {'subsample': 0.6, 'reg_lambda': 0, 'reg_alpha': 0, 'num_leaves': 31, 'n_estimators': 100, 'min_child_samples': 50, 'max_depth': 10, 'learning_rate': 0.1, 'colsample_bytree': 0.8}\n","최적의 성능 (정확도):  0.8725819344524381\n","테스트 데이터 정확도:  0.8696459355523141\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"1QjOC0vZt3AW5gFO_bcE3OThYrQiB0mio","timestamp":1728207956898},{"file_id":"1hzcnI6yI-SLUBuAN3PhT3E4NBnJZjB7c","timestamp":1728097552832}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.7"},"widgets":{"application/vnd.jupyter.widget-state+json":{"346c6a969a7b43d8a57a85eaa5f1cd5a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e688576e08d24741910143c116abb9af","IPY_MODEL_23497ea7f452427b8b432fd149fb8015","IPY_MODEL_9218bdfa34de4ff392d28181da97bde6"],"layout":"IPY_MODEL_8beef00757ec475d9b314d423ea88000"}},"e688576e08d24741910143c116abb9af":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5d3cb2d38afa48d98745828f6a6a54de","placeholder":"​","style":"IPY_MODEL_16ba1b6c04ed417dac65afe0f7bae967","value":"Processing: 100%"}},"23497ea7f452427b8b432fd149fb8015":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_1a5c5876c6914b84a49ba540327f6f65","max":69,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6b1b680db1b74edbbcd053cd34a49822","value":69}},"9218bdfa34de4ff392d28181da97bde6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c933c040424d453fa2123bda9fb35612","placeholder":"​","style":"IPY_MODEL_74bf4a884b4c44d58614a785e4ff4f2b","value":" 69/69 [03:20&lt;00:00,  4.09s/it]"}},"8beef00757ec475d9b314d423ea88000":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"5d3cb2d38afa48d98745828f6a6a54de":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"16ba1b6c04ed417dac65afe0f7bae967":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1a5c5876c6914b84a49ba540327f6f65":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b1b680db1b74edbbcd053cd34a49822":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c933c040424d453fa2123bda9fb35612":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"74bf4a884b4c44d58614a785e4ff4f2b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":5}